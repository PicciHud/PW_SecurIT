

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu May 04 17:28:40 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0088                     	;# 
   161     0089                     	;# 
   162     008C                     	;# 
   163     008D                     	;# 
   164     008E                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     009F                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181                           
   182                           	psect	idataBANK0
   183     04F6                     __pidataBANK0:
   184                           
   185                           ;initializer for _randx
   186     04F6  3401               	retlw	1
   187     04F7  3400               	retlw	0
   188     04F8  3400               	retlw	0
   189     04F9  3400               	retlw	0
   190                           
   191                           	psect	strings
   192     0003                     __pstrings:
   193     0003                     stringtab:
   194     0003                     __stringtab:
   195                           
   196                           ;	String table - string pointers are 1 byte each
   197     0003  1BFF               	btfsc	btemp+1,7
   198     0004  280D               	ljmp	stringcode
   199     0005  1383               	bcf	3,7
   200     0006  187F               	btfsc	btemp+1,0
   201     0007  1783               	bsf	3,7
   202     0008  0800               	movf	0,w
   203     0009  0A84               	incf	4,f
   204     000A  1903               	skipnz
   205     000B  0AFF               	incf	btemp+1,f
   206     000C  0008               	return
   207     000D                     stringcode:
   208     000D                     stringdir:
   209     000D  3000               	movlw	high stringdir
   210     000E  008A               	movwf	10
   211     000F  0804               	movf	4,w
   212     0010  0A84               	incf	4,f
   213     0011  0782               	addwf	2,f
   214     0012                     __stringbase:
   215     0012  3400               	retlw	0
   216     0013                     __end_of__stringtab:
   217     0013                     random_string@charset:
   218     0013  3461               	retlw	97
   219     0014  3462               	retlw	98
   220     0015  3463               	retlw	99
   221     0016  3464               	retlw	100
   222     0017  3465               	retlw	101
   223     0018  3466               	retlw	102
   224     0019  3467               	retlw	103
   225     001A  3468               	retlw	104
   226     001B  3469               	retlw	105
   227     001C  346A               	retlw	106
   228     001D  346B               	retlw	107
   229     001E  346C               	retlw	108
   230     001F  346D               	retlw	109
   231     0020  346E               	retlw	110
   232     0021  346F               	retlw	111
   233     0022  3470               	retlw	112
   234     0023  3471               	retlw	113
   235     0024  3472               	retlw	114
   236     0025  3473               	retlw	115
   237     0026  3474               	retlw	116
   238     0027  3475               	retlw	117
   239     0028  3476               	retlw	118
   240     0029  3477               	retlw	119
   241     002A  3478               	retlw	120
   242     002B  3479               	retlw	121
   243     002C  347A               	retlw	122
   244     002D  3441               	retlw	65
   245     002E  3442               	retlw	66
   246     002F  3443               	retlw	67
   247     0030  3444               	retlw	68
   248     0031  3445               	retlw	69
   249     0032  3446               	retlw	70
   250     0033  3447               	retlw	71
   251     0034  3448               	retlw	72
   252     0035  3449               	retlw	73
   253     0036  344A               	retlw	74
   254     0037  344B               	retlw	75
   255     0038  344C               	retlw	76
   256     0039  344D               	retlw	77
   257     003A  344E               	retlw	78
   258     003B  344F               	retlw	79
   259     003C  3450               	retlw	80
   260     003D  3451               	retlw	81
   261     003E  3452               	retlw	82
   262     003F  3453               	retlw	83
   263     0040  3454               	retlw	84
   264     0041  3455               	retlw	85
   265     0042  3456               	retlw	86
   266     0043  3457               	retlw	87
   267     0044  3458               	retlw	88
   268     0045  3459               	retlw	89
   269     0046  345A               	retlw	90
   270     0047  3430               	retlw	48
   271     0048  3431               	retlw	49
   272     0049  3432               	retlw	50
   273     004A  3433               	retlw	51
   274     004B  3434               	retlw	52
   275     004C  3435               	retlw	53
   276     004D  3436               	retlw	54
   277     004E  3437               	retlw	55
   278     004F  3438               	retlw	56
   279     0050  3439               	retlw	57
   280     0051  3400               	retlw	0
   281     0052                     __end_ofrandom_string@charset:
   282     0052                     _keys:
   283     0052  342A               	retlw	42
   284     0053  3407               	retlw	7
   285     0054  3404               	retlw	4
   286     0055  3401               	retlw	1
   287     0056  3400               	retlw	0
   288     0057  3408               	retlw	8
   289     0058  3405               	retlw	5
   290     0059  3402               	retlw	2
   291     005A  3423               	retlw	35
   292     005B  3409               	retlw	9
   293     005C  3406               	retlw	6
   294     005D  3403               	retlw	3
   295     005E                     __end_of_keys:
   296     005E                     _rowMask:
   297     005E  3401               	retlw	1
   298     005F  3402               	retlw	2
   299     0060  3404               	retlw	4
   300     0061  3408               	retlw	8
   301     0062                     __end_of_rowMask:
   302     0062                     _colMask:
   303     0062  34FE               	retlw	254
   304     0063  34FD               	retlw	253
   305     0064  34FB               	retlw	251
   306     0065                     __end_of_colMask:
   307     0009                     _PORTEbits	set	9
   308     0008                     _PORTD	set	8
   309     0006                     _PORTB	set	6
   310     0001                     _TMR0	set	1
   311     000B                     _INTCON	set	11
   312     0089                     _TRISEbits	set	137
   313     0089                     _TRISE	set	137
   314     0088                     _TRISD	set	136
   315     0081                     _OPTION_REG	set	129
   316     0086                     _TRISB	set	134
   317     0065                     STR_1:
   318     0065  3477               	retlw	119	;'w'
   319     0066  3461               	retlw	97	;'a'
   320     0067  3469               	retlw	105	;'i'
   321     0068  3474               	retlw	116	;'t'
   322     0069  3469               	retlw	105	;'i'
   323     006A  346E               	retlw	110	;'n'
   324     006B  3467               	retlw	103	;'g'
   325     006C  342E               	retlw	46	;'.'
   326     006D  342E               	retlw	46	;'.'
   327     006E  342E               	retlw	46	;'.'
   328     006F  3400               	retlw	0
   329     0070                     STR_2:
   330     0070  3432               	retlw	50	;'2'
   331     0071  3438               	retlw	56	;'8'
   332     0072  3437               	retlw	55	;'7'
   333     0073  3435               	retlw	53	;'5'
   334     0074  3433               	retlw	51	;'3'
   335     0075  3400               	retlw	0
   336                           
   337                           	psect	cinit
   338     07DA                     start_initialization:	
   339                           ; #config settings
   340                           
   341     07DA                     __initialization:
   342                           
   343                           ; Initialize objects allocated to BANK0
   344     07DA  120A  118A  24F6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   345     07DF  00BE               	movwf	__pdataBANK0& (0+127)
   346     07E0  120A  118A  24F7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   347     07E5  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   348     07E6  120A  118A  24F8  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   349     07EB  00C0               	movwf	(__pdataBANK0+2)& (0+127)
   350     07EC  120A  118A  24F9  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   351     07F1  00C1               	movwf	(__pdataBANK0+3)& (0+127)
   352                           
   353                           ; Clear objects allocated to BANK0
   354     07F2  01B4               	clrf	__pbssBANK0& (0+127)
   355     07F3  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   356     07F4  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   357     07F5  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   358     07F6  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   359     07F7  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   360     07F8  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   361     07F9  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   362     07FA  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   363     07FB  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   364     07FC                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367     07FC                     __end_of__initialization:
   368     07FC  0183               	clrf	3
   369     07FD  120A  118A  2EFF   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssBANK0
   372     0034                     __pbssBANK0:
   373     0034                     _rowScan:
   374     0034                     	ds	1
   375     0035                     _colScan:
   376     0035                     	ds	1
   377     0036                     _keyok:
   378     0036                     	ds	1
   379     0037                     _keypressed:
   380     0037                     	ds	1
   381     0038                     random_string@str:
   382     0038                     	ds	6
   383                           
   384                           	psect	dataBANK0
   385     003E                     __pdataBANK0:
   386     003E                     _randx:
   387     003E                     	ds	4
   388                           
   389                           	psect	cstackCOMMON
   390     0070                     __pcstackCOMMON:
   391     0070                     ?_lcd_init:
   392     0070                     ?_initKeyPad:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ??_initKeyPad:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_lcd_send:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_random_string:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_lcd_dat:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ??_lcd_dat:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_lcd_cmd:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ??_lcd_cmd:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?___lmul:	
   420                           ; 2 bytes @ 0x0
   421                           
   422     0070                     lcd_send@tipo:	
   423                           ; 4 bytes @ 0x0
   424                           
   425     0070                     ___lmul@multiplier:	
   426                           ; 1 bytes @ 0x0
   427                           
   428                           
   429                           ; 4 bytes @ 0x0
   430     0070                     	ds	1
   431     0071                     ??_lcd_send:
   432                           
   433                           ; 1 bytes @ 0x1
   434     0071                     	ds	1
   435     0072                     lcd_dat@val:
   436     0072                     lcd_cmd@val:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 1 bytes @ 0x2
   441     0072                     	ds	1
   442     0073                     ??_lcd_init:
   443     0073                     ?_lcd_str:	
   444                           ; 1 bytes @ 0x3
   445                           
   446     0073                     lcd_send@dato:	
   447                           ; 1 bytes @ 0x3
   448                           
   449     0073                     lcd_str@str:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 2 bytes @ 0x3
   454     0073                     	ds	1
   455     0074                     ___lmul@multiplicand:
   456                           
   457                           ; 4 bytes @ 0x4
   458     0074                     	ds	1
   459     0075                     ??_lcd_str:
   460                           
   461                           ; 1 bytes @ 0x5
   462     0075                     	ds	1
   463     0076                     lcd_str@i:
   464                           
   465                           ; 1 bytes @ 0x6
   466     0076                     	ds	2
   467     0078                     ??___lmul:
   468                           
   469                           ; 1 bytes @ 0x8
   470     0078                     	ds	1
   471     0079                     ___lmul@product:
   472                           
   473                           ; 4 bytes @ 0x9
   474     0079                     	ds	4
   475     007D                     ??___lwmod:
   476                           
   477                           ; 1 bytes @ 0xD
   478     007D                     	ds	1
   479                           
   480                           	psect	cstackBANK0
   481     0020                     __pcstackBANK0:
   482     0020                     ?_rand:
   483                           
   484                           ; 2 bytes @ 0x0
   485     0020                     	ds	2
   486     0022                     ??_rand:
   487                           
   488                           ; 1 bytes @ 0x2
   489     0022                     	ds	5
   490     0027                     ?___lwmod:
   491     0027                     ___lwmod@divisor:	
   492                           ; 2 bytes @ 0x7
   493                           
   494                           
   495                           ; 2 bytes @ 0x7
   496     0027                     	ds	2
   497     0029                     ___lwmod@dividend:
   498                           
   499                           ; 2 bytes @ 0x9
   500     0029                     	ds	2
   501     002B                     ___lwmod@counter:
   502                           
   503                           ; 1 bytes @ 0xB
   504     002B                     	ds	1
   505     002C                     ??_random_string:
   506                           
   507                           ; 1 bytes @ 0xC
   508     002C                     	ds	1
   509     002D                     random_string@index:
   510                           
   511                           ; 2 bytes @ 0xD
   512     002D                     	ds	2
   513     002F                     random_string@i:
   514                           
   515                           ; 2 bytes @ 0xF
   516     002F                     	ds	2
   517     0031                     ??_main:
   518                           
   519                           ; 1 bytes @ 0x11
   520     0031                     	ds	2
   521     0033                     main@code:
   522                           
   523                           ; 1 bytes @ 0x13
   524     0033                     	ds	1
   525                           
   526                           	psect	maintext
   527     06FF                     __pmaintext:	
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 100 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  code            1   19[BANK0 ] PTR unsigned char 
   538 ;;		 -> random_string@str(6), 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  2   52[None  ] int 
   541 ;; Registers used:
   542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : B00/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       1       0       0       0
   550 ;;      Temps:          0       2       0       0       0
   551 ;;      Totals:         0       3       0       0       0
   552 ;;Total ram usage:        3 bytes
   553 ;; Hardware stack levels required when called: 3
   554 ;; This function calls:
   555 ;;		_initKeyPad
   556 ;;		_lcd_init
   557 ;;		_lcd_send
   558 ;;		_lcd_str
   559 ;;		_random_string
   560 ;; This function is called by:
   561 ;;		Startup code after reset
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565     06FF                     _main:	
   566                           ;psect for function _main
   567                           
   568     06FF                     l1062:	
   569                           ;incstack = 0
   570                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   571                           
   572                           
   573                           ;main.c: 103:     TRISB = 0x00;
   574     06FF  1683               	bsf	3,5	;RP0=1, select bank1
   575     0700  1303               	bcf	3,6	;RP1=0, select bank1
   576     0701  0186               	clrf	6	;volatile
   577     0702                     l1064:
   578                           
   579                           ;main.c: 104:     INTCON |= 0xA0;
   580     0702  30A0               	movlw	160
   581     0703  1283               	bcf	3,5	;RP0=0, select bank0
   582     0704  1303               	bcf	3,6	;RP1=0, select bank0
   583     0705  00B1               	movwf	??_main
   584     0706  0831               	movf	??_main,w
   585     0707  048B               	iorwf	11,f	;volatile
   586     0708                     l1066:
   587                           
   588                           ;main.c: 105:     OPTION_REG = 0x05;
   589     0708  3005               	movlw	5
   590     0709  1683               	bsf	3,5	;RP0=1, select bank1
   591     070A  1303               	bcf	3,6	;RP1=0, select bank1
   592     070B  0081               	movwf	1	;volatile
   593     070C                     l1068:
   594                           
   595                           ;main.c: 106:     TMR0 = 6;
   596     070C  3006               	movlw	6
   597     070D  1283               	bcf	3,5	;RP0=0, select bank0
   598     070E  1303               	bcf	3,6	;RP1=0, select bank0
   599     070F  0081               	movwf	1	;volatile
   600     0710                     l1070:
   601                           
   602                           ;main.c: 109:     lcd_init();
   603     0710  120A  118A  26A9  120A  118A  	fcall	_lcd_init
   604     0715                     l1072:
   605                           
   606                           ;main.c: 110:     initKeyPad();
   607     0715  120A  118A  24FA  120A  118A  	fcall	_initKeyPad
   608     071A                     l1074:
   609                           
   610                           ;main.c: 112:     lcd_send(0x01, 0);
   611     071A  01F0               	clrf	lcd_send@tipo
   612     071B  3001               	movlw	1
   613     071C  120A  118A  2545  120A  118A  	fcall	_lcd_send
   614     0721                     l1076:
   615                           
   616                           ;main.c: 113:     lcd_str("waiting...");
   617     0721  3053               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   618     0722  00F3               	movwf	lcd_str@str
   619     0723  3080               	movlw	128
   620     0724  00F4               	movwf	lcd_str@str+1
   621     0725  120A  118A  256E  120A  118A  	fcall	_lcd_str
   622     072A                     l1078:
   623                           
   624                           ;main.c: 117:     {;main.c: 118:         TRISB = 0x00;
   625     072A  1683               	bsf	3,5	;RP0=1, select bank1
   626     072B  1303               	bcf	3,6	;RP1=0, select bank1
   627     072C  0186               	clrf	6	;volatile
   628     072D                     l1080:
   629                           
   630                           ;main.c: 119:         TRISD = 0x0F;
   631     072D  300F               	movlw	15
   632     072E  0088               	movwf	8	;volatile
   633     072F                     l1082:
   634                           
   635                           ;main.c: 123:         for (colScan = 0; colScan < 3; colScan++)
   636     072F  1283               	bcf	3,5	;RP0=0, select bank0
   637     0730  1303               	bcf	3,6	;RP1=0, select bank0
   638     0731  01B5               	clrf	_colScan
   639     0732                     l1088:
   640                           
   641                           ;main.c: 124:         {;main.c: 126:             PORTB = PORTB | 0x07;
   642     0732  0806               	movf	6,w	;volatile
   643     0733  3807               	iorlw	7
   644     0734  0086               	movwf	6	;volatile
   645     0735                     l1090:
   646                           
   647                           ;main.c: 127:             PORTB = PORTB & colMask[colScan];
   648     0735  0835               	movf	_colScan,w
   649     0736  3E50               	addlw	low ((_colMask-__stringbase)| (0+32768))
   650     0737  0084               	movwf	4
   651     0738  120A  118A  200D  120A  118A  	fcall	stringdir
   652     073D  0506               	andwf	6,w	;volatile
   653     073E  0086               	movwf	6	;volatile
   654     073F                     l1092:
   655                           
   656                           ;main.c: 129:             for (rowScan = 0; rowScan < 4; rowScan++)
   657     073F  01B4               	clrf	_rowScan
   658     0740                     l1098:
   659                           
   660                           ;main.c: 130:             {;main.c: 131:                 if (!(PORTD & rowMask[rowScan])
      +                          )
   661     0740  0834               	movf	_rowScan,w
   662     0741  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   663     0742  0084               	movwf	4
   664     0743  120A  118A  200D  120A  118A  	fcall	stringdir
   665     0748  0508               	andwf	8,w	;volatile
   666     0749  1D03               	btfss	3,2
   667     074A  2F4C               	goto	u381
   668     074B  2F4D               	goto	u380
   669     074C                     u381:
   670     074C  2F74               	goto	l58
   671     074D                     u380:
   672     074D                     l1100:
   673                           
   674                           ;main.c: 132:                 {;main.c: 133:                     _delay((unsigned long)(
      +                          (5)*(20000000/4000.0)));
   675     074D  3021               	movlw	33
   676     074E  1283               	bcf	3,5	;RP0=0, select bank0
   677     074F  1303               	bcf	3,6	;RP1=0, select bank0
   678     0750  00B2               	movwf	??_main+1
   679     0751  3075               	movlw	117
   680     0752  00B1               	movwf	??_main
   681     0753                     u477:
   682     0753  0BB1               	decfsz	??_main,f
   683     0754  2F53               	goto	u477
   684     0755  0BB2               	decfsz	??_main+1,f
   685     0756  2F53               	goto	u477
   686     0757  2F58               	nop2
   687     0758                     l1102:
   688                           
   689                           ;main.c: 135:                     if (!(PORTD & rowMask[rowScan]))
   690     0758  1283               	bcf	3,5	;RP0=0, select bank0
   691     0759  1303               	bcf	3,6	;RP1=0, select bank0
   692     075A  0834               	movf	_rowScan,w
   693     075B  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   694     075C  0084               	movwf	4
   695     075D  120A  118A  200D  120A  118A  	fcall	stringdir
   696     0762  0508               	andwf	8,w	;volatile
   697     0763  1D03               	btfss	3,2
   698     0764  2F66               	goto	u391
   699     0765  2F67               	goto	u390
   700     0766                     u391:
   701     0766  2F74               	goto	l58
   702     0767                     u390:
   703     0767                     l1104:
   704                           
   705                           ;main.c: 136:                     {;main.c: 138:                         keypressed = ro
      +                          wScan + (4 * colScan);
   706     0767  0835               	movf	_colScan,w
   707     0768  00B1               	movwf	??_main
   708     0769  3002               	movlw	2
   709     076A                     u405:
   710     076A  1003               	clrc
   711     076B  0DB1               	rlf	??_main,f
   712     076C  3EFF               	addlw	-1
   713     076D  1D03               	skipz
   714     076E  2F6A               	goto	u405
   715     076F  0834               	movf	_rowScan,w
   716     0770  0731               	addwf	??_main,w
   717     0771  00B7               	movwf	_keypressed
   718     0772                     l1106:
   719                           
   720                           ;main.c: 139:                         keyok = 1;
   721     0772  01B6               	clrf	_keyok
   722     0773  0AB6               	incf	_keyok,f
   723     0774                     l58:	
   724                           ;main.c: 141:                 }
   725                           
   726                           
   727                           ;main.c: 142:             }
   728     0774  3001               	movlw	1
   729     0775  00B1               	movwf	??_main
   730     0776  0831               	movf	??_main,w
   731     0777  07B4               	addwf	_rowScan,f
   732     0778                     l1108:
   733     0778  3004               	movlw	4
   734     0779  0234               	subwf	_rowScan,w
   735     077A  1C03               	skipc
   736     077B  2F7D               	goto	u411
   737     077C  2F7E               	goto	u410
   738     077D                     u411:
   739     077D  2F40               	goto	l1098
   740     077E                     u410:
   741     077E                     l1110:
   742                           
   743                           ;main.c: 144:             if (keyok)
   744     077E  0836               	movf	_keyok,w
   745     077F  1903               	btfsc	3,2
   746     0780  2F82               	goto	u421
   747     0781  2F83               	goto	u420
   748     0782                     u421:
   749     0782  2FCC               	goto	l1134
   750     0783                     u420:
   751     0783                     l1112:
   752                           
   753                           ;main.c: 145:             {;main.c: 147:                 if(keypressed == 8)
   754     0783  3008               	movlw	8
   755     0784  0637               	xorwf	_keypressed,w
   756     0785  1D03               	btfss	3,2
   757     0786  2F88               	goto	u431
   758     0787  2F89               	goto	u430
   759     0788                     u431:
   760     0788  2FA1               	goto	l1120
   761     0789                     u430:
   762     0789                     l1114:
   763                           
   764                           ;main.c: 148:                 {;main.c: 150:                     lcd_send(0x01, 0);
   765     0789  01F0               	clrf	lcd_send@tipo
   766     078A  3001               	movlw	1
   767     078B  120A  118A  2545  120A  118A  	fcall	_lcd_send
   768     0790                     l1116:
   769                           
   770                           ;main.c: 152:                     char* code = random_string();
   771     0790  120A  118A  2662  120A  118A  	fcall	_random_string
   772     0795  1283               	bcf	3,5	;RP0=0, select bank0
   773     0796  1303               	bcf	3,6	;RP1=0, select bank0
   774     0797  00B3               	movwf	main@code
   775     0798                     l1118:
   776                           
   777                           ;main.c: 153:                     lcd_str(code);
   778     0798  0833               	movf	main@code,w
   779     0799  00F3               	movwf	lcd_str@str
   780     079A  3000               	movlw	0
   781     079B  00F4               	movwf	lcd_str@str+1
   782     079C  120A  118A  256E  120A  118A  	fcall	_lcd_str
   783     07A1                     l1120:
   784                           
   785                           ;main.c: 159:                 if (keypressed == 7)
   786     07A1  3007               	movlw	7
   787     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   788     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   789     07A4  0637               	xorwf	_keypressed,w
   790     07A5  1D03               	btfss	3,2
   791     07A6  2FA8               	goto	u441
   792     07A7  2FA9               	goto	u440
   793     07A8                     u441:
   794     07A8  2FB9               	goto	l1126
   795     07A9                     u440:
   796     07A9                     l1122:
   797                           
   798                           ;main.c: 160:                 {;main.c: 161:                     lcd_send(0x01, 0);
   799     07A9  01F0               	clrf	lcd_send@tipo
   800     07AA  3001               	movlw	1
   801     07AB  120A  118A  2545  120A  118A  	fcall	_lcd_send
   802     07B0                     l1124:
   803                           
   804                           ;main.c: 162:                     lcd_str("28753");
   805     07B0  305E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   806     07B1  00F3               	movwf	lcd_str@str
   807     07B2  3080               	movlw	128
   808     07B3  00F4               	movwf	lcd_str@str+1
   809     07B4  120A  118A  256E  120A  118A  	fcall	_lcd_str
   810     07B9                     l1126:
   811                           
   812                           ;main.c: 165:                 keyok = 0;
   813     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   814     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   815     07BB  01B6               	clrf	_keyok
   816     07BC                     l1128:
   817                           
   818                           ;main.c: 168:                 PORTD = PORTD | 0x0F;
   819     07BC  0808               	movf	8,w	;volatile
   820     07BD  380F               	iorlw	15
   821     07BE  0088               	movwf	8	;volatile
   822                           
   823                           ;main.c: 169:                 while ((PORTD & 0x0F) != 0x0F)
   824     07BF  2FC3               	goto	l1132
   825     07C0                     l1130:
   826                           
   827                           ;main.c: 170:                 {;main.c: 171:                     PORTD = PORTD | 0x0F;
   828     07C0  0808               	movf	8,w	;volatile
   829     07C1  380F               	iorlw	15
   830     07C2  0088               	movwf	8	;volatile
   831     07C3                     l1132:	
   832                           ;main.c: 172:                     continue;
   833                           
   834                           
   835                           ;main.c: 169:                 while ((PORTD & 0x0F) != 0x0F)
   836     07C3  300F               	movlw	15
   837     07C4  0508               	andwf	8,w	;volatile
   838     07C5  00B1               	movwf	??_main
   839     07C6  300F               	movlw	15
   840     07C7  0631               	xorwf	??_main,w
   841     07C8  1D03               	btfss	3,2
   842     07C9  2FCB               	goto	u451
   843     07CA  2FCC               	goto	u450
   844     07CB                     u451:
   845     07CB  2FC0               	goto	l1130
   846     07CC                     u450:
   847     07CC                     l1134:
   848                           
   849                           ;main.c: 177:         }
   850     07CC  3001               	movlw	1
   851     07CD  00B1               	movwf	??_main
   852     07CE  0831               	movf	??_main,w
   853     07CF  07B5               	addwf	_colScan,f
   854     07D0                     l1136:
   855     07D0  3003               	movlw	3
   856     07D1  0235               	subwf	_colScan,w
   857     07D2  1C03               	skipc
   858     07D3  2FD5               	goto	u461
   859     07D4  2FD6               	goto	u460
   860     07D5                     u461:
   861     07D5  2F32               	goto	l1088
   862     07D6                     u460:
   863     07D6  2F2A               	goto	l1078
   864     07D7  120A  118A  2800   	ljmp	start
   865     07DA                     __end_of_main:
   866                           
   867                           	psect	text1
   868     0662                     __ptext1:	
   869 ;; *************** function _random_string *****************
   870 ;; Defined at:
   871 ;;		line 274 in file "main.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  index           2   13[BANK0 ] int 
   876 ;;  i               2   15[BANK0 ] int 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      PTR unsigned char 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       4       0       0       0
   888 ;;      Temps:          0       1       0       0       0
   889 ;;      Totals:         0       5       0       0       0
   890 ;;Total ram usage:        5 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 2
   893 ;; This function calls:
   894 ;;		___lwmod
   895 ;;		_rand
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901     0662                     _random_string:	
   902                           ;psect for function _random_string
   903                           
   904     0662                     l1042:	
   905                           ;incstack = 0
   906                           ; Regs used in _random_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   907                           
   908                           
   909                           ;main.c: 275:     static char str[6];;main.c: 276:     const char charset[] = "abcdefghi
      +                          jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";;main.c: 281:     for (int i = 0;
      +                           i < 5; i++) {
   910     0662  1283               	bcf	3,5	;RP0=0, select bank0
   911     0663  1303               	bcf	3,6	;RP1=0, select bank0
   912     0664  01AF               	clrf	random_string@i
   913     0665  01B0               	clrf	random_string@i+1
   914     0666                     l1048:
   915                           
   916                           ;main.c: 282:         int index = rand() % (sizeof(charset) - 1);
   917     0666  303E               	movlw	62
   918     0667  1283               	bcf	3,5	;RP0=0, select bank0
   919     0668  1303               	bcf	3,6	;RP1=0, select bank0
   920     0669  00A7               	movwf	___lwmod@divisor
   921     066A  3000               	movlw	0
   922     066B  00A8               	movwf	___lwmod@divisor+1
   923     066C  120A  118A  261B  120A  118A  	fcall	_rand
   924     0671  1283               	bcf	3,5	;RP0=0, select bank0
   925     0672  1303               	bcf	3,6	;RP1=0, select bank0
   926     0673  0821               	movf	?_rand+1,w
   927     0674  00AA               	movwf	___lwmod@dividend+1
   928     0675  0820               	movf	?_rand,w
   929     0676  00A9               	movwf	___lwmod@dividend
   930     0677  120A  118A  2599  120A  118A  	fcall	___lwmod
   931     067C  1283               	bcf	3,5	;RP0=0, select bank0
   932     067D  1303               	bcf	3,6	;RP1=0, select bank0
   933     067E  0828               	movf	?___lwmod+1,w
   934     067F  00AE               	movwf	random_string@index+1
   935     0680  0827               	movf	?___lwmod,w
   936     0681  00AD               	movwf	random_string@index
   937     0682                     l1050:
   938                           
   939                           ;main.c: 283:         str[i] = charset[index];
   940     0682  082D               	movf	random_string@index,w
   941     0683  3E01               	addlw	low ((random_string@charset-__stringbase)| (0+32768))
   942     0684  0084               	movwf	4
   943     0685  120A  118A  200D  120A  118A  	fcall	stringdir
   944     068A  00AC               	movwf	??_random_string
   945     068B  082F               	movf	random_string@i,w
   946     068C  3E38               	addlw	(low (random_string@str| 0))& (0+255)
   947     068D  0084               	movwf	4
   948     068E  082C               	movf	??_random_string,w
   949     068F  1383               	bcf	3,7	;select IRP bank0
   950     0690  0080               	movwf	0
   951     0691                     l1052:
   952                           
   953                           ;main.c: 284:     }
   954     0691  3001               	movlw	1
   955     0692  07AF               	addwf	random_string@i,f
   956     0693  1803               	skipnc
   957     0694  0AB0               	incf	random_string@i+1,f
   958     0695  3000               	movlw	0
   959     0696  07B0               	addwf	random_string@i+1,f
   960     0697                     l1054:
   961     0697  0830               	movf	random_string@i+1,w
   962     0698  3A80               	xorlw	128
   963     0699  00FF               	movwf	btemp+1
   964     069A  3080               	movlw	128
   965     069B  027F               	subwf	btemp+1,w
   966     069C  1D03               	skipz
   967     069D  2EA0               	goto	u375
   968     069E  3005               	movlw	5
   969     069F  022F               	subwf	random_string@i,w
   970     06A0                     u375:
   971     06A0  1C03               	skipc
   972     06A1  2EA3               	goto	u371
   973     06A2  2EA4               	goto	u370
   974     06A3                     u371:
   975     06A3  2E66               	goto	l1048
   976     06A4                     u370:
   977     06A4                     l1056:
   978                           
   979                           ;main.c: 286:     str[5] = '\0';
   980     06A4  1283               	bcf	3,5	;RP0=0, select bank0
   981     06A5  1303               	bcf	3,6	;RP1=0, select bank0
   982     06A6  01BD               	clrf	random_string@str+5
   983     06A7                     l1058:
   984                           
   985                           ;main.c: 288:     return str;
   986     06A7  3038               	movlw	(low (random_string@str| 0))& (0+255)
   987     06A8                     l98:
   988     06A8  0008               	return
   989     06A9                     __end_of_random_string:
   990                           
   991                           	psect	text2
   992     061B                     __ptext2:	
   993 ;; *************** function _rand *****************
   994 ;; Defined at:
   995 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  2    0[BANK0 ] int 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       2       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       5       0       0       0
  1012 ;;      Totals:         0       7       0       0       0
  1013 ;;Total ram usage:        7 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 1
  1016 ;; This function calls:
  1017 ;;		___lmul
  1018 ;; This function is called by:
  1019 ;;		_random_string
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023     061B                     _rand:	
  1024                           ;psect for function _rand
  1025                           
  1026     061B                     l952:	
  1027                           ;incstack = 0
  1028                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1029                           
  1030     061B  1283               	bcf	3,5	;RP0=0, select bank0
  1031     061C  1303               	bcf	3,6	;RP1=0, select bank0
  1032     061D  0841               	movf	_randx+3,w
  1033     061E  00F3               	movwf	___lmul@multiplier+3
  1034     061F  0840               	movf	_randx+2,w
  1035     0620  00F2               	movwf	___lmul@multiplier+2
  1036     0621  083F               	movf	_randx+1,w
  1037     0622  00F1               	movwf	___lmul@multiplier+1
  1038     0623  083E               	movf	_randx,w
  1039     0624  00F0               	movwf	___lmul@multiplier
  1040     0625  3041               	movlw	65
  1041     0626  00F7               	movwf	___lmul@multiplicand+3
  1042     0627  30C6               	movlw	198
  1043     0628  00F6               	movwf	___lmul@multiplicand+2
  1044     0629  304E               	movlw	78
  1045     062A  00F5               	movwf	___lmul@multiplicand+1
  1046     062B  306D               	movlw	109
  1047     062C  00F4               	movwf	___lmul@multiplicand
  1048     062D  120A  118A  25D5  120A  118A  	fcall	___lmul
  1049     0632  0873               	movf	?___lmul+3,w
  1050     0633  1283               	bcf	3,5	;RP0=0, select bank0
  1051     0634  1303               	bcf	3,6	;RP1=0, select bank0
  1052     0635  00C1               	movwf	_randx+3
  1053     0636  0872               	movf	?___lmul+2,w
  1054     0637  00C0               	movwf	_randx+2
  1055     0638  0871               	movf	?___lmul+1,w
  1056     0639  00BF               	movwf	_randx+1
  1057     063A  0870               	movf	?___lmul,w
  1058     063B  00BE               	movwf	_randx
  1059     063C                     l954:
  1060     063C  3039               	movlw	57
  1061     063D  07BE               	addwf	_randx,f
  1062     063E  3030               	movlw	48
  1063     063F  1803               	skipnc
  1064     0640  3031               	movlw	49
  1065     0641  07BF               	addwf	_randx+1,f
  1066     0642  3000               	movlw	0
  1067     0643  1803               	skipnc
  1068     0644  3001               	movlw	1
  1069     0645  07C0               	addwf	_randx+2,f
  1070     0646  3000               	movlw	0
  1071     0647  1803               	skipnc
  1072     0648  3001               	movlw	1
  1073     0649  07C1               	addwf	_randx+3,f
  1074     064A                     l956:
  1075     064A  083E               	movf	_randx,w
  1076     064B  00A2               	movwf	??_rand
  1077     064C  083F               	movf	_randx+1,w
  1078     064D  00A3               	movwf	??_rand+1
  1079     064E  0840               	movf	_randx+2,w
  1080     064F  00A4               	movwf	??_rand+2
  1081     0650  0841               	movf	_randx+3,w
  1082     0651  00A5               	movwf	??_rand+3
  1083     0652  3010               	movlw	16
  1084     0653  00A6               	movwf	??_rand+4
  1085     0654                     u295:
  1086     0654  0D25               	rlf	??_rand+3,w
  1087     0655  0CA5               	rrf	??_rand+3,f
  1088     0656  0CA4               	rrf	??_rand+2,f
  1089     0657  0CA3               	rrf	??_rand+1,f
  1090     0658  0CA2               	rrf	??_rand,f
  1091     0659                     u290:
  1092     0659  0BA6               	decfsz	??_rand+4,f
  1093     065A  2E54               	goto	u295
  1094     065B  30FF               	movlw	255
  1095     065C  0522               	andwf	??_rand,w
  1096     065D  00A0               	movwf	?_rand
  1097     065E  307F               	movlw	127
  1098     065F  0523               	andwf	??_rand+1,w
  1099     0660  00A1               	movwf	?_rand+1
  1100     0661                     l640:
  1101     0661  0008               	return
  1102     0662                     __end_of_rand:
  1103                           
  1104                           	psect	text3
  1105     05D5                     __ptext3:	
  1106 ;; *************** function ___lmul *****************
  1107 ;; Defined at:
  1108 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  multiplier      4    0[COMMON] unsigned long 
  1111 ;;  multiplicand    4    4[COMMON] unsigned long 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  product         4    9[COMMON] unsigned long 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  4    0[COMMON] unsigned long 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         8       0       0       0       0
  1124 ;;      Locals:         4       0       0       0       0
  1125 ;;      Temps:          1       0       0       0       0
  1126 ;;      Totals:        13       0       0       0       0
  1127 ;;Total ram usage:       13 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_rand
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136     05D5                     ___lmul:	
  1137                           ;psect for function ___lmul
  1138                           
  1139     05D5                     l918:	
  1140                           ;incstack = 0
  1141                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1142                           
  1143     05D5  3000               	movlw	0
  1144     05D6  00FC               	movwf	___lmul@product+3
  1145     05D7  3000               	movlw	0
  1146     05D8  00FB               	movwf	___lmul@product+2
  1147     05D9  3000               	movlw	0
  1148     05DA  00FA               	movwf	___lmul@product+1
  1149     05DB  3000               	movlw	0
  1150     05DC  00F9               	movwf	___lmul@product
  1151     05DD                     l920:
  1152     05DD  1C70               	btfss	___lmul@multiplier,0
  1153     05DE  2DE0               	goto	u241
  1154     05DF  2DE1               	goto	u240
  1155     05E0                     u241:
  1156     05E0  2DF8               	goto	l924
  1157     05E1                     u240:
  1158     05E1                     l922:
  1159     05E1  0874               	movf	___lmul@multiplicand,w
  1160     05E2  07F9               	addwf	___lmul@product,f
  1161     05E3  0875               	movf	___lmul@multiplicand+1,w
  1162     05E4  1103               	clrz
  1163     05E5  1803               	skipnc
  1164     05E6  3E01               	addlw	1
  1165     05E7  1903               	skipnz
  1166     05E8  2DEA               	goto	u251
  1167     05E9  07FA               	addwf	___lmul@product+1,f
  1168     05EA                     u251:
  1169     05EA  0876               	movf	___lmul@multiplicand+2,w
  1170     05EB  1103               	clrz
  1171     05EC  1803               	skipnc
  1172     05ED  3E01               	addlw	1
  1173     05EE  1903               	skipnz
  1174     05EF  2DF1               	goto	u252
  1175     05F0  07FB               	addwf	___lmul@product+2,f
  1176     05F1                     u252:
  1177     05F1  0877               	movf	___lmul@multiplicand+3,w
  1178     05F2  1103               	clrz
  1179     05F3  1803               	skipnc
  1180     05F4  3E01               	addlw	1
  1181     05F5  1903               	skipnz
  1182     05F6  2DF8               	goto	u253
  1183     05F7  07FC               	addwf	___lmul@product+3,f
  1184     05F8                     u253:
  1185     05F8                     l924:
  1186     05F8  3001               	movlw	1
  1187     05F9  00F8               	movwf	??___lmul
  1188     05FA                     u265:
  1189     05FA  1003               	clrc
  1190     05FB  0DF4               	rlf	___lmul@multiplicand,f
  1191     05FC  0DF5               	rlf	___lmul@multiplicand+1,f
  1192     05FD  0DF6               	rlf	___lmul@multiplicand+2,f
  1193     05FE  0DF7               	rlf	___lmul@multiplicand+3,f
  1194     05FF  0BF8               	decfsz	??___lmul,f
  1195     0600  2DFA               	goto	u265
  1196     0601                     l926:
  1197     0601  3001               	movlw	1
  1198     0602                     u275:
  1199     0602  1003               	clrc
  1200     0603  0CF3               	rrf	___lmul@multiplier+3,f
  1201     0604  0CF2               	rrf	___lmul@multiplier+2,f
  1202     0605  0CF1               	rrf	___lmul@multiplier+1,f
  1203     0606  0CF0               	rrf	___lmul@multiplier,f
  1204     0607  3EFF               	addlw	-1
  1205     0608  1D03               	skipz
  1206     0609  2E02               	goto	u275
  1207     060A  0873               	movf	___lmul@multiplier+3,w
  1208     060B  0472               	iorwf	___lmul@multiplier+2,w
  1209     060C  0471               	iorwf	___lmul@multiplier+1,w
  1210     060D  0470               	iorwf	___lmul@multiplier,w
  1211     060E  1D03               	skipz
  1212     060F  2E11               	goto	u281
  1213     0610  2E12               	goto	u280
  1214     0611                     u281:
  1215     0611  2DDD               	goto	l920
  1216     0612                     u280:
  1217     0612                     l928:
  1218     0612  087C               	movf	___lmul@product+3,w
  1219     0613  00F3               	movwf	?___lmul+3
  1220     0614  087B               	movf	___lmul@product+2,w
  1221     0615  00F2               	movwf	?___lmul+2
  1222     0616  087A               	movf	___lmul@product+1,w
  1223     0617  00F1               	movwf	?___lmul+1
  1224     0618  0879               	movf	___lmul@product,w
  1225     0619  00F0               	movwf	?___lmul
  1226     061A                     l198:
  1227     061A  0008               	return
  1228     061B                     __end_of___lmul:
  1229                           
  1230                           	psect	text4
  1231     0599                     __ptext4:	
  1232 ;; *************** function ___lwmod *****************
  1233 ;; Defined at:
  1234 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  divisor         2    7[BANK0 ] unsigned int 
  1237 ;;  dividend        2    9[BANK0 ] unsigned int 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  counter         1   11[BANK0 ] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2    7[BANK0 ] unsigned int 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       4       0       0       0
  1250 ;;      Locals:         0       1       0       0       0
  1251 ;;      Temps:          1       0       0       0       0
  1252 ;;      Totals:         1       5       0       0       0
  1253 ;;Total ram usage:        6 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_random_string
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262     0599                     ___lwmod:	
  1263                           ;psect for function ___lwmod
  1264                           
  1265     0599                     l960:	
  1266                           ;incstack = 0
  1267                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1268                           
  1269     0599  1283               	bcf	3,5	;RP0=0, select bank0
  1270     059A  1303               	bcf	3,6	;RP1=0, select bank0
  1271     059B  0827               	movf	___lwmod@divisor,w
  1272     059C  0428               	iorwf	___lwmod@divisor+1,w
  1273     059D  1903               	btfsc	3,2
  1274     059E  2DA0               	goto	u301
  1275     059F  2DA1               	goto	u300
  1276     05A0                     u301:
  1277     05A0  2DD0               	goto	l978
  1278     05A1                     u300:
  1279     05A1                     l962:
  1280     05A1  01AB               	clrf	___lwmod@counter
  1281     05A2  0AAB               	incf	___lwmod@counter,f
  1282     05A3  2DAF               	goto	l968
  1283     05A4                     l964:
  1284     05A4  3001               	movlw	1
  1285     05A5                     u315:
  1286     05A5  1003               	clrc
  1287     05A6  0DA7               	rlf	___lwmod@divisor,f
  1288     05A7  0DA8               	rlf	___lwmod@divisor+1,f
  1289     05A8  3EFF               	addlw	-1
  1290     05A9  1D03               	skipz
  1291     05AA  2DA5               	goto	u315
  1292     05AB                     l966:
  1293     05AB  3001               	movlw	1
  1294     05AC  00FD               	movwf	??___lwmod
  1295     05AD  087D               	movf	??___lwmod,w
  1296     05AE  07AB               	addwf	___lwmod@counter,f
  1297     05AF                     l968:
  1298     05AF  1FA8               	btfss	___lwmod@divisor+1,7
  1299     05B0  2DB2               	goto	u321
  1300     05B1  2DB3               	goto	u320
  1301     05B2                     u321:
  1302     05B2  2DA4               	goto	l964
  1303     05B3                     u320:
  1304     05B3                     l970:
  1305     05B3  0828               	movf	___lwmod@divisor+1,w
  1306     05B4  022A               	subwf	___lwmod@dividend+1,w
  1307     05B5  1D03               	skipz
  1308     05B6  2DB9               	goto	u335
  1309     05B7  0827               	movf	___lwmod@divisor,w
  1310     05B8  0229               	subwf	___lwmod@dividend,w
  1311     05B9                     u335:
  1312     05B9  1C03               	skipc
  1313     05BA  2DBC               	goto	u331
  1314     05BB  2DBD               	goto	u330
  1315     05BC                     u331:
  1316     05BC  2DC3               	goto	l974
  1317     05BD                     u330:
  1318     05BD                     l972:
  1319     05BD  0827               	movf	___lwmod@divisor,w
  1320     05BE  02A9               	subwf	___lwmod@dividend,f
  1321     05BF  0828               	movf	___lwmod@divisor+1,w
  1322     05C0  1C03               	skipc
  1323     05C1  03AA               	decf	___lwmod@dividend+1,f
  1324     05C2  02AA               	subwf	___lwmod@dividend+1,f
  1325     05C3                     l974:
  1326     05C3  3001               	movlw	1
  1327     05C4                     u345:
  1328     05C4  1003               	clrc
  1329     05C5  0CA8               	rrf	___lwmod@divisor+1,f
  1330     05C6  0CA7               	rrf	___lwmod@divisor,f
  1331     05C7  3EFF               	addlw	-1
  1332     05C8  1D03               	skipz
  1333     05C9  2DC4               	goto	u345
  1334     05CA                     l976:
  1335     05CA  3001               	movlw	1
  1336     05CB  02AB               	subwf	___lwmod@counter,f
  1337     05CC  1D03               	btfss	3,2
  1338     05CD  2DCF               	goto	u351
  1339     05CE  2DD0               	goto	u350
  1340     05CF                     u351:
  1341     05CF  2DB3               	goto	l970
  1342     05D0                     u350:
  1343     05D0                     l978:
  1344     05D0  082A               	movf	___lwmod@dividend+1,w
  1345     05D1  00A8               	movwf	?___lwmod+1
  1346     05D2  0829               	movf	___lwmod@dividend,w
  1347     05D3  00A7               	movwf	?___lwmod
  1348     05D4                     l466:
  1349     05D4  0008               	return
  1350     05D5                     __end_of___lwmod:
  1351                           
  1352                           	psect	text5
  1353     056E                     __ptext5:	
  1354 ;; *************** function _lcd_str *****************
  1355 ;; Defined at:
  1356 ;;		line 235 in file "main.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  str             2    3[COMMON] PTR const unsigned char 
  1359 ;;		 -> random_string@str(6), STR_2(6), STR_1(11), 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  i               1    6[COMMON] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         2       0       0       0       0
  1372 ;;      Locals:         1       0       0       0       0
  1373 ;;      Temps:          1       0       0       0       0
  1374 ;;      Totals:         4       0       0       0       0
  1375 ;;Total ram usage:        4 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 1
  1378 ;; This function calls:
  1379 ;;		_lcd_dat
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385     056E                     _lcd_str:	
  1386                           ;psect for function _lcd_str
  1387                           
  1388     056E                     l1034:	
  1389                           ;incstack = 0
  1390                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1391                           
  1392                           
  1393                           ;main.c: 235: void lcd_str(const char* str);main.c: 236: {;main.c: 237:     unsigned cha
      +                          r i = 0;
  1394     056E  01F6               	clrf	lcd_str@i
  1395                           
  1396                           ;main.c: 239:     while (str[i] != 0)
  1397     056F  2D85               	goto	l1040
  1398     0570                     l1036:
  1399                           
  1400                           ;main.c: 240:     {;main.c: 241:         lcd_dat(str[i]);
  1401     0570  0876               	movf	lcd_str@i,w
  1402     0571  0773               	addwf	lcd_str@str,w
  1403     0572  0084               	movwf	4
  1404     0573  0874               	movf	lcd_str@str+1,w
  1405     0574  1803               	skipnc
  1406     0575  0A74               	incf	lcd_str@str+1,w
  1407     0576  00FF               	movwf	btemp+1
  1408     0577  120A  118A  2003  120A  118A  	fcall	stringtab
  1409     057C  120A  118A  2525  120A  118A  	fcall	_lcd_dat
  1410     0581                     l1038:
  1411                           
  1412                           ;main.c: 242:         i++;
  1413     0581  3001               	movlw	1
  1414     0582  00F5               	movwf	??_lcd_str
  1415     0583  0875               	movf	??_lcd_str,w
  1416     0584  07F6               	addwf	lcd_str@i,f
  1417     0585                     l1040:
  1418                           
  1419                           ;main.c: 239:     while (str[i] != 0)
  1420     0585  0876               	movf	lcd_str@i,w
  1421     0586  0773               	addwf	lcd_str@str,w
  1422     0587  0084               	movwf	4
  1423     0588  0874               	movf	lcd_str@str+1,w
  1424     0589  1803               	skipnc
  1425     058A  0A74               	incf	lcd_str@str+1,w
  1426     058B  1283               	bcf	3,5	;RP0=0, select bank0
  1427     058C  1303               	bcf	3,6	;RP1=0, select bank0
  1428     058D  00FF               	movwf	btemp+1
  1429     058E  120A  118A  2003  120A  118A  	fcall	stringtab
  1430     0593  3A00               	xorlw	0
  1431     0594  1D03               	skipz
  1432     0595  2D97               	goto	u361
  1433     0596  2D98               	goto	u360
  1434     0597                     u361:
  1435     0597  2D70               	goto	l1036
  1436     0598                     u360:
  1437     0598                     l83:
  1438     0598  0008               	return
  1439     0599                     __end_of_lcd_str:
  1440                           
  1441                           	psect	text6
  1442     0525                     __ptext6:	
  1443 ;; *************** function _lcd_dat *****************
  1444 ;; Defined at:
  1445 ;;		line 188 in file "main.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  val             1    wreg     unsigned char 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  val             1    2[COMMON] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         1       0       0       0       0
  1461 ;;      Temps:          2       0       0       0       0
  1462 ;;      Totals:         3       0       0       0       0
  1463 ;;Total ram usage:        3 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_lcd_str
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472     0525                     _lcd_dat:	
  1473                           ;psect for function _lcd_dat
  1474                           
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _lcd_dat: [wreg]
  1478                           ;lcd_dat@val stored from wreg
  1479     0525  00F2               	movwf	lcd_dat@val
  1480     0526                     l932:
  1481                           
  1482                           ;main.c: 188: void lcd_dat(unsigned char val);main.c: 189: {;main.c: 190:     PORTEbits.
      +                          RE1 = 1;
  1483     0526  1283               	bcf	3,5	;RP0=0, select bank0
  1484     0527  1303               	bcf	3,6	;RP1=0, select bank0
  1485     0528  1489               	bsf	9,1	;volatile
  1486     0529                     l934:
  1487                           
  1488                           ;main.c: 192:     PORTD = val;
  1489     0529  0872               	movf	lcd_dat@val,w
  1490     052A  0088               	movwf	8	;volatile
  1491     052B                     l936:
  1492                           
  1493                           ;main.c: 193:     PORTEbits.RE2 = 1;
  1494     052B  1509               	bsf	9,2	;volatile
  1495                           
  1496                           ;main.c: 194:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1497     052C  3014               	movlw	20
  1498     052D  00F1               	movwf	??_lcd_dat+1
  1499     052E  3079               	movlw	121
  1500     052F  00F0               	movwf	??_lcd_dat
  1501     0530                     u487:
  1502     0530  0BF0               	decfsz	??_lcd_dat,f
  1503     0531  2D30               	goto	u487
  1504     0532  0BF1               	decfsz	??_lcd_dat+1,f
  1505     0533  2D30               	goto	u487
  1506     0534  2D35               	nop2
  1507     0535                     l938:
  1508                           
  1509                           ;main.c: 195:     PORTEbits.RE1 = 0;
  1510     0535  1283               	bcf	3,5	;RP0=0, select bank0
  1511     0536  1303               	bcf	3,6	;RP1=0, select bank0
  1512     0537  1089               	bcf	9,1	;volatile
  1513                           
  1514                           ;main.c: 196:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1515     0538  3014               	movlw	20
  1516     0539  00F1               	movwf	??_lcd_dat+1
  1517     053A  3079               	movlw	121
  1518     053B  00F0               	movwf	??_lcd_dat
  1519     053C                     u497:
  1520     053C  0BF0               	decfsz	??_lcd_dat,f
  1521     053D  2D3C               	goto	u497
  1522     053E  0BF1               	decfsz	??_lcd_dat+1,f
  1523     053F  2D3C               	goto	u497
  1524     0540  2D41               	nop2
  1525     0541                     l940:
  1526                           
  1527                           ;main.c: 198:     PORTEbits.RE1 = 1;
  1528     0541  1283               	bcf	3,5	;RP0=0, select bank0
  1529     0542  1303               	bcf	3,6	;RP1=0, select bank0
  1530     0543  1489               	bsf	9,1	;volatile
  1531     0544                     l71:
  1532     0544  0008               	return
  1533     0545                     __end_of_lcd_dat:
  1534                           
  1535                           	psect	text7
  1536     0545                     __ptext7:	
  1537 ;; *************** function _lcd_send *****************
  1538 ;; Defined at:
  1539 ;;		line 247 in file "main.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  dato            1    wreg     unsigned char 
  1542 ;;  tipo            1    0[COMMON] unsigned char 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  dato            1    3[COMMON] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         1       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0
  1556 ;;      Temps:          2       0       0       0       0
  1557 ;;      Totals:         4       0       0       0       0
  1558 ;;Total ram usage:        4 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567     0545                     _lcd_send:	
  1568                           ;psect for function _lcd_send
  1569                           
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _lcd_send: [wreg+status,2+status,0]
  1573                           ;lcd_send@dato stored from wreg
  1574     0545  00F3               	movwf	lcd_send@dato
  1575     0546                     l1014:
  1576                           
  1577                           ;main.c: 247: void lcd_send(char dato, char tipo);main.c: 248: {;main.c: 251:     TRISD 
      +                          = 0x00;
  1578     0546  1683               	bsf	3,5	;RP0=1, select bank1
  1579     0547  1303               	bcf	3,6	;RP1=0, select bank1
  1580     0548  0188               	clrf	8	;volatile
  1581     0549                     l1016:
  1582                           
  1583                           ;main.c: 252:     TRISEbits.TRISE1 = 0;
  1584     0549  1089               	bcf	9,1	;volatile
  1585     054A                     l1018:
  1586                           
  1587                           ;main.c: 253:     TRISEbits.TRISE2 = 0;
  1588     054A  1109               	bcf	9,2	;volatile
  1589     054B                     l1020:
  1590                           
  1591                           ;main.c: 255:     PORTEbits.RE1 = 1;
  1592     054B  1283               	bcf	3,5	;RP0=0, select bank0
  1593     054C  1303               	bcf	3,6	;RP1=0, select bank0
  1594     054D  1489               	bsf	9,1	;volatile
  1595     054E                     l1022:
  1596                           
  1597                           ;main.c: 256:     PORTD = dato;
  1598     054E  0873               	movf	lcd_send@dato,w
  1599     054F  0088               	movwf	8	;volatile
  1600     0550                     l1024:
  1601                           
  1602                           ;main.c: 257:     PORTEbits.RE2 = tipo;
  1603     0550  0C70               	rrf	lcd_send@tipo,w
  1604     0551  1C03               	skipc
  1605     0552  1109               	bcf	9,2	;volatile
  1606     0553  1803               	skipnc
  1607     0554  1509               	bsf	9,2	;volatile
  1608     0555                     l1026:
  1609                           
  1610                           ;main.c: 258:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1611     0555  3014               	movlw	20
  1612     0556  00F2               	movwf	??_lcd_send+1
  1613     0557  3079               	movlw	121
  1614     0558  00F1               	movwf	??_lcd_send
  1615     0559                     u507:
  1616     0559  0BF1               	decfsz	??_lcd_send,f
  1617     055A  2D59               	goto	u507
  1618     055B  0BF2               	decfsz	??_lcd_send+1,f
  1619     055C  2D59               	goto	u507
  1620     055D  2D5E               	nop2
  1621     055E                     l1028:
  1622                           
  1623                           ;main.c: 259:     PORTEbits.RE1 = 0;
  1624     055E  1283               	bcf	3,5	;RP0=0, select bank0
  1625     055F  1303               	bcf	3,6	;RP1=0, select bank0
  1626     0560  1089               	bcf	9,1	;volatile
  1627     0561                     l1030:
  1628                           
  1629                           ;main.c: 260:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1630     0561  3014               	movlw	20
  1631     0562  00F2               	movwf	??_lcd_send+1
  1632     0563  3079               	movlw	121
  1633     0564  00F1               	movwf	??_lcd_send
  1634     0565                     u517:
  1635     0565  0BF1               	decfsz	??_lcd_send,f
  1636     0566  2D65               	goto	u517
  1637     0567  0BF2               	decfsz	??_lcd_send+1,f
  1638     0568  2D65               	goto	u517
  1639     0569  2D6A               	nop2
  1640     056A                     l1032:
  1641                           
  1642                           ;main.c: 261:     PORTEbits.RE1 = 1;
  1643     056A  1283               	bcf	3,5	;RP0=0, select bank0
  1644     056B  1303               	bcf	3,6	;RP1=0, select bank0
  1645     056C  1489               	bsf	9,1	;volatile
  1646     056D                     l86:
  1647     056D  0008               	return
  1648     056E                     __end_of_lcd_send:
  1649                           
  1650                           	psect	text8
  1651     06A9                     __ptext8:	
  1652 ;; *************** function _lcd_init *****************
  1653 ;; Defined at:
  1654 ;;		line 214 in file "main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          2       0       0       0       0
  1671 ;;      Totals:         2       0       0       0       0
  1672 ;;Total ram usage:        2 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 1
  1675 ;; This function calls:
  1676 ;;		_lcd_cmd
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682     06A9                     _lcd_init:	
  1683                           ;psect for function _lcd_init
  1684                           
  1685     06A9                     l982:	
  1686                           ;incstack = 0
  1687                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1688                           
  1689                           
  1690                           ;main.c: 216:     TRISD = 0x00;
  1691     06A9  1683               	bsf	3,5	;RP0=1, select bank1
  1692     06AA  1303               	bcf	3,6	;RP1=0, select bank1
  1693     06AB  0188               	clrf	8	;volatile
  1694                           
  1695                           ;main.c: 217:     TRISE = 0x00;
  1696     06AC  0189               	clrf	9	;volatile
  1697     06AD                     l984:
  1698                           
  1699                           ;main.c: 218:     PORTEbits.RE1 = 0;
  1700     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1701     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1702     06AF  1089               	bcf	9,1	;volatile
  1703     06B0                     l986:
  1704                           
  1705                           ;main.c: 219:     PORTEbits.RE2 = 0;
  1706     06B0  1109               	bcf	9,2	;volatile
  1707     06B1                     l988:
  1708                           
  1709                           ;main.c: 220:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1710     06B1  3082               	movlw	130
  1711     06B2  00F4               	movwf	??_lcd_init+1
  1712     06B3  30DD               	movlw	221
  1713     06B4  00F3               	movwf	??_lcd_init
  1714     06B5                     u527:
  1715     06B5  0BF3               	decfsz	??_lcd_init,f
  1716     06B6  2EB5               	goto	u527
  1717     06B7  0BF4               	decfsz	??_lcd_init+1,f
  1718     06B8  2EB5               	goto	u527
  1719     06B9  2EBA               	nop2
  1720     06BA                     l990:
  1721                           
  1722                           ;main.c: 221:     PORTEbits.RE1 = 1;
  1723     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1724     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1725     06BC  1489               	bsf	9,1	;volatile
  1726     06BD                     l992:
  1727                           
  1728                           ;main.c: 223:     lcd_cmd(0x38);
  1729     06BD  3038               	movlw	56
  1730     06BE  120A  118A  2505  120A  118A  	fcall	_lcd_cmd
  1731     06C3                     l994:
  1732                           
  1733                           ;main.c: 224:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1734     06C3  3021               	movlw	33
  1735     06C4  00F4               	movwf	??_lcd_init+1
  1736     06C5  3076               	movlw	118
  1737     06C6  00F3               	movwf	??_lcd_init
  1738     06C7                     u537:
  1739     06C7  0BF3               	decfsz	??_lcd_init,f
  1740     06C8  2EC7               	goto	u537
  1741     06C9  0BF4               	decfsz	??_lcd_init+1,f
  1742     06CA  2EC7               	goto	u537
  1743     06CB  0000               	nop
  1744     06CC                     l996:
  1745                           
  1746                           ;main.c: 225:     lcd_cmd(0x38);
  1747     06CC  3038               	movlw	56
  1748     06CD  120A  118A  2505  120A  118A  	fcall	_lcd_cmd
  1749     06D2                     l998:
  1750                           
  1751                           ;main.c: 226:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1752     06D2  3007               	movlw	7
  1753     06D3  00F4               	movwf	??_lcd_init+1
  1754     06D4  307D               	movlw	125
  1755     06D5  00F3               	movwf	??_lcd_init
  1756     06D6                     u547:
  1757     06D6  0BF3               	decfsz	??_lcd_init,f
  1758     06D7  2ED6               	goto	u547
  1759     06D8  0BF4               	decfsz	??_lcd_init+1,f
  1760     06D9  2ED6               	goto	u547
  1761     06DA                     l1000:
  1762                           
  1763                           ;main.c: 227:     lcd_cmd(0x38);
  1764     06DA  3038               	movlw	56
  1765     06DB  120A  118A  2505  120A  118A  	fcall	_lcd_cmd
  1766     06E0                     l1002:
  1767                           
  1768                           ;main.c: 228:     lcd_cmd(0x08);
  1769     06E0  3008               	movlw	8
  1770     06E1  120A  118A  2505  120A  118A  	fcall	_lcd_cmd
  1771     06E6                     l1004:
  1772                           
  1773                           ;main.c: 229:     lcd_cmd(0x0F);
  1774     06E6  300F               	movlw	15
  1775     06E7  120A  118A  2505  120A  118A  	fcall	_lcd_cmd
  1776     06EC                     l1006:
  1777                           
  1778                           ;main.c: 230:     lcd_cmd(0x01);
  1779     06EC  3001               	movlw	1
  1780     06ED  120A  118A  2505  120A  118A  	fcall	_lcd_cmd
  1781     06F2                     l1008:
  1782                           
  1783                           ;main.c: 231:     lcd_cmd(0b00001100);
  1784     06F2  300C               	movlw	12
  1785     06F3  120A  118A  2505  120A  118A  	fcall	_lcd_cmd
  1786     06F8                     l1010:
  1787                           
  1788                           ;main.c: 232:     lcd_cmd(0x80);
  1789     06F8  3080               	movlw	128
  1790     06F9  120A  118A  2505  120A  118A  	fcall	_lcd_cmd
  1791     06FE                     l77:
  1792     06FE  0008               	return
  1793     06FF                     __end_of_lcd_init:
  1794                           
  1795                           	psect	text9
  1796     0505                     __ptext9:	
  1797 ;; *************** function _lcd_cmd *****************
  1798 ;; Defined at:
  1799 ;;		line 201 in file "main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  val             1    wreg     unsigned char 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  val             1    2[COMMON] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         0       0       0       0       0
  1814 ;;      Locals:         1       0       0       0       0
  1815 ;;      Temps:          2       0       0       0       0
  1816 ;;      Totals:         3       0       0       0       0
  1817 ;;Total ram usage:        3 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_lcd_init
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826     0505                     _lcd_cmd:	
  1827                           ;psect for function _lcd_cmd
  1828                           
  1829                           
  1830                           ;incstack = 0
  1831                           ; Regs used in _lcd_cmd: [wreg]
  1832                           ;lcd_cmd@val stored from wreg
  1833     0505  00F2               	movwf	lcd_cmd@val
  1834     0506                     l942:
  1835                           
  1836                           ;main.c: 201: void lcd_cmd(unsigned char val);main.c: 202: {;main.c: 203:     PORTEbits.
      +                          RE1 = 1;
  1837     0506  1283               	bcf	3,5	;RP0=0, select bank0
  1838     0507  1303               	bcf	3,6	;RP1=0, select bank0
  1839     0508  1489               	bsf	9,1	;volatile
  1840     0509                     l944:
  1841                           
  1842                           ;main.c: 205:     PORTD = val;
  1843     0509  0872               	movf	lcd_cmd@val,w
  1844     050A  0088               	movwf	8	;volatile
  1845     050B                     l946:
  1846                           
  1847                           ;main.c: 206:     PORTEbits.RE2 = 0;
  1848     050B  1109               	bcf	9,2	;volatile
  1849                           
  1850                           ;main.c: 207:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1851     050C  3014               	movlw	20
  1852     050D  00F1               	movwf	??_lcd_cmd+1
  1853     050E  3079               	movlw	121
  1854     050F  00F0               	movwf	??_lcd_cmd
  1855     0510                     u557:
  1856     0510  0BF0               	decfsz	??_lcd_cmd,f
  1857     0511  2D10               	goto	u557
  1858     0512  0BF1               	decfsz	??_lcd_cmd+1,f
  1859     0513  2D10               	goto	u557
  1860     0514  2D15               	nop2
  1861     0515                     l948:
  1862                           
  1863                           ;main.c: 208:     PORTEbits.RE1 = 0;
  1864     0515  1283               	bcf	3,5	;RP0=0, select bank0
  1865     0516  1303               	bcf	3,6	;RP1=0, select bank0
  1866     0517  1089               	bcf	9,1	;volatile
  1867                           
  1868                           ;main.c: 209:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1869     0518  3014               	movlw	20
  1870     0519  00F1               	movwf	??_lcd_cmd+1
  1871     051A  3079               	movlw	121
  1872     051B  00F0               	movwf	??_lcd_cmd
  1873     051C                     u567:
  1874     051C  0BF0               	decfsz	??_lcd_cmd,f
  1875     051D  2D1C               	goto	u567
  1876     051E  0BF1               	decfsz	??_lcd_cmd+1,f
  1877     051F  2D1C               	goto	u567
  1878     0520  2D21               	nop2
  1879     0521                     l950:
  1880                           
  1881                           ;main.c: 211:     PORTEbits.RE1 = 1;
  1882     0521  1283               	bcf	3,5	;RP0=0, select bank0
  1883     0522  1303               	bcf	3,6	;RP1=0, select bank0
  1884     0523  1489               	bsf	9,1	;volatile
  1885     0524                     l74:
  1886     0524  0008               	return
  1887     0525                     __end_of_lcd_cmd:
  1888                           
  1889                           	psect	text10
  1890     04FA                     __ptext10:	
  1891 ;; *************** function _initKeyPad *****************
  1892 ;; Defined at:
  1893 ;;		line 266 in file "main.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0
  1909 ;;      Temps:          1       0       0       0       0
  1910 ;;      Totals:         1       0       0       0       0
  1911 ;;Total ram usage:        1 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920     04FA                     _initKeyPad:	
  1921                           ;psect for function _initKeyPad
  1922                           
  1923     04FA                     l1012:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _initKeyPad: [wreg+status,2+status,0]
  1926                           
  1927                           
  1928                           ;main.c: 268:     TRISD |= 0x0f;
  1929     04FA  300F               	movlw	15
  1930     04FB  00F0               	movwf	??_initKeyPad
  1931     04FC  0870               	movf	??_initKeyPad,w
  1932     04FD  1683               	bsf	3,5	;RP0=1, select bank1
  1933     04FE  1303               	bcf	3,6	;RP1=0, select bank1
  1934     04FF  0488               	iorwf	8,f	;volatile
  1935                           
  1936                           ;main.c: 269:     TRISB &= ~0x07;
  1937     0500  30F8               	movlw	248
  1938     0501  00F0               	movwf	??_initKeyPad
  1939     0502  0870               	movf	??_initKeyPad,w
  1940     0503  0586               	andwf	6,f	;volatile
  1941     0504                     l89:
  1942     0504  0008               	return
  1943     0505                     __end_of_initKeyPad:
  1944     007E                     btemp	set	126	;btemp
  1945     007E                     wtemp0	set	126
  1946                           
  1947                           	psect	idloc
  1948                           
  1949                           ;Config register IDLOC0 @ 0x2000
  1950                           ;	unspecified, using default values
  1951     2000                     	org	8192
  1952     2000  3FFF               	dw	16383
  1953                           
  1954                           ;Config register IDLOC1 @ 0x2001
  1955                           ;	unspecified, using default values
  1956     2001                     	org	8193
  1957     2001  3FFF               	dw	16383
  1958                           
  1959                           ;Config register IDLOC2 @ 0x2002
  1960                           ;	unspecified, using default values
  1961     2002                     	org	8194
  1962     2002  3FFF               	dw	16383
  1963                           
  1964                           ;Config register IDLOC3 @ 0x2003
  1965                           ;	unspecified, using default values
  1966     2003                     	org	8195
  1967     2003  3FFF               	dw	16383
  1968                           
  1969                           	psect	config
  1970                           
  1971                           ;Config register CONFIG @ 0x2007
  1972                           ;	Oscillator Selection bits
  1973                           ;	FOSC = HS, HS oscillator
  1974                           ;	Watchdog Timer Enable bit
  1975                           ;	WDTE = OFF, WDT disabled
  1976                           ;	Power-up Timer Enable bit
  1977                           ;	PWRTE = ON, PWRT enabled
  1978                           ;	Brown-out Reset Enable bit
  1979                           ;	BOREN = ON, BOR enabled
  1980                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1981                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1982                           ;	Data EEPROM Memory Code Protection bit
  1983                           ;	CPD = OFF, Data EEPROM code protection off
  1984                           ;	Flash Program Memory Write Enable bits
  1985                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1986                           ;	In-Circuit Debugger Mode bit
  1987                           ;	DEBUG = 0x1, unprogrammed default
  1988                           ;	Flash Program Memory Code Protection bit
  1989                           ;	CP = OFF, Code protection off
  1990     2007                     	org	8199
  1991     2007  3FF2               	dw	16370

Data Sizes:
    Strings     17
    Constant    82
    Data        4
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 11
		 -> random_string@str(BANK0[6]), STR_2(CODE[6]), STR_1(CODE[11]), 

    sp__random_string	PTR unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 

    main@code	PTR unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 


Critical Paths under _main in COMMON

    _random_string->___lwmod
    _rand->___lmul
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    _main->_random_string
    _random_string->___lwmod
    ___lwmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1303
                                             17 BANK0      3     3      0
                         _initKeyPad
                           _lcd_init
                           _lcd_send
                            _lcd_str
                      _random_string
 ---------------------------------------------------------------------------------
 (1) _random_string                                        5     5      0     646
                                             12 BANK0      5     5      0
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             13 COMMON     1     1      0
                                              7 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     340
                                              3 COMMON     4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send                                             4     3      1     272
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initKeyPad                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initKeyPad
   _lcd_init
     _lcd_cmd
   _lcd_send
   _lcd_str
     _lcd_dat
   _random_string
     ___lwmod
       _rand (ARG)
         ___lmul
     _rand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu May 04 17:28:40 2023

                           pc 0002                            l71 0544                            l74 0524  
                          l58 0774                            l83 0598                            l77 06FE  
                          l86 056D                            l89 0504                            l98 06A8  
                          fsr 0004                           l198 061A                           l640 0661  
                         l466 05D4                           l920 05DD                           l922 05E1  
                         l940 0541                           l932 0526                           l924 05F8  
                         l950 0521                           l942 0506                           l934 0529  
                         l926 0601                           l918 05D5                           l944 0509  
                         l936 052B                           l960 0599                           l928 0612  
                         l952 061B                           l946 050B                           l938 0535  
                         l970 05B3                           l962 05A1                           l954 063C  
                         l948 0515                           l972 05BD                           l964 05A4  
                         l956 064A                           l990 06BA                           l982 06A9  
                         l974 05C3                           l966 05AB                           l992 06BD  
                         l984 06AD                           l976 05CA                           l968 05AF  
                         l994 06C3                           l986 06B0                           l978 05D0  
                         l996 06CC                           l988 06B1                           l998 06D2  
                         u300 05A1                           u301 05A0                           u320 05B3  
                         u240 05E1                           u321 05B2                           u241 05E0  
                         u330 05BD                           u410 077E                           u331 05BC  
                         u315 05A5                           u251 05EA                           u411 077D  
                         u252 05F1                           u420 0783                           u253 05F8  
                         u421 0782                           u405 076A                           u350 05D0  
                         u430 0789                           u351 05CF                           u335 05B9  
                         u431 0788                           u360 0598                           u280 0612  
                         u440 07A9                           u361 0597                           u345 05C4  
                         u281 0611                           u265 05FA                           u441 07A8  
                         u290 0659                           u370 06A4                           u450 07CC  
                         u507 0559                           u275 0602                           u371 06A3  
                         u451 07CB                           u460 07D6                           u380 074D  
                         u517 0565                           u461 07D5                           u381 074C  
                         u390 0767                           u527 06B5                           u295 0654  
                         u375 06A0                           u391 0766                           u537 06C7  
                         u547 06D6                           u557 0510                           u477 0753  
                         u567 051C                           u487 0530                           u497 053C  
       __end_of_random_string 06A9                           fsr0 0004                           indf 0000  
                        l1000 06DA                          l1010 06F8                          l1002 06E0  
                        l1012 04FA                          l1004 06E6                          l1020 054B  
                        l1100 074D                          l1006 06EC                          l1030 0561  
                        l1022 054E                          l1014 0546                          l1110 077E  
                        l1102 0758                          l1008 06F2                          l1032 056A  
                        l1024 0550                          l1016 0549                          l1040 0585  
                        l1120 07A1                          l1112 0783                          l1104 0767  
                        l1026 0555                          l1018 054A                          l1034 056E  
                        l1050 0682                          l1042 0662                          l1130 07C0  
                        l1122 07A9                          l1114 0789                          l1106 0772  
                        l1028 055E                          l1036 0570                          l1052 0691  
                        l1132 07C3                          l1124 07B0                          l1116 0790  
                        l1108 0778                          l1038 0581                          l1054 0697  
                        l1126 07B9                          l1118 0798                          l1134 07CC  
                        l1070 0710                          l1062 06FF                          l1056 06A4  
                        l1048 0666                          l1136 07D0                          l1128 07BC  
                        l1080 072D                          l1072 0715                          l1064 0702  
                        l1058 06A7                          l1090 0735                          l1082 072F  
                        l1074 071A                          l1066 0708                          l1092 073F  
                        l1076 0721                          l1068 070C                          l1078 072A  
                        l1088 0732                          l1098 0740                          STR_1 0065  
                        STR_2 0070                          _TMR0 0001                          _main 06FF  
                        _keys 0052                          _rand 061B                          btemp 007E  
                        start 0000                  lcd_send@dato 0073                  lcd_send@tipo 0070  
                       ?_main 0070                         ?_rand 0020               __end_of___lwmod 05D5  
                       _PORTB 0006                         _PORTD 0008                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089               __end_of_colMask 0065  
         ___lmul@multiplicand 0074               __end_of_lcd_dat 0545               __end_of_lcd_cmd 0525  
             __end_of_lcd_str 0599                         _keyok 0036                         _randx 003E  
                       pclath 000A               __end_of_rowMask 0062                         status 0003  
                       wtemp0 007E              random_string@str 0038               __initialization 07DA  
                __end_of_main 07DA                  __end_of_keys 005E                  __end_of_rand 0662  
                      ??_main 0031                        ??_rand 0022                        _INTCON 000B  
            __end_of_lcd_init 06FF              __end_of_lcd_send 056E                        ___lmul 05D5  
                   ??___lwmod 007D                     ??_lcd_dat 0070                     ??_lcd_cmd 0070  
                   ??_lcd_str 0075       __end_of__initialization 07FC                __pcstackCOMMON 0070  
                __pidataBANK0 04F6                    __pbssBANK0 0034                    __pmaintext 06FF  
                     ?___lmul 0070                ___lmul@product 0079                     ?_lcd_init 0070  
                   ?_lcd_send 0070                    __stringtab 0003                    _initKeyPad 04FA  
                     ___lwmod 0599                       _colMask 0062                       _colScan 0035  
                     __ptext1 0662                       __ptext2 061B                       __ptext3 05D5  
                     __ptext4 0599                       __ptext5 056E                       __ptext6 0525  
                     __ptext7 0545                       __ptext8 06A9                       __ptext9 0505  
                     _lcd_dat 0525                       _lcd_cmd 0505                       _lcd_str 056E  
                  _keypressed 0037                       _rowMask 005E                       _rowScan 0034  
                  ??_lcd_init 0073                    ??_lcd_send 0071          end_of_initialization 07FC  
          random_string@index 002D                     _PORTEbits 0009                 _random_string 0662  
                   _TRISEbits 0089                    lcd_dat@val 0072                    lcd_cmd@val 0072  
                  lcd_str@str 0073                random_string@i 002F                   ?_initKeyPad 0070  
              __end_of___lmul 061B                ?_random_string 0070           start_initialization 07DA  
                    ??___lmul 0078                   __pdataBANK0 003E                     ___latbits 0002  
               __pcstackBANK0 0020                      ?___lwmod 0027                     __pstrings 0003  
                    ?_lcd_dat 0070               ??_random_string 002C                      ?_lcd_cmd 0070  
                    ?_lcd_str 0073  __end_ofrandom_string@charset 0052                   __stringbase 0012  
           ___lmul@multiplier 0070                  ??_initKeyPad 0070            __end_of__stringtab 0013  
                    __ptext10 04FA                      _lcd_init 06A9                      _lcd_send 0545  
          __end_of_initKeyPad 0505                      main@code 0033                      lcd_str@i 0076  
        random_string@charset 0013              ___lwmod@dividend 0029                     stringcode 000D  
                  _OPTION_REG 0081               ___lwmod@divisor 0027               ___lwmod@counter 002B  
                    stringdir 000D                      stringtab 0003  
