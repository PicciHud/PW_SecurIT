

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jun 15 17:11:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Version 2.40
    45                           ; Generated 17/11/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000D                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0014                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     0087                     	;# 
   118     0088                     	;# 
   119     0089                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     008E                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     009F                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     0007                     	;# 
   147     0008                     	;# 
   148     0009                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000D                     	;# 
   153     000E                     	;# 
   154     000E                     	;# 
   155     000F                     	;# 
   156     0010                     	;# 
   157     0011                     	;# 
   158     0012                     	;# 
   159     0013                     	;# 
   160     0014                     	;# 
   161     0015                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0017                     	;# 
   165     0018                     	;# 
   166     0019                     	;# 
   167     001A                     	;# 
   168     001B                     	;# 
   169     001B                     	;# 
   170     001C                     	;# 
   171     001D                     	;# 
   172     001E                     	;# 
   173     001F                     	;# 
   174     0081                     	;# 
   175     0085                     	;# 
   176     0086                     	;# 
   177     0087                     	;# 
   178     0088                     	;# 
   179     0089                     	;# 
   180     008C                     	;# 
   181     008D                     	;# 
   182     008E                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     010C                     	;# 
   194     010D                     	;# 
   195     010E                     	;# 
   196     010F                     	;# 
   197     018C                     	;# 
   198     018D                     	;# 
   199                           
   200                           	psect	idataBANK0
   201     0F94                     __pidataBANK0:
   202                           
   203                           ;initializer for _randx
   204     0F94  3401               	retlw	1
   205     0F95  3400               	retlw	0
   206     0F96  3400               	retlw	0
   207     0F97  3400               	retlw	0
   208                           
   209                           ;initializer for _numSec
   210     0F98  343C               	retlw	60
   211     0F99  3400               	retlw	0
   212                           
   213                           	psect	strings
   214     036A                     __pstrings:
   215     036A                     stringtab:
   216     036A                     __stringtab:
   217                           
   218                           ;	String table - string pointers are 1 byte each
   219     036A  1BFF               	btfsc	btemp+1,7
   220     036B  2B74               	ljmp	stringcode
   221     036C  1383               	bcf	3,7
   222     036D  187F               	btfsc	btemp+1,0
   223     036E  1783               	bsf	3,7
   224     036F  0800               	movf	0,w
   225     0370  0A84               	incf	4,f
   226     0371  1903               	skipnz
   227     0372  0AFF               	incf	btemp+1,f
   228     0373  0008               	return
   229     0374                     stringcode:
   230     0374                     stringdir:
   231     0374  3003               	movlw	high stringdir
   232     0375  008A               	movwf	10
   233     0376  0804               	movf	4,w
   234     0377  0A84               	incf	4,f
   235     0378  0782               	addwf	2,f
   236     0379                     __stringbase:
   237     0379  3400               	retlw	0
   238     037A                     __end_of__stringtab:
   239     037A                     random_string@charset:
   240     037A  3461               	retlw	97
   241     037B  3462               	retlw	98
   242     037C  3463               	retlw	99
   243     037D  3464               	retlw	100
   244     037E  3465               	retlw	101
   245     037F  3466               	retlw	102
   246     0380  3467               	retlw	103
   247     0381  3468               	retlw	104
   248     0382  3469               	retlw	105
   249     0383  346A               	retlw	106
   250     0384  346B               	retlw	107
   251     0385  346C               	retlw	108
   252     0386  346D               	retlw	109
   253     0387  346E               	retlw	110
   254     0388  346F               	retlw	111
   255     0389  3470               	retlw	112
   256     038A  3471               	retlw	113
   257     038B  3472               	retlw	114
   258     038C  3473               	retlw	115
   259     038D  3474               	retlw	116
   260     038E  3475               	retlw	117
   261     038F  3476               	retlw	118
   262     0390  3477               	retlw	119
   263     0391  3478               	retlw	120
   264     0392  3479               	retlw	121
   265     0393  347A               	retlw	122
   266     0394  3441               	retlw	65
   267     0395  3442               	retlw	66
   268     0396  3443               	retlw	67
   269     0397  3444               	retlw	68
   270     0398  3445               	retlw	69
   271     0399  3446               	retlw	70
   272     039A  3447               	retlw	71
   273     039B  3448               	retlw	72
   274     039C  3449               	retlw	73
   275     039D  344A               	retlw	74
   276     039E  344B               	retlw	75
   277     039F  344C               	retlw	76
   278     03A0  344D               	retlw	77
   279     03A1  344E               	retlw	78
   280     03A2  344F               	retlw	79
   281     03A3  3450               	retlw	80
   282     03A4  3451               	retlw	81
   283     03A5  3452               	retlw	82
   284     03A6  3453               	retlw	83
   285     03A7  3454               	retlw	84
   286     03A8  3455               	retlw	85
   287     03A9  3456               	retlw	86
   288     03AA  3457               	retlw	87
   289     03AB  3458               	retlw	88
   290     03AC  3459               	retlw	89
   291     03AD  345A               	retlw	90
   292     03AE  3430               	retlw	48
   293     03AF  3431               	retlw	49
   294     03B0  3432               	retlw	50
   295     03B1  3433               	retlw	51
   296     03B2  3434               	retlw	52
   297     03B3  3435               	retlw	53
   298     03B4  3436               	retlw	54
   299     03B5  3437               	retlw	55
   300     03B6  3438               	retlw	56
   301     03B7  3439               	retlw	57
   302     03B8  3400               	retlw	0
   303     03B9                     __end_ofrandom_string@charset:
   304     03B9                     _keys:
   305     03B9  342A               	retlw	42
   306     03BA  3407               	retlw	7
   307     03BB  3404               	retlw	4
   308     03BC  3401               	retlw	1
   309     03BD  3400               	retlw	0
   310     03BE  3408               	retlw	8
   311     03BF  3405               	retlw	5
   312     03C0  3402               	retlw	2
   313     03C1  3423               	retlw	35
   314     03C2  3409               	retlw	9
   315     03C3  3406               	retlw	6
   316     03C4  3403               	retlw	3
   317     03C5                     __end_of_keys:
   318     03C5                     _rowMask:
   319     03C5  3401               	retlw	1
   320     03C6  3402               	retlw	2
   321     03C7  3404               	retlw	4
   322     03C8  3408               	retlw	8
   323     03C9                     __end_of_rowMask:
   324     03C9                     _colMask:
   325     03C9  34FE               	retlw	254
   326     03CA  34FD               	retlw	253
   327     03CB  34FB               	retlw	251
   328     03CC                     __end_of_colMask:
   329     001A                     _RCREG	set	26
   330     0006                     _PORTB	set	6
   331     0019                     _TXREG	set	25
   332     000C                     _PIR1	set	12
   333     0018                     _RCSTA	set	24
   334     0008                     _PORTD	set	8
   335     0009                     _PORTEbits	set	9
   336     0001                     _TMR0	set	1
   337     000B                     _INTCON	set	11
   338     0065                     _RCIF	set	101
   339     008C                     _PIE1	set	140
   340     0099                     _SPBRG	set	153
   341     0098                     _TXSTA	set	152
   342     0087                     _TRISC	set	135
   343     0089                     _TRISEbits	set	137
   344     0089                     _TRISE	set	137
   345     0081                     _OPTION_REG	set	129
   346     0088                     _TRISD	set	136
   347     0086                     _TRISB	set	134
   348     03CC                     STR_2:
   349     03CC  3449               	retlw	73	;'I'
   350     03CD  346E               	retlw	110	;'n'
   351     03CE  3473               	retlw	115	;'s'
   352     03CF  3465               	retlw	101	;'e'
   353     03D0  3472               	retlw	114	;'r'
   354     03D1  3474               	retlw	116	;'t'
   355     03D2  3420               	retlw	32	;' '
   356     03D3  3463               	retlw	99	;'c'
   357     03D4  346F               	retlw	111	;'o'
   358     03D5  3464               	retlw	100	;'d'
   359     03D6  3465               	retlw	101	;'e'
   360     03D7  3400               	retlw	0
   361     03D8                     STR_1:
   362     03D8  3477               	retlw	119	;'w'
   363     03D9  3461               	retlw	97	;'a'
   364     03DA  3469               	retlw	105	;'i'
   365     03DB  3474               	retlw	116	;'t'
   366     03DC  3469               	retlw	105	;'i'
   367     03DD  346E               	retlw	110	;'n'
   368     03DE  3467               	retlw	103	;'g'
   369     03DF  342E               	retlw	46	;'.'
   370     03E0  342E               	retlw	46	;'.'
   371     03E1  342E               	retlw	46	;'.'
   372     03E2  3400               	retlw	0
   373     03E3                     STR_3:
   374     03E3  344F               	retlw	79	;'O'
   375     03E4  344B               	retlw	75	;'K'
   376     03E5  3421               	retlw	33	;'!'
   377     03E6  3400               	retlw	0
   378     03E7                     STR_4:
   379     03E7  344B               	retlw	75	;'K'
   380     03E8  344F               	retlw	79	;'O'
   381     03E9  3421               	retlw	33	;'!'
   382     03EA  3400               	retlw	0
   383     03D8                     
   384                           	psect	cinit
   385     0013                     start_initialization:	
   386                           ; #config settings
   387                           
   388     0013                     __initialization:
   389                           
   390                           ; Initialize objects allocated to BANK0
   391     0013  120A  158A  2794  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   392     0018  00E9               	movwf	__pdataBANK0& (0+127)
   393     0019  120A  158A  2795  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   394     001E  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   395     001F  120A  158A  2796  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   396     0024  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   397     0025  120A  158A  2797  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   398     002A  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   399     002B  120A  158A  2798  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   400     0030  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   401     0031  120A  158A  2799  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   402     0036  00EE               	movwf	(__pdataBANK0+5)& (0+127)
   403                           
   404                           ; Clear objects allocated to BANK3
   405     0037  1783               	bsf	3,7	;select IRP bank2
   406     0038  3090               	movlw	low __pbssBANK3
   407     0039  0084               	movwf	4
   408     003A  30C2               	movlw	low (__pbssBANK3+50)
   409     003B  120A  158A  279A  120A  118A  	fcall	clear_ram0
   410                           
   411                           ; Clear objects allocated to BANK1
   412     0040  1383               	bcf	3,7	;select IRP bank0
   413     0041  30A0               	movlw	low __pbssBANK1
   414     0042  0084               	movwf	4
   415     0043  30D2               	movlw	low (__pbssBANK1+50)
   416     0044  120A  158A  279A  120A  118A  	fcall	clear_ram0
   417                           
   418                           ; Clear objects allocated to BANK0
   419     0049  3049               	movlw	low __pbssBANK0
   420     004A  0084               	movwf	4
   421     004B  3069               	movlw	low (__pbssBANK0+32)
   422     004C  120A  158A  279A  120A  118A  	fcall	clear_ram0
   423                           
   424                           ; Clear objects allocated to COMMON
   425     0051  01F0               	clrf	__pbssCOMMON& (0+127)
   426     0052  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   427     0053  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   428     0054  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   429     0055  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   430     0056                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433     0056                     __end_of__initialization:
   434     0056  0183               	clrf	3
   435     0057  120A  118A  285A   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438     0070                     __pbssCOMMON:
   439     0070                     _rowScan:
   440     0070                     	ds	1
   441     0071                     _colScan:
   442     0071                     	ds	1
   443     0072                     _boh:
   444     0072                     	ds	1
   445     0073                     _keyok:
   446     0073                     	ds	1
   447     0074                     _keypressed:
   448     0074                     	ds	1
   449                           
   450                           	psect	bssBANK0
   451     0049                     __pbssBANK0:
   452     0049                     _countSec:
   453     0049                     	ds	2
   454     004B                     _countOn:
   455     004B                     	ds	2
   456     004D                     _i:
   457     004D                     	ds	2
   458     004F                     _l:
   459     004F                     	ds	1
   460     0050                     _first:
   461     0050                     	ds	1
   462     0051                     _stop_wait:
   463     0051                     	ds	1
   464     0052                     _code_generate_send:
   465     0052                     	ds	1
   466     0053                     _received:
   467     0053                     	ds	1
   468     0054                     _tmpkpress:
   469     0054                     	ds	1
   470     0055                     _code_keyboard:
   471     0055                     	ds	10
   472     005F                     random_string@str:
   473     005F                     	ds	8
   474     0067                     _buff:
   475     0067                     	ds	2
   476                           
   477                           	psect	dataBANK0
   478     0069                     __pdataBANK0:
   479     0069                     _randx:
   480     0069                     	ds	4
   481     006D                     _numSec:
   482     006D                     	ds	2
   483                           
   484                           	psect	bssBANK1
   485     00A0                     __pbssBANK1:
   486     00A0                     _dato:
   487     00A0                     	ds	50
   488                           
   489                           	psect	bssBANK3
   490     0190                     __pbssBANK3:
   491     0190                     _dataParsed:
   492     0190                     	ds	50
   493                           
   494                           	psect	clrtext
   495     0F9A                     clear_ram0:	
   496                           ;	Called with FSR containing the base address, and
   497                           ;	W with the last address+1
   498                           
   499     0F9A  0064               	clrwdt	;clear the watchdog before getting into this loop
   500     0F9B                     clrloop0:
   501     0F9B  0180               	clrf	0	;clear RAM location pointed to by FSR
   502     0F9C  0A84               	incf	4,f	;increment pointer
   503     0F9D  0604               	xorwf	4,w	;XOR with final address
   504     0F9E  1903               	btfsc	3,2	;have we reached the end yet?
   505     0F9F  3400               	retlw	0	;all done for this memory range, return
   506     0FA0  0604               	xorwf	4,w	;XOR again to restore value
   507     0FA1  2F9B               	goto	clrloop0	;do the next byte
   508                           
   509                           	psect	cstackBANK1
   510     00D2                     __pcstackBANK1:
   511     00D2                     ??_main:
   512                           
   513                           ; 1 bytes @ 0x0
   514     00D2                     	ds	3
   515     00D5                     main@code:
   516                           
   517                           ; 1 bytes @ 0x3
   518     00D5                     	ds	1
   519     00D6                     main@kpress:
   520                           
   521                           ; 1 bytes @ 0x4
   522     00D6                     	ds	1
   523                           
   524                           	psect	cstackCOMMON
   525     0075                     __pcstackCOMMON:
   526     0075                     ?_lcd_init:
   527     0075                     ?_initKeyPad:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0075                     ?_keyPressed:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0075                     ?_random_string:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0075                     ?_UART_TxString:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0075                     ?_lcd_dat:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0075                     ?_lcd_cmd:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0075                     ?_UART_TxChar:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0075                     ?_ISR:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0075                     ??_ISR:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0075                     ?_main:	
   555                           ; 1 bytes @ 0x0
   556                           
   557                           
   558                           ; 2 bytes @ 0x0
   559     0075                     	ds	5
   560                           
   561                           	psect	cstackBANK0
   562     0020                     __pcstackBANK0:
   563     0020                     ??_initKeyPad:
   564     0020                     ?_lcd_send:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0020                     ??_keyPressed:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0020                     ?_parseData:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0020                     ?_srand:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0020                     ??_lcd_dat:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0020                     ??_lcd_cmd:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0020                     ??_UART_TxChar:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0020                     ?_strcmp:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0020                     ?___lwdiv:	
   589                           ; 2 bytes @ 0x0
   590                           
   591     0020                     ?___lmul:	
   592                           ; 2 bytes @ 0x0
   593                           
   594     0020                     ?___aldiv:	
   595                           ; 4 bytes @ 0x0
   596                           
   597     0020                     lcd_send@tipo:	
   598                           ; 4 bytes @ 0x0
   599                           
   600     0020                     parseData@dataParsed:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0020                     strcmp@s2:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0020                     ___lwdiv@divisor:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0020                     srand@x:	
   610                           ; 2 bytes @ 0x0
   611                           
   612     0020                     ___lmul@multiplier:	
   613                           ; 2 bytes @ 0x0
   614                           
   615     0020                     ___aldiv@divisor:	
   616                           ; 4 bytes @ 0x0
   617                           
   618                           
   619                           ; 4 bytes @ 0x0
   620     0020                     	ds	1
   621     0021                     ??_lcd_send:
   622     0021                     ??_parseData:	
   623                           ; 1 bytes @ 0x1
   624                           
   625     0021                     UART_TxChar@ch:	
   626                           ; 1 bytes @ 0x1
   627                           
   628                           
   629                           ; 1 bytes @ 0x1
   630     0021                     	ds	1
   631     0022                     ??_UART_TxString:
   632     0022                     ??_strcmp:	
   633                           ; 1 bytes @ 0x2
   634                           
   635     0022                     ??_srand:	
   636                           ; 1 bytes @ 0x2
   637                           
   638     0022                     lcd_dat@val:	
   639                           ; 1 bytes @ 0x2
   640                           
   641     0022                     lcd_cmd@val:	
   642                           ; 1 bytes @ 0x2
   643                           
   644     0022                     ___lwdiv@dividend:	
   645                           ; 1 bytes @ 0x2
   646                           
   647                           
   648                           ; 2 bytes @ 0x2
   649     0022                     	ds	1
   650     0023                     ??_lcd_init:
   651     0023                     ?_lcd_str:	
   652                           ; 1 bytes @ 0x3
   653                           
   654     0023                     lcd_send@dato:	
   655                           ; 1 bytes @ 0x3
   656                           
   657     0023                     UART_TxString@str:	
   658                           ; 1 bytes @ 0x3
   659                           
   660     0023                     keyPressed@tmp:	
   661                           ; 1 bytes @ 0x3
   662                           
   663     0023                     lcd_str@str:	
   664                           ; 1 bytes @ 0x3
   665                           
   666                           
   667                           ; 2 bytes @ 0x3
   668     0023                     	ds	1
   669     0024                     ??___lwdiv:
   670     0024                     UART_TxString@i:	
   671                           ; 1 bytes @ 0x4
   672                           
   673     0024                     strcmp@r:	
   674                           ; 1 bytes @ 0x4
   675                           
   676     0024                     parseData@j:	
   677                           ; 1 bytes @ 0x4
   678                           
   679     0024                     ___lmul@multiplicand:	
   680                           ; 2 bytes @ 0x4
   681                           
   682     0024                     ___aldiv@dividend:	
   683                           ; 4 bytes @ 0x4
   684                           
   685                           
   686                           ; 4 bytes @ 0x4
   687     0024                     	ds	1
   688     0025                     ??_lcd_str:
   689     0025                     ___lwdiv@counter:	
   690                           ; 1 bytes @ 0x5
   691                           
   692     0025                     strcmp@s1:	
   693                           ; 1 bytes @ 0x5
   694                           
   695                           
   696                           ; 1 bytes @ 0x5
   697     0025                     	ds	1
   698     0026                     lcd_str@i:
   699     0026                     parseData@i:	
   700                           ; 1 bytes @ 0x6
   701                           
   702     0026                     ___lwdiv@quotient:	
   703                           ; 2 bytes @ 0x6
   704                           
   705                           
   706                           ; 2 bytes @ 0x6
   707     0026                     	ds	2
   708     0028                     ??___lmul:
   709     0028                     ??___aldiv:	
   710                           ; 1 bytes @ 0x8
   711                           
   712     0028                     parseData@data:	
   713                           ; 1 bytes @ 0x8
   714                           
   715                           
   716                           ; 1 bytes @ 0x8
   717     0028                     	ds	1
   718     0029                     ___aldiv@counter:
   719     0029                     ___lmul@product:	
   720                           ; 1 bytes @ 0x9
   721                           
   722                           
   723                           ; 4 bytes @ 0x9
   724     0029                     	ds	1
   725     002A                     ___aldiv@sign:
   726                           
   727                           ; 1 bytes @ 0xA
   728     002A                     	ds	1
   729     002B                     ___aldiv@quotient:
   730                           
   731                           ; 4 bytes @ 0xB
   732     002B                     	ds	2
   733     002D                     ?_rand:
   734                           
   735                           ; 2 bytes @ 0xD
   736     002D                     	ds	2
   737     002F                     ?_UART_init:
   738     002F                     ??_rand:	
   739                           ; 1 bytes @ 0xF
   740                           
   741     002F                     UART_init@baudrate:	
   742                           ; 1 bytes @ 0xF
   743                           
   744                           
   745                           ; 4 bytes @ 0xF
   746     002F                     	ds	4
   747     0033                     ??_UART_init:
   748                           
   749                           ; 1 bytes @ 0x13
   750     0033                     	ds	1
   751     0034                     ?___lwmod:
   752     0034                     ___lwmod@divisor:	
   753                           ; 2 bytes @ 0x14
   754                           
   755                           
   756                           ; 2 bytes @ 0x14
   757     0034                     	ds	2
   758     0036                     ___lwmod@dividend:
   759                           
   760                           ; 2 bytes @ 0x16
   761     0036                     	ds	2
   762     0038                     ??___lwmod:
   763                           
   764                           ; 1 bytes @ 0x18
   765     0038                     	ds	1
   766     0039                     ___lwmod@counter:
   767                           
   768                           ; 1 bytes @ 0x19
   769     0039                     	ds	1
   770     003A                     ??_random_string:
   771     003A                     ?_utoa:	
   772                           ; 1 bytes @ 0x1A
   773                           
   774     003A                     utoa@val:	
   775                           ; 1 bytes @ 0x1A
   776                           
   777                           
   778                           ; 2 bytes @ 0x1A
   779     003A                     	ds	2
   780     003C                     random_string@index:
   781     003C                     utoa@base:	
   782                           ; 2 bytes @ 0x1C
   783                           
   784                           
   785                           ; 2 bytes @ 0x1C
   786     003C                     	ds	2
   787     003E                     ??_utoa:
   788     003E                     random_string@i:	
   789                           ; 1 bytes @ 0x1E
   790                           
   791                           
   792                           ; 2 bytes @ 0x1E
   793     003E                     	ds	1
   794     003F                     utoa@v:
   795                           
   796                           ; 2 bytes @ 0x1F
   797     003F                     	ds	2
   798     0041                     utoa@c:
   799                           
   800                           ; 1 bytes @ 0x21
   801     0041                     	ds	1
   802     0042                     utoa@buf:
   803                           
   804                           ; 1 bytes @ 0x22
   805     0042                     	ds	1
   806     0043                     ?_itoa:
   807     0043                     itoa@val:	
   808                           ; 1 bytes @ 0x23
   809                           
   810                           
   811                           ; 2 bytes @ 0x23
   812     0043                     	ds	2
   813     0045                     itoa@base:
   814                           
   815                           ; 2 bytes @ 0x25
   816     0045                     	ds	2
   817     0047                     ??_itoa:
   818                           
   819                           ; 1 bytes @ 0x27
   820     0047                     	ds	1
   821     0048                     itoa@buf:
   822                           
   823                           ; 1 bytes @ 0x28
   824     0048                     	ds	1
   825                           
   826                           	psect	maintext
   827     005A                     __pmaintext:	
   828 ;;
   829 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   830 ;;
   831 ;; *************** function _main *****************
   832 ;; Defined at:
   833 ;;		line 135 in file "main.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  kpress          1    4[BANK1 ] unsigned char 
   838 ;;  CRC             1    0        unsigned char 
   839 ;;  data            1    0        unsigned char 
   840 ;;  CRC_response    1    0        unsigned char 
   841 ;;  confirm_requ    1    0        unsigned char 
   842 ;;  id              1    0        unsigned char 
   843 ;;  code            1    3[BANK1 ] PTR unsigned char 
   844 ;;		 -> random_string@str(8), 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2  114[None  ] int 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : B00/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       2       0       0
   856 ;;      Temps:          0       0       3       0       0
   857 ;;      Totals:         0       0       5       0       0
   858 ;;Total ram usage:        5 bytes
   859 ;; Hardware stack levels required when called: 4
   860 ;; This function calls:
   861 ;;		_UART_TxString
   862 ;;		_UART_init
   863 ;;		_initKeyPad
   864 ;;		_itoa
   865 ;;		_keyPressed
   866 ;;		_lcd_init
   867 ;;		_lcd_send
   868 ;;		_lcd_str
   869 ;;		_parseData
   870 ;;		_random_string
   871 ;;		_strcmp
   872 ;; This function is called by:
   873 ;;		Startup code after reset
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877     005A                     _main:	
   878                           ;psect for function _main
   879                           
   880     005A                     l2443:	
   881                           ;incstack = 0
   882                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   883                           
   884                           
   885                           ;main.c: 137:     TRISB = 0x00;
   886     005A  1683               	bsf	3,5	;RP0=1, select bank1
   887     005B  1303               	bcf	3,6	;RP1=0, select bank1
   888     005C  0186               	clrf	6	;volatile
   889     005D                     l2445:
   890                           
   891                           ;main.c: 138:     TRISD = 0x0F;
   892     005D  300F               	movlw	15
   893     005E  0088               	movwf	8	;volatile
   894     005F                     l2447:
   895                           
   896                           ;main.c: 139:     INTCON |= 0xA0;
   897     005F  30A0               	movlw	160
   898     0060  00D2               	movwf	??_main^(0+128)
   899     0061  0852               	movf	??_main^(0+128),w
   900     0062  048B               	iorwf	11,f	;volatile
   901     0063                     l2449:
   902                           
   903                           ;main.c: 140:     OPTION_REG = 0x05;
   904     0063  3005               	movlw	5
   905     0064  0081               	movwf	1	;volatile
   906     0065                     l2451:
   907                           
   908                           ;main.c: 141:     TMR0 = 6;
   909     0065  3006               	movlw	6
   910     0066  1283               	bcf	3,5	;RP0=0, select bank0
   911     0067  1303               	bcf	3,6	;RP1=0, select bank0
   912     0068  0081               	movwf	1	;volatile
   913     0069                     l2453:
   914                           
   915                           ;main.c: 144:     UART_init(115200);
   916     0069  3000               	movlw	0
   917     006A  00B2               	movwf	UART_init@baudrate+3
   918     006B  3001               	movlw	1
   919     006C  00B1               	movwf	UART_init@baudrate+2
   920     006D  30C2               	movlw	194
   921     006E  00B0               	movwf	UART_init@baudrate+1
   922     006F  3000               	movlw	0
   923     0070  00AF               	movwf	UART_init@baudrate
   924     0071  120A  118A  26A3  120A  118A  	fcall	_UART_init
   925     0076                     l2455:
   926                           
   927                           ;main.c: 145:     lcd_init();
   928     0076  120A  118A  24C8  120A  118A  	fcall	_lcd_init
   929     007B                     l2457:
   930                           
   931                           ;main.c: 146:     initKeyPad();
   932     007B  120A  158A  27AB  120A  118A  	fcall	_initKeyPad
   933     0080                     l2459:
   934                           
   935                           ;main.c: 148:     lcd_send(0x01, 0);
   936     0080  1283               	bcf	3,5	;RP0=0, select bank0
   937     0081  1303               	bcf	3,6	;RP1=0, select bank0
   938     0082  01A0               	clrf	lcd_send@tipo
   939     0083  3001               	movlw	1
   940     0084  120A  118A  2752  120A  118A  	fcall	_lcd_send
   941     0089                     l2461:
   942                           
   943                           ;main.c: 149:     lcd_str("waiting...");
   944     0089  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   945     008A  1283               	bcf	3,5	;RP0=0, select bank0
   946     008B  1303               	bcf	3,6	;RP1=0, select bank0
   947     008C  00A3               	movwf	lcd_str@str
   948     008D  3080               	movlw	128
   949     008E  00A4               	movwf	lcd_str@str+1
   950     008F  120A  118A  2725  120A  118A  	fcall	_lcd_str
   951     0094                     l2463:
   952                           
   953                           ;main.c: 153:     {;main.c: 155:         if (!code_generate_send)
   954     0094  1283               	bcf	3,5	;RP0=0, select bank0
   955     0095  1303               	bcf	3,6	;RP1=0, select bank0
   956     0096  0852               	movf	_code_generate_send,w
   957     0097  1D03               	btfss	3,2
   958     0098  289A               	goto	u1811
   959     0099  289B               	goto	u1810
   960     009A                     u1811:
   961     009A  28CF               	goto	l2479
   962     009B                     u1810:
   963     009B                     l2465:
   964                           
   965                           ;main.c: 156:         {;main.c: 159:             if (keyPressed() == '#') {
   966     009B  120A  118A  21EF  120A  118A  	fcall	_keyPressed
   967     00A0  3A23               	xorlw	35
   968     00A1  1D03               	skipz
   969     00A2  28A4               	goto	u1821
   970     00A3  28A5               	goto	u1820
   971     00A4                     u1821:
   972     00A4  28CF               	goto	l2479
   973     00A5                     u1820:
   974     00A5                     l2467:
   975                           
   976                           ;main.c: 160:                 lcd_send(0x01, 0);
   977     00A5  1283               	bcf	3,5	;RP0=0, select bank0
   978     00A6  1303               	bcf	3,6	;RP1=0, select bank0
   979     00A7  01A0               	clrf	lcd_send@tipo
   980     00A8  3001               	movlw	1
   981     00A9  120A  118A  2752  120A  118A  	fcall	_lcd_send
   982     00AE                     l2469:
   983                           
   984                           ;main.c: 162:                 char* code = random_string();
   985     00AE  120A  118A  2524  120A  118A  	fcall	_random_string
   986     00B3  1683               	bsf	3,5	;RP0=1, select bank1
   987     00B4  1303               	bcf	3,6	;RP1=0, select bank1
   988     00B5  00D5               	movwf	main@code^(0+128)
   989     00B6                     l2471:
   990                           
   991                           ;main.c: 164:                 lcd_str(code);
   992     00B6  0855               	movf	main@code^(0+128),w
   993     00B7  1283               	bcf	3,5	;RP0=0, select bank0
   994     00B8  1303               	bcf	3,6	;RP1=0, select bank0
   995     00B9  00A3               	movwf	lcd_str@str
   996     00BA  3000               	movlw	0
   997     00BB  00A4               	movwf	lcd_str@str+1
   998     00BC  120A  118A  2725  120A  118A  	fcall	_lcd_str
   999     00C1                     l2473:
  1000                           
  1001                           ;main.c: 167:                 UART_TxString(code);
  1002     00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1003     00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1004     00C3  0855               	movf	main@code^(0+128),w
  1005     00C4  120A  158A  27BC  120A  118A  	fcall	_UART_TxString
  1006     00C9                     l2475:
  1007                           
  1008                           ;main.c: 170:                 code_generate_send = 1;
  1009     00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1010     00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1011     00CB  01D2               	clrf	_code_generate_send
  1012     00CC  0AD2               	incf	_code_generate_send,f
  1013     00CD                     l2477:
  1014                           
  1015                           ;main.c: 171:                 first = 1;
  1016     00CD  01D0               	clrf	_first
  1017     00CE  0AD0               	incf	_first,f
  1018     00CF                     l2479:
  1019                           
  1020                           ;main.c: 175:         if (code_generate_send)
  1021     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1022     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1023     00D1  0852               	movf	_code_generate_send,w
  1024     00D2  1903               	btfsc	3,2
  1025     00D3  28D5               	goto	u1831
  1026     00D4  28D6               	goto	u1830
  1027     00D5                     u1831:
  1028     00D5  2894               	goto	l2463
  1029     00D6                     u1830:
  1030     00D6                     l2481:
  1031                           
  1032                           ;main.c: 176:         {;main.c: 177:             if (received)
  1033     00D6  0853               	movf	_received,w
  1034     00D7  1903               	btfsc	3,2
  1035     00D8  28DA               	goto	u1841
  1036     00D9  28DB               	goto	u1840
  1037     00DA                     u1841:
  1038     00DA  29AB               	goto	l2543
  1039     00DB                     u1840:
  1040     00DB                     l2483:
  1041                           
  1042                           ;main.c: 178:             {;main.c: 179:                 char kpress = keyPressed();
  1043     00DB  120A  118A  21EF  120A  118A  	fcall	_keyPressed
  1044     00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1045     00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1046     00E2  00D6               	movwf	main@kpress^(0+128)
  1047     00E3                     l2485:
  1048                           
  1049                           ;main.c: 182:                 if (kpress != '!') {
  1050     00E3  3021               	movlw	33
  1051     00E4  0656               	xorwf	main@kpress^(0+128),w
  1052     00E5  1903               	btfsc	3,2
  1053     00E6  28E8               	goto	u1851
  1054     00E7  28E9               	goto	u1850
  1055     00E8                     u1851:
  1056     00E8  28ED               	goto	l2489
  1057     00E9                     u1850:
  1058     00E9                     l2487:
  1059                           
  1060                           ;main.c: 183:                     tmpkpress = kpress;
  1061     00E9  0856               	movf	main@kpress^(0+128),w
  1062     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1063     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1064     00EC  00D4               	movwf	_tmpkpress
  1065     00ED                     l2489:
  1066                           
  1067                           ;main.c: 186:                 if (first == 1) {
  1068     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1069     00EE  0350               	decf	_first,w
  1070     00EF  1D03               	btfss	3,2
  1071     00F0  28F2               	goto	u1861
  1072     00F1  28F3               	goto	u1860
  1073     00F2                     u1861:
  1074     00F2  2911               	goto	l2499
  1075     00F3                     u1860:
  1076     00F3                     l2491:
  1077                           
  1078                           ;main.c: 187:                     lcd_send(0x01, 0);
  1079     00F3  01A0               	clrf	lcd_send@tipo
  1080     00F4  3001               	movlw	1
  1081     00F5  120A  118A  2752  120A  118A  	fcall	_lcd_send
  1082     00FA                     l2493:
  1083                           
  1084                           ;main.c: 188:                     lcd_str("Insert code");
  1085     00FA  3053               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1086     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1087     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1088     00FD  00A3               	movwf	lcd_str@str
  1089     00FE  3080               	movlw	128
  1090     00FF  00A4               	movwf	lcd_str@str+1
  1091     0100  120A  118A  2725  120A  118A  	fcall	_lcd_str
  1092     0105                     l2495:
  1093                           
  1094                           ;main.c: 189:                     lcd_send(0xC0, 0);
  1095     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0106  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0107  01A0               	clrf	lcd_send@tipo
  1098     0108  30C0               	movlw	192
  1099     0109  120A  118A  2752  120A  118A  	fcall	_lcd_send
  1100     010E                     l2497:
  1101                           
  1102                           ;main.c: 190:                     first = 0;
  1103     010E  1283               	bcf	3,5	;RP0=0, select bank0
  1104     010F  1303               	bcf	3,6	;RP1=0, select bank0
  1105     0110  01D0               	clrf	_first
  1106     0111                     l2499:
  1107                           
  1108                           ;main.c: 196:                 parseData(dato, dataParsed);
  1109     0111  3090               	movlw	(low (_dataParsed| (0+256)))& (0+255)
  1110     0112  00A0               	movwf	parseData@dataParsed
  1111     0113  30A0               	movlw	(low (_dato| 0))& (0+255)
  1112     0114  120A  118A  257D  120A  118A  	fcall	_parseData
  1113     0119                     l2501:
  1114                           
  1115                           ;main.c: 200:                 if (kpress != '!') {
  1116     0119  3021               	movlw	33
  1117     011A  1683               	bsf	3,5	;RP0=1, select bank1
  1118     011B  1303               	bcf	3,6	;RP1=0, select bank1
  1119     011C  0656               	xorwf	main@kpress^(0+128),w
  1120     011D  1903               	btfsc	3,2
  1121     011E  2920               	goto	u1871
  1122     011F  2921               	goto	u1870
  1123     0120                     u1871:
  1124     0120  29A6               	goto	l2541
  1125     0121                     u1870:
  1126     0121                     l2503:
  1127                           
  1128                           ;main.c: 201:                     lcd_send(kpress, 1);
  1129     0121  1283               	bcf	3,5	;RP0=0, select bank0
  1130     0122  1303               	bcf	3,6	;RP1=0, select bank0
  1131     0123  01A0               	clrf	lcd_send@tipo
  1132     0124  0AA0               	incf	lcd_send@tipo,f
  1133     0125  1683               	bsf	3,5	;RP0=1, select bank1
  1134     0126  1303               	bcf	3,6	;RP1=0, select bank1
  1135     0127  0856               	movf	main@kpress^(0+128),w
  1136     0128  120A  118A  2752  120A  118A  	fcall	_lcd_send
  1137     012D                     l2505:
  1138                           
  1139                           ;main.c: 203:                     if (kpress == '#') {
  1140     012D  3023               	movlw	35
  1141     012E  1683               	bsf	3,5	;RP0=1, select bank1
  1142     012F  1303               	bcf	3,6	;RP1=0, select bank1
  1143     0130  0656               	xorwf	main@kpress^(0+128),w
  1144     0131  1D03               	btfss	3,2
  1145     0132  2934               	goto	u1881
  1146     0133  2935               	goto	u1880
  1147     0134                     u1881:
  1148     0134  2996               	goto	l2535
  1149     0135                     u1880:
  1150     0135                     l2507:
  1151                           
  1152                           ;main.c: 204:                         code_keyboard[l] = '\0';
  1153     0135  1283               	bcf	3,5	;RP0=0, select bank0
  1154     0136  1303               	bcf	3,6	;RP1=0, select bank0
  1155     0137  084F               	movf	_l,w
  1156     0138  3E55               	addlw	(low (_code_keyboard| 0))& (0+255)
  1157     0139  0084               	movwf	4
  1158     013A  1383               	bcf	3,7	;select IRP bank0
  1159     013B  0180               	clrf	0
  1160     013C                     l2509:
  1161                           
  1162                           ;main.c: 206:                         lcd_send(0x01, 0);
  1163     013C  01A0               	clrf	lcd_send@tipo
  1164     013D  3001               	movlw	1
  1165     013E  120A  118A  2752  120A  118A  	fcall	_lcd_send
  1166     0143                     l2511:
  1167                           
  1168                           ;main.c: 220:                         if (strcmp(code_keyboard, dataParsed) == 0) {
  1169     0143  3090               	movlw	(low (_dataParsed| (0+256)))& (0+255)
  1170     0144  1283               	bcf	3,5	;RP0=0, select bank0
  1171     0145  1303               	bcf	3,6	;RP1=0, select bank0
  1172     0146  00A0               	movwf	strcmp@s2
  1173     0147  3055               	movlw	(low (_code_keyboard| 0))& (0+255)
  1174     0148  120A  118A  277F  120A  118A  	fcall	_strcmp
  1175     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1176     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1177     014F  0820               	movf	?_strcmp,w
  1178     0150  0421               	iorwf	?_strcmp+1,w
  1179     0151  1D03               	btfss	3,2
  1180     0152  2954               	goto	u1891
  1181     0153  2955               	goto	u1890
  1182     0154                     u1891:
  1183     0154  296D               	goto	l2517
  1184     0155                     u1890:
  1185     0155                     l2513:
  1186                           
  1187                           ;main.c: 221:                             lcd_str("OK!");
  1188     0155  306A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1189     0156  00A3               	movwf	lcd_str@str
  1190     0157  3080               	movlw	128
  1191     0158  00A4               	movwf	lcd_str@str+1
  1192     0159  120A  118A  2725  120A  118A  	fcall	_lcd_str
  1193     015E                     l2515:
  1194                           
  1195                           ;main.c: 222:                             _delay((unsigned long)((5000)*(20000000/4000.0
      +                          )));
  1196     015E  307F               	movlw	127
  1197     015F  1683               	bsf	3,5	;RP0=1, select bank1
  1198     0160  1303               	bcf	3,6	;RP1=0, select bank1
  1199     0161  00D4               	movwf	(??_main^(0+128)+2)
  1200     0162  30D4               	movlw	212
  1201     0163  00D3               	movwf	(??_main^(0+128)+1)
  1202     0164  3031               	movlw	49
  1203     0165  00D2               	movwf	??_main^(0+128)
  1204     0166                     u1917:
  1205     0166  0BD2               	decfsz	??_main^(0+128),f
  1206     0167  2966               	goto	u1917
  1207     0168  0BD3               	decfsz	(??_main^(0+128)+1),f
  1208     0169  2966               	goto	u1917
  1209     016A  0BD4               	decfsz	(??_main^(0+128)+2),f
  1210     016B  2966               	goto	u1917
  1211                           
  1212                           ;main.c: 223:                         } else {
  1213     016C  2977               	goto	l2521
  1214     016D                     l2517:
  1215                           
  1216                           ;main.c: 224:                             lcd_str("KO!");
  1217     016D  306E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1218     016E  00A3               	movwf	lcd_str@str
  1219     016F  3080               	movlw	128
  1220     0170  00A4               	movwf	lcd_str@str+1
  1221     0171  120A  118A  2725  120A  118A  	fcall	_lcd_str
  1222     0176  295E               	goto	l2515
  1223     0177                     l2521:
  1224                           
  1225                           ;main.c: 230:                         received = 0;
  1226     0177  1283               	bcf	3,5	;RP0=0, select bank0
  1227     0178  1303               	bcf	3,6	;RP1=0, select bank0
  1228     0179  01D3               	clrf	_received
  1229     017A                     l2523:
  1230                           
  1231                           ;main.c: 231:                         l = 0;
  1232     017A  01CF               	clrf	_l
  1233     017B                     l2525:
  1234                           
  1235                           ;main.c: 232:                         countSec = 0;
  1236     017B  01C9               	clrf	_countSec
  1237     017C  01CA               	clrf	_countSec+1
  1238     017D                     l2527:
  1239                           
  1240                           ;main.c: 233:                         numSec = 60;
  1241     017D  303C               	movlw	60
  1242     017E  00ED               	movwf	_numSec
  1243     017F  3000               	movlw	0
  1244     0180  00EE               	movwf	_numSec+1
  1245     0181                     l2529:
  1246                           
  1247                           ;main.c: 234:                         stop_wait = 1;
  1248     0181  01D1               	clrf	_stop_wait
  1249     0182  0AD1               	incf	_stop_wait,f
  1250     0183                     l2531:
  1251                           
  1252                           ;main.c: 236:                         lcd_send(0x01, 0);
  1253     0183  01A0               	clrf	lcd_send@tipo
  1254     0184  3001               	movlw	1
  1255     0185  120A  118A  2752  120A  118A  	fcall	_lcd_send
  1256     018A                     l2533:
  1257                           
  1258                           ;main.c: 237:                         lcd_str("waiting...");
  1259     018A  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1260     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1261     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1262     018D  00A3               	movwf	lcd_str@str
  1263     018E  3080               	movlw	128
  1264     018F  00A4               	movwf	lcd_str@str+1
  1265     0190  120A  118A  2725  120A  118A  	fcall	_lcd_str
  1266                           
  1267                           ;main.c: 238:                     } else {
  1268     0195  29A6               	goto	l2541
  1269     0196                     l2535:
  1270                           
  1271                           ;main.c: 240:                         code_keyboard[l++] = kpress;
  1272     0196  1283               	bcf	3,5	;RP0=0, select bank0
  1273     0197  1303               	bcf	3,6	;RP1=0, select bank0
  1274     0198  084F               	movf	_l,w
  1275     0199  3E55               	addlw	(low (_code_keyboard| 0))& (0+255)
  1276     019A  0084               	movwf	4
  1277     019B  1683               	bsf	3,5	;RP0=1, select bank1
  1278     019C  1303               	bcf	3,6	;RP1=0, select bank1
  1279     019D  0856               	movf	main@kpress^(0+128),w
  1280     019E  1383               	bcf	3,7	;select IRP bank0
  1281     019F  0080               	movwf	0
  1282     01A0                     l2537:
  1283     01A0  3001               	movlw	1
  1284     01A1  00D2               	movwf	??_main^(0+128)
  1285     01A2  0852               	movf	??_main^(0+128),w
  1286     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1287     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1288     01A5  07CF               	addwf	_l,f
  1289     01A6                     l2539:
  1290     01A6                     l2541:
  1291                           
  1292                           ;main.c: 264:                 char id;;main.c: 265:                 char confirm_request
      +                          ;;main.c: 266:                 char CRC_response;;main.c: 267:                 char data
      +                          ;;main.c: 268:                 char CRC;;main.c: 289:                 i = 0;
  1293     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1294     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1295     01A8  01CD               	clrf	_i
  1296     01A9  01CE               	clrf	_i+1
  1297                           
  1298                           ;main.c: 292:             } else {
  1299     01AA  2894               	goto	l2463
  1300     01AB                     l2543:
  1301                           
  1302                           ;main.c: 293:                 itoa(buff, numSec, 10);
  1303     01AB  086E               	movf	_numSec+1,w
  1304     01AC  00C4               	movwf	itoa@val+1
  1305     01AD  086D               	movf	_numSec,w
  1306     01AE  00C3               	movwf	itoa@val
  1307     01AF  300A               	movlw	10
  1308     01B0  00C5               	movwf	itoa@base
  1309     01B1  3000               	movlw	0
  1310     01B2  00C6               	movwf	itoa@base+1
  1311     01B3  3067               	movlw	(low (_buff| 0))& (0+255)
  1312     01B4  120A  118A  27AA  120A  118A  	fcall	_itoa
  1313     01B9                     l2545:
  1314                           
  1315                           ;main.c: 294:                 lcd_send(0xC0, 0);
  1316     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1317     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1318     01BB  01A0               	clrf	lcd_send@tipo
  1319     01BC  30C0               	movlw	192
  1320     01BD  120A  118A  2752  120A  118A  	fcall	_lcd_send
  1321     01C2                     l2547:
  1322                           
  1323                           ;main.c: 295:                 lcd_str(buff);
  1324     01C2  3067               	movlw	(low (_buff| 0))& (0+255)
  1325     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1326     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1327     01C5  00A3               	movwf	lcd_str@str
  1328     01C6  3000               	movlw	0
  1329     01C7  00A4               	movwf	lcd_str@str+1
  1330     01C8  120A  118A  2725  120A  118A  	fcall	_lcd_str
  1331     01CD                     l2549:
  1332                           
  1333                           ;main.c: 297:                 if (stop_wait)
  1334     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1335     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1336     01CF  0851               	movf	_stop_wait,w
  1337     01D0  1903               	btfsc	3,2
  1338     01D1  29D3               	goto	u1901
  1339     01D2  29D4               	goto	u1900
  1340     01D3                     u1901:
  1341     01D3  29EB               	goto	l118
  1342     01D4                     u1900:
  1343     01D4                     l2551:
  1344                           
  1345                           ;main.c: 298:                 {;main.c: 299:                     lcd_send(0x01, 0);
  1346     01D4  01A0               	clrf	lcd_send@tipo
  1347     01D5  3001               	movlw	1
  1348     01D6  120A  118A  2752  120A  118A  	fcall	_lcd_send
  1349     01DB                     l2553:
  1350                           
  1351                           ;main.c: 300:                     lcd_str("waiting...");
  1352     01DB  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1353     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1354     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1355     01DE  00A3               	movwf	lcd_str@str
  1356     01DF  3080               	movlw	128
  1357     01E0  00A4               	movwf	lcd_str@str+1
  1358     01E1  120A  118A  2725  120A  118A  	fcall	_lcd_str
  1359     01E6                     l2555:
  1360                           
  1361                           ;main.c: 301:                     stop_wait = 0;
  1362     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1363     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1364     01E8  01D1               	clrf	_stop_wait
  1365     01E9                     l2557:
  1366                           
  1367                           ;main.c: 302:                     code_generate_send = 0;
  1368     01E9  01D2               	clrf	_code_generate_send
  1369     01EA  2894               	goto	l2463
  1370     01EB                     l118:	
  1371                           ;main.c: 305:         }
  1372                           
  1373     01EB  2894               	goto	l2463
  1374     01EC  120A  118A  2810   	ljmp	start
  1375     01EF                     __end_of_main:
  1376                           
  1377                           	psect	text1
  1378     077F                     __ptext1:	
  1379 ;; *************** function _strcmp *****************
  1380 ;; Defined at:
  1381 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strcmp.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  s1              1    wreg     PTR const unsigned char 
  1384 ;;		 -> code_keyboard(10), 
  1385 ;;  s2              1    0[BANK0 ] PTR const unsigned char 
  1386 ;;		 -> dataParsed(50), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  s1              1    5[BANK0 ] PTR const unsigned char 
  1389 ;;		 -> code_keyboard(10), 
  1390 ;;  r               1    4[BANK0 ] char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2    0[BANK0 ] int 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       2       0       0       0
  1401 ;;      Locals:         0       2       0       0       0
  1402 ;;      Temps:          0       2       0       0       0
  1403 ;;      Totals:         0       6       0       0       0
  1404 ;;Total ram usage:        6 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414     077F                     _strcmp:	
  1415                           ;psect for function _strcmp
  1416                           
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  1420                           ;strcmp@s1 stored from wreg
  1421     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1422     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1423     0781  00A5               	movwf	strcmp@s1
  1424     0782                     l2415:
  1425     0782  2F8B               	goto	l2421
  1426     0783                     l2417:
  1427     0783  3001               	movlw	1
  1428     0784  00A2               	movwf	??_strcmp
  1429     0785  0822               	movf	??_strcmp,w
  1430     0786  07A5               	addwf	strcmp@s1,f
  1431     0787                     l2419:
  1432     0787  3001               	movlw	1
  1433     0788  00A2               	movwf	??_strcmp
  1434     0789  0822               	movf	??_strcmp,w
  1435     078A  07A0               	addwf	strcmp@s2,f
  1436     078B                     l2421:
  1437     078B  0820               	movf	strcmp@s2,w
  1438     078C  0084               	movwf	4
  1439     078D  1783               	bsf	3,7	;select IRP bank2
  1440     078E  0800               	movf	0,w
  1441     078F  00A2               	movwf	??_strcmp
  1442     0790  0825               	movf	strcmp@s1,w
  1443     0791  0084               	movwf	4
  1444     0792  1383               	bcf	3,7	;select IRP bank0
  1445     0793  0800               	movf	0,w
  1446     0794  00A3               	movwf	??_strcmp+1
  1447     0795  0822               	movf	??_strcmp,w
  1448     0796  0223               	subwf	??_strcmp+1,w
  1449     0797  00A4               	movwf	strcmp@r
  1450     0798  0824               	movf	strcmp@r,w
  1451     0799  1D03               	btfss	3,2
  1452     079A  2F9C               	goto	u1781
  1453     079B  2F9D               	goto	u1780
  1454     079C                     u1781:
  1455     079C  2FA4               	goto	l2425
  1456     079D                     u1780:
  1457     079D                     l2423:
  1458     079D  0825               	movf	strcmp@s1,w
  1459     079E  0084               	movwf	4
  1460     079F  0800               	movf	0,w
  1461     07A0  1D03               	btfss	3,2
  1462     07A1  2FA3               	goto	u1791
  1463     07A2  2FA4               	goto	u1790
  1464     07A3                     u1791:
  1465     07A3  2F83               	goto	l2417
  1466     07A4                     u1790:
  1467     07A4                     l2425:
  1468     07A4  0824               	movf	strcmp@r,w
  1469     07A5  00A0               	movwf	?_strcmp
  1470     07A6  01A1               	clrf	?_strcmp+1
  1471     07A7  1BA0               	btfsc	?_strcmp,7
  1472     07A8  03A1               	decf	?_strcmp+1,f
  1473     07A9                     l787:
  1474     07A9  0008               	return
  1475     07AA                     __end_of_strcmp:
  1476                           
  1477                           	psect	text2
  1478     0524                     __ptext2:	
  1479 ;; *************** function _random_string *****************
  1480 ;; Defined at:
  1481 ;;		line 399 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  index           2   28[BANK0 ] int 
  1486 ;;  i               2   30[BANK0 ] int 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      PTR unsigned char 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       0       0       0       0
  1497 ;;      Locals:         0       4       0       0       0
  1498 ;;      Temps:          0       2       0       0       0
  1499 ;;      Totals:         0       6       0       0       0
  1500 ;;Total ram usage:        6 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 3
  1503 ;; This function calls:
  1504 ;;		___lwmod
  1505 ;;		_rand
  1506 ;;		_srand
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512     0524                     _random_string:	
  1513                           ;psect for function _random_string
  1514                           
  1515     0524                     l2365:	
  1516                           ;incstack = 0
  1517                           ; Regs used in _random_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1518                           
  1519                           
  1520                           ;main.c: 400:     static char str[8];;main.c: 401:     const char charset[] = "abcdefghi
      +                          jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";;main.c: 403:     srand(TMR0);
  1521     0524  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0525  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0526  0801               	movf	1,w	;volatile
  1524     0527  00BA               	movwf	??_random_string
  1525     0528  01BB               	clrf	??_random_string+1
  1526     0529  083A               	movf	??_random_string,w
  1527     052A  00A0               	movwf	srand@x
  1528     052B  083B               	movf	??_random_string+1,w
  1529     052C  00A1               	movwf	srand@x+1
  1530     052D  120A  158A  27A2  120A  118A  	fcall	_srand
  1531     0532                     l2367:
  1532                           
  1533                           ;main.c: 406:     for (int i = 0; i < 5; i++) {
  1534     0532  1283               	bcf	3,5	;RP0=0, select bank0
  1535     0533  1303               	bcf	3,6	;RP1=0, select bank0
  1536     0534  01BE               	clrf	random_string@i
  1537     0535  01BF               	clrf	random_string@i+1
  1538     0536                     l2373:
  1539                           
  1540                           ;main.c: 407:         int index = rand() % (sizeof (charset) - 1);
  1541     0536  303E               	movlw	62
  1542     0537  1283               	bcf	3,5	;RP0=0, select bank0
  1543     0538  1303               	bcf	3,6	;RP1=0, select bank0
  1544     0539  00B4               	movwf	___lwmod@divisor
  1545     053A  3000               	movlw	0
  1546     053B  00B5               	movwf	___lwmod@divisor+1
  1547     053C  120A  118A  2616  120A  118A  	fcall	_rand
  1548     0541  1283               	bcf	3,5	;RP0=0, select bank0
  1549     0542  1303               	bcf	3,6	;RP1=0, select bank0
  1550     0543  082E               	movf	?_rand+1,w
  1551     0544  00B7               	movwf	___lwmod@dividend+1
  1552     0545  082D               	movf	?_rand,w
  1553     0546  00B6               	movwf	___lwmod@dividend
  1554     0547  120A  118A  26E9  120A  118A  	fcall	___lwmod
  1555     054C  1283               	bcf	3,5	;RP0=0, select bank0
  1556     054D  1303               	bcf	3,6	;RP1=0, select bank0
  1557     054E  0835               	movf	?___lwmod+1,w
  1558     054F  00BD               	movwf	random_string@index+1
  1559     0550  0834               	movf	?___lwmod,w
  1560     0551  00BC               	movwf	random_string@index
  1561     0552                     l2375:
  1562                           
  1563                           ;main.c: 408:         str[i] = charset[index];
  1564     0552  083C               	movf	random_string@index,w
  1565     0553  3E01               	addlw	low ((random_string@charset-__stringbase)| (0+32768))
  1566     0554  0084               	movwf	4
  1567     0555  120A  118A  2374  120A  118A  	fcall	stringdir
  1568     055A  00BA               	movwf	??_random_string
  1569     055B  083E               	movf	random_string@i,w
  1570     055C  3E5F               	addlw	(low (random_string@str| 0))& (0+255)
  1571     055D  0084               	movwf	4
  1572     055E  083A               	movf	??_random_string,w
  1573     055F  1383               	bcf	3,7	;select IRP bank0
  1574     0560  0080               	movwf	0
  1575     0561                     l2377:
  1576                           
  1577                           ;main.c: 409:     }
  1578     0561  3001               	movlw	1
  1579     0562  07BE               	addwf	random_string@i,f
  1580     0563  1803               	skipnc
  1581     0564  0ABF               	incf	random_string@i+1,f
  1582     0565  3000               	movlw	0
  1583     0566  07BF               	addwf	random_string@i+1,f
  1584     0567                     l2379:
  1585     0567  083F               	movf	random_string@i+1,w
  1586     0568  3A80               	xorlw	128
  1587     0569  00FF               	movwf	btemp+1
  1588     056A  3080               	movlw	128
  1589     056B  027F               	subwf	btemp+1,w
  1590     056C  1D03               	skipz
  1591     056D  2D70               	goto	u1735
  1592     056E  3005               	movlw	5
  1593     056F  023E               	subwf	random_string@i,w
  1594     0570                     u1735:
  1595     0570  1C03               	skipc
  1596     0571  2D73               	goto	u1731
  1597     0572  2D74               	goto	u1730
  1598     0573                     u1731:
  1599     0573  2D36               	goto	l2373
  1600     0574                     u1730:
  1601     0574                     l2381:
  1602                           
  1603                           ;main.c: 411:     str[5] = '\r';
  1604     0574  300D               	movlw	13
  1605     0575  1283               	bcf	3,5	;RP0=0, select bank0
  1606     0576  1303               	bcf	3,6	;RP1=0, select bank0
  1607     0577  00E4               	movwf	random_string@str+5
  1608                           
  1609                           ;main.c: 412:     str[6] = '\n';
  1610     0578  300A               	movlw	10
  1611     0579  00E5               	movwf	random_string@str+6
  1612     057A                     l2383:
  1613                           
  1614                           ;main.c: 413:     str[7] = '\0';
  1615     057A  01E6               	clrf	random_string@str+7
  1616     057B                     l2385:
  1617                           
  1618                           ;main.c: 415:     return str;
  1619     057B  305F               	movlw	(low (random_string@str| 0))& (0+255)
  1620     057C                     l162:
  1621     057C  0008               	return
  1622     057D                     __end_of_random_string:
  1623                           
  1624                           	psect	text3
  1625     0FA2                     __ptext3:	
  1626 ;; *************** function _srand *****************
  1627 ;; Defined at:
  1628 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  x               2    0[BANK0 ] unsigned int 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       2       0       0       0
  1643 ;;      Locals:         0       0       0       0       0
  1644 ;;      Temps:          0       0       0       0       0
  1645 ;;      Totals:         0       2       0       0       0
  1646 ;;Total ram usage:        2 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_random_string
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656     0FA2                     _srand:	
  1657                           ;psect for function _srand
  1658                           
  1659     0FA2                     l2115:	
  1660                           ;incstack = 0
  1661                           ; Regs used in _srand: [wreg]
  1662                           
  1663     0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  1664     0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  1665     0FA4  0820               	movf	srand@x,w
  1666     0FA5  00E9               	movwf	_randx
  1667     0FA6  0821               	movf	srand@x+1,w
  1668     0FA7  00EA               	movwf	_randx+1
  1669     0FA8  01EB               	clrf	_randx+2
  1670     0FA9  01EC               	clrf	_randx+3
  1671     0FAA                     l776:
  1672     0FAA  0008               	return
  1673     0FAB                     __end_of_srand:
  1674                           
  1675                           	psect	text4
  1676     0616                     __ptext4:	
  1677 ;; *************** function _rand *****************
  1678 ;; Defined at:
  1679 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2   13[BANK0 ] int 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       2       0       0       0
  1694 ;;      Locals:         0       0       0       0       0
  1695 ;;      Temps:          0       5       0       0       0
  1696 ;;      Totals:         0       7       0       0       0
  1697 ;;Total ram usage:        7 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 2
  1700 ;; This function calls:
  1701 ;;		___lmul
  1702 ;; This function is called by:
  1703 ;;		_random_string
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707     0616                     _rand:	
  1708                           ;psect for function _rand
  1709                           
  1710     0616                     l2117:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1713                           
  1714     0616  1283               	bcf	3,5	;RP0=0, select bank0
  1715     0617  1303               	bcf	3,6	;RP1=0, select bank0
  1716     0618  086C               	movf	_randx+3,w
  1717     0619  00A3               	movwf	___lmul@multiplier+3
  1718     061A  086B               	movf	_randx+2,w
  1719     061B  00A2               	movwf	___lmul@multiplier+2
  1720     061C  086A               	movf	_randx+1,w
  1721     061D  00A1               	movwf	___lmul@multiplier+1
  1722     061E  0869               	movf	_randx,w
  1723     061F  00A0               	movwf	___lmul@multiplier
  1724     0620  3041               	movlw	65
  1725     0621  00A7               	movwf	___lmul@multiplicand+3
  1726     0622  30C6               	movlw	198
  1727     0623  00A6               	movwf	___lmul@multiplicand+2
  1728     0624  304E               	movlw	78
  1729     0625  00A5               	movwf	___lmul@multiplicand+1
  1730     0626  306D               	movlw	109
  1731     0627  00A4               	movwf	___lmul@multiplicand
  1732     0628  120A  118A  25CE  120A  118A  	fcall	___lmul
  1733     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1734     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1735     062F  0823               	movf	?___lmul+3,w
  1736     0630  00EC               	movwf	_randx+3
  1737     0631  0822               	movf	?___lmul+2,w
  1738     0632  00EB               	movwf	_randx+2
  1739     0633  0821               	movf	?___lmul+1,w
  1740     0634  00EA               	movwf	_randx+1
  1741     0635  0820               	movf	?___lmul,w
  1742     0636  00E9               	movwf	_randx
  1743     0637                     l2119:
  1744     0637  3039               	movlw	57
  1745     0638  07E9               	addwf	_randx,f
  1746     0639  3030               	movlw	48
  1747     063A  1803               	skipnc
  1748     063B  3031               	movlw	49
  1749     063C  07EA               	addwf	_randx+1,f
  1750     063D  3000               	movlw	0
  1751     063E  1803               	skipnc
  1752     063F  3001               	movlw	1
  1753     0640  07EB               	addwf	_randx+2,f
  1754     0641  3000               	movlw	0
  1755     0642  1803               	skipnc
  1756     0643  3001               	movlw	1
  1757     0644  07EC               	addwf	_randx+3,f
  1758     0645                     l2121:
  1759     0645  0869               	movf	_randx,w
  1760     0646  00AF               	movwf	??_rand
  1761     0647  086A               	movf	_randx+1,w
  1762     0648  00B0               	movwf	??_rand+1
  1763     0649  086B               	movf	_randx+2,w
  1764     064A  00B1               	movwf	??_rand+2
  1765     064B  086C               	movf	_randx+3,w
  1766     064C  00B2               	movwf	??_rand+3
  1767     064D  3010               	movlw	16
  1768     064E  00B3               	movwf	??_rand+4
  1769     064F                     u1495:
  1770     064F  0D32               	rlf	??_rand+3,w
  1771     0650  0CB2               	rrf	??_rand+3,f
  1772     0651  0CB1               	rrf	??_rand+2,f
  1773     0652  0CB0               	rrf	??_rand+1,f
  1774     0653  0CAF               	rrf	??_rand,f
  1775     0654                     u1490:
  1776     0654  0BB3               	decfsz	??_rand+4,f
  1777     0655  2E4F               	goto	u1495
  1778     0656  30FF               	movlw	255
  1779     0657  052F               	andwf	??_rand,w
  1780     0658  00AD               	movwf	?_rand
  1781     0659  307F               	movlw	127
  1782     065A  0530               	andwf	??_rand+1,w
  1783     065B  00AE               	movwf	?_rand+1
  1784     065C                     l779:
  1785     065C  0008               	return
  1786     065D                     __end_of_rand:
  1787                           
  1788                           	psect	text5
  1789     05CE                     __ptext5:	
  1790 ;; *************** function ___lmul *****************
  1791 ;; Defined at:
  1792 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1795 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  product         4    9[BANK0 ] unsigned long 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  4    0[BANK0 ] unsigned long 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         0       8       0       0       0
  1808 ;;      Locals:         0       4       0       0       0
  1809 ;;      Temps:          0       1       0       0       0
  1810 ;;      Totals:         0      13       0       0       0
  1811 ;;Total ram usage:       13 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_rand
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821     05CE                     ___lmul:	
  1822                           ;psect for function ___lmul
  1823                           
  1824     05CE                     l2033:	
  1825                           ;incstack = 0
  1826                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1827                           
  1828     05CE  3000               	movlw	0
  1829     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1830     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1831     05D1  00AC               	movwf	___lmul@product+3
  1832     05D2  3000               	movlw	0
  1833     05D3  00AB               	movwf	___lmul@product+2
  1834     05D4  3000               	movlw	0
  1835     05D5  00AA               	movwf	___lmul@product+1
  1836     05D6  3000               	movlw	0
  1837     05D7  00A9               	movwf	___lmul@product
  1838     05D8                     l2035:
  1839     05D8  1C20               	btfss	___lmul@multiplier,0
  1840     05D9  2DDB               	goto	u1311
  1841     05DA  2DDC               	goto	u1310
  1842     05DB                     u1311:
  1843     05DB  2DF3               	goto	l2039
  1844     05DC                     u1310:
  1845     05DC                     l2037:
  1846     05DC  0824               	movf	___lmul@multiplicand,w
  1847     05DD  07A9               	addwf	___lmul@product,f
  1848     05DE  0825               	movf	___lmul@multiplicand+1,w
  1849     05DF  1103               	clrz
  1850     05E0  1803               	skipnc
  1851     05E1  3E01               	addlw	1
  1852     05E2  1903               	skipnz
  1853     05E3  2DE5               	goto	u1321
  1854     05E4  07AA               	addwf	___lmul@product+1,f
  1855     05E5                     u1321:
  1856     05E5  0826               	movf	___lmul@multiplicand+2,w
  1857     05E6  1103               	clrz
  1858     05E7  1803               	skipnc
  1859     05E8  3E01               	addlw	1
  1860     05E9  1903               	skipnz
  1861     05EA  2DEC               	goto	u1322
  1862     05EB  07AB               	addwf	___lmul@product+2,f
  1863     05EC                     u1322:
  1864     05EC  0827               	movf	___lmul@multiplicand+3,w
  1865     05ED  1103               	clrz
  1866     05EE  1803               	skipnc
  1867     05EF  3E01               	addlw	1
  1868     05F0  1903               	skipnz
  1869     05F1  2DF3               	goto	u1323
  1870     05F2  07AC               	addwf	___lmul@product+3,f
  1871     05F3                     u1323:
  1872     05F3                     l2039:
  1873     05F3  3001               	movlw	1
  1874     05F4  00A8               	movwf	??___lmul
  1875     05F5                     u1335:
  1876     05F5  1003               	clrc
  1877     05F6  0DA4               	rlf	___lmul@multiplicand,f
  1878     05F7  0DA5               	rlf	___lmul@multiplicand+1,f
  1879     05F8  0DA6               	rlf	___lmul@multiplicand+2,f
  1880     05F9  0DA7               	rlf	___lmul@multiplicand+3,f
  1881     05FA  0BA8               	decfsz	??___lmul,f
  1882     05FB  2DF5               	goto	u1335
  1883     05FC                     l2041:
  1884     05FC  3001               	movlw	1
  1885     05FD                     u1345:
  1886     05FD  1003               	clrc
  1887     05FE  0CA3               	rrf	___lmul@multiplier+3,f
  1888     05FF  0CA2               	rrf	___lmul@multiplier+2,f
  1889     0600  0CA1               	rrf	___lmul@multiplier+1,f
  1890     0601  0CA0               	rrf	___lmul@multiplier,f
  1891     0602  3EFF               	addlw	-1
  1892     0603  1D03               	skipz
  1893     0604  2DFD               	goto	u1345
  1894     0605  0823               	movf	___lmul@multiplier+3,w
  1895     0606  0422               	iorwf	___lmul@multiplier+2,w
  1896     0607  0421               	iorwf	___lmul@multiplier+1,w
  1897     0608  0420               	iorwf	___lmul@multiplier,w
  1898     0609  1D03               	skipz
  1899     060A  2E0C               	goto	u1351
  1900     060B  2E0D               	goto	u1350
  1901     060C                     u1351:
  1902     060C  2DD8               	goto	l2035
  1903     060D                     u1350:
  1904     060D                     l2043:
  1905     060D  082C               	movf	___lmul@product+3,w
  1906     060E  00A3               	movwf	?___lmul+3
  1907     060F  082B               	movf	___lmul@product+2,w
  1908     0610  00A2               	movwf	?___lmul+2
  1909     0611  082A               	movf	___lmul@product+1,w
  1910     0612  00A1               	movwf	?___lmul+1
  1911     0613  0829               	movf	___lmul@product,w
  1912     0614  00A0               	movwf	?___lmul
  1913     0615                     l323:
  1914     0615  0008               	return
  1915     0616                     __end_of___lmul:
  1916                           
  1917                           	psect	text6
  1918     057D                     __ptext6:	
  1919 ;; *************** function _parseData *****************
  1920 ;; Defined at:
  1921 ;;		line 454 in file "main.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  data            1    wreg     PTR unsigned char 
  1924 ;;		 -> dato(50), 
  1925 ;;  dataParsed      1    0[BANK0 ] PTR unsigned char 
  1926 ;;		 -> dataParsed(50), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  data            1    8[BANK0 ] PTR unsigned char 
  1929 ;;		 -> dato(50), 
  1930 ;;  i               2    6[BANK0 ] int 
  1931 ;;  j               2    4[BANK0 ] int 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       1       0       0       0
  1942 ;;      Locals:         0       5       0       0       0
  1943 ;;      Temps:          0       3       0       0       0
  1944 ;;      Totals:         0       9       0       0       0
  1945 ;;Total ram usage:        9 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; Hardware stack levels required when called: 1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955     057D                     _parseData:	
  1956                           ;psect for function _parseData
  1957                           
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _parseData: [wreg-fsr0h+status,2+status,0]
  1961                           ;parseData@data stored from wreg
  1962     057D  1283               	bcf	3,5	;RP0=0, select bank0
  1963     057E  1303               	bcf	3,6	;RP1=0, select bank0
  1964     057F  00A8               	movwf	parseData@data
  1965     0580                     l2397:
  1966                           
  1967                           ;main.c: 455:     int i = 0;
  1968     0580  01A6               	clrf	parseData@i
  1969     0581  01A7               	clrf	parseData@i+1
  1970                           
  1971                           ;main.c: 456:     int j = 0;
  1972     0582  01A4               	clrf	parseData@j
  1973     0583  01A5               	clrf	parseData@j+1
  1974                           
  1975                           ;main.c: 458:     while (data[i] != '\0') {
  1976     0584  2DB6               	goto	l180
  1977     0585                     l2399:
  1978                           
  1979                           ;main.c: 459:         if (data[i] >= 48 && data[i] <= 57)
  1980     0585  0826               	movf	parseData@i,w
  1981     0586  0728               	addwf	parseData@data,w
  1982     0587  00A1               	movwf	??_parseData
  1983     0588  0821               	movf	??_parseData,w
  1984     0589  0084               	movwf	4
  1985     058A  3030               	movlw	48
  1986     058B  0200               	subwf	0,w
  1987     058C  1C03               	skipc
  1988     058D  2D8F               	goto	u1751
  1989     058E  2D90               	goto	u1750
  1990     058F                     u1751:
  1991     058F  2DB0               	goto	l2407
  1992     0590                     u1750:
  1993     0590                     l2401:
  1994     0590  0826               	movf	parseData@i,w
  1995     0591  0728               	addwf	parseData@data,w
  1996     0592  00A1               	movwf	??_parseData
  1997     0593  0821               	movf	??_parseData,w
  1998     0594  0084               	movwf	4
  1999     0595  303A               	movlw	58
  2000     0596  0200               	subwf	0,w
  2001     0597  1803               	skipnc
  2002     0598  2D9A               	goto	u1761
  2003     0599  2D9B               	goto	u1760
  2004     059A                     u1761:
  2005     059A  2DB0               	goto	l2407
  2006     059B                     u1760:
  2007     059B                     l2403:
  2008                           
  2009                           ;main.c: 460:         {;main.c: 461:             dataParsed[j] = data[i];
  2010     059B  0826               	movf	parseData@i,w
  2011     059C  0728               	addwf	parseData@data,w
  2012     059D  00A1               	movwf	??_parseData
  2013     059E  0821               	movf	??_parseData,w
  2014     059F  0084               	movwf	4
  2015     05A0  0800               	movf	0,w
  2016     05A1  00A2               	movwf	??_parseData+1
  2017     05A2  0824               	movf	parseData@j,w
  2018     05A3  0720               	addwf	parseData@dataParsed,w
  2019     05A4  00A3               	movwf	??_parseData+2
  2020     05A5  0823               	movf	??_parseData+2,w
  2021     05A6  0084               	movwf	4
  2022     05A7  0822               	movf	??_parseData+1,w
  2023     05A8  1783               	bsf	3,7	;select IRP bank2
  2024     05A9  0080               	movwf	0
  2025     05AA                     l2405:
  2026                           
  2027                           ;main.c: 462:             j++;
  2028     05AA  3001               	movlw	1
  2029     05AB  07A4               	addwf	parseData@j,f
  2030     05AC  1803               	skipnc
  2031     05AD  0AA5               	incf	parseData@j+1,f
  2032     05AE  3000               	movlw	0
  2033     05AF  07A5               	addwf	parseData@j+1,f
  2034     05B0                     l2407:
  2035                           
  2036                           ;main.c: 465:         i++;
  2037     05B0  3001               	movlw	1
  2038     05B1  07A6               	addwf	parseData@i,f
  2039     05B2  1803               	skipnc
  2040     05B3  0AA7               	incf	parseData@i+1,f
  2041     05B4  3000               	movlw	0
  2042     05B5  07A7               	addwf	parseData@i+1,f
  2043     05B6                     l180:	
  2044                           ;main.c: 466:     }
  2045                           
  2046                           
  2047                           ;main.c: 458:     while (data[i] != '\0') {
  2048     05B6  0826               	movf	parseData@i,w
  2049     05B7  0728               	addwf	parseData@data,w
  2050     05B8  00A1               	movwf	??_parseData
  2051     05B9  0821               	movf	??_parseData,w
  2052     05BA  0084               	movwf	4
  2053     05BB  1383               	bcf	3,7	;select IRP bank0
  2054     05BC  0800               	movf	0,w
  2055     05BD  1D03               	btfss	3,2
  2056     05BE  2DC0               	goto	u1771
  2057     05BF  2DC1               	goto	u1770
  2058     05C0                     u1771:
  2059     05C0  2D85               	goto	l2399
  2060     05C1                     u1770:
  2061     05C1                     l2409:
  2062                           
  2063                           ;main.c: 468:     j++;
  2064     05C1  3001               	movlw	1
  2065     05C2  07A4               	addwf	parseData@j,f
  2066     05C3  1803               	skipnc
  2067     05C4  0AA5               	incf	parseData@j+1,f
  2068     05C5  3000               	movlw	0
  2069     05C6  07A5               	addwf	parseData@j+1,f
  2070     05C7                     l2411:
  2071                           
  2072                           ;main.c: 469:     data[j] = '\0';
  2073     05C7  0824               	movf	parseData@j,w
  2074     05C8  0728               	addwf	parseData@data,w
  2075     05C9  00A1               	movwf	??_parseData
  2076     05CA  0821               	movf	??_parseData,w
  2077     05CB  0084               	movwf	4
  2078     05CC  0180               	clrf	0
  2079     05CD                     l184:
  2080     05CD  0008               	return
  2081     05CE                     __end_of_parseData:
  2082                           
  2083                           	psect	text7
  2084     0725                     __ptext7:	
  2085 ;; *************** function _lcd_str *****************
  2086 ;; Defined at:
  2087 ;;		line 361 in file "main.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  str             2    3[BANK0 ] PTR const unsigned char 
  2090 ;;		 -> random_string@str(8), STR_6(11), buff(2), STR_5(11), 
  2091 ;;		 -> STR_4(4), STR_3(4), STR_2(12), STR_1(11), 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  i               1    6[BANK0 ] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       2       0       0       0
  2104 ;;      Locals:         0       1       0       0       0
  2105 ;;      Temps:          0       1       0       0       0
  2106 ;;      Totals:         0       4       0       0       0
  2107 ;;Total ram usage:        4 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 2
  2110 ;; This function calls:
  2111 ;;		_lcd_dat
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117     0725                     _lcd_str:	
  2118                           ;psect for function _lcd_str
  2119                           
  2120     0725                     l2269:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2123                           
  2124                           
  2125                           ;main.c: 362:     unsigned char i = 0;
  2126     0725  1283               	bcf	3,5	;RP0=0, select bank0
  2127     0726  1303               	bcf	3,6	;RP1=0, select bank0
  2128     0727  01A6               	clrf	lcd_str@i
  2129                           
  2130                           ;main.c: 364:     while (str[i] != 0) {
  2131     0728  2F40               	goto	l2275
  2132     0729                     l2271:
  2133                           
  2134                           ;main.c: 365:         lcd_dat(str[i]);
  2135     0729  0826               	movf	lcd_str@i,w
  2136     072A  0723               	addwf	lcd_str@str,w
  2137     072B  0084               	movwf	4
  2138     072C  0824               	movf	lcd_str@str+1,w
  2139     072D  1803               	skipnc
  2140     072E  0A24               	incf	lcd_str@str+1,w
  2141     072F  00FF               	movwf	btemp+1
  2142     0730  120A  118A  236A  120A  118A  	fcall	stringtab
  2143     0735  120A  118A  27CE  120A  118A  	fcall	_lcd_dat
  2144     073A                     l2273:
  2145                           
  2146                           ;main.c: 366:         i++;
  2147     073A  3001               	movlw	1
  2148     073B  1283               	bcf	3,5	;RP0=0, select bank0
  2149     073C  1303               	bcf	3,6	;RP1=0, select bank0
  2150     073D  00A5               	movwf	??_lcd_str
  2151     073E  0825               	movf	??_lcd_str,w
  2152     073F  07A6               	addwf	lcd_str@i,f
  2153     0740                     l2275:
  2154                           
  2155                           ;main.c: 364:     while (str[i] != 0) {
  2156     0740  0826               	movf	lcd_str@i,w
  2157     0741  0723               	addwf	lcd_str@str,w
  2158     0742  0084               	movwf	4
  2159     0743  0824               	movf	lcd_str@str+1,w
  2160     0744  1803               	skipnc
  2161     0745  0A24               	incf	lcd_str@str+1,w
  2162     0746  00FF               	movwf	btemp+1
  2163     0747  120A  118A  236A  120A  118A  	fcall	stringtab
  2164     074C  3A00               	xorlw	0
  2165     074D  1D03               	skipz
  2166     074E  2F50               	goto	u1651
  2167     074F  2F51               	goto	u1650
  2168     0750                     u1651:
  2169     0750  2F29               	goto	l2271
  2170     0751                     u1650:
  2171     0751                     l147:
  2172     0751  0008               	return
  2173     0752                     __end_of_lcd_str:
  2174                           
  2175                           	psect	text8
  2176     07CE                     __ptext8:	
  2177 ;; *************** function _lcd_dat *****************
  2178 ;; Defined at:
  2179 ;;		line 317 in file "main.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  val             1    wreg     unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  val             1    2[BANK0 ] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       0       0       0
  2194 ;;      Locals:         0       1       0       0       0
  2195 ;;      Temps:          0       2       0       0       0
  2196 ;;      Totals:         0       3       0       0       0
  2197 ;;Total ram usage:        3 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_lcd_str
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207     07CE                     _lcd_dat:	
  2208                           ;psect for function _lcd_dat
  2209                           
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _lcd_dat: [wreg]
  2213                           ;lcd_dat@val stored from wreg
  2214     07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2215     07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2216     07D0  00A2               	movwf	lcd_dat@val
  2217     07D1                     l2095:
  2218                           
  2219                           ;main.c: 318:     PORTEbits.RE1 = 1;
  2220     07D1  1489               	bsf	9,1	;volatile
  2221     07D2                     l2097:
  2222                           
  2223                           ;main.c: 320:     PORTD = val;
  2224     07D2  0822               	movf	lcd_dat@val,w
  2225     07D3  0088               	movwf	8	;volatile
  2226     07D4                     l2099:
  2227                           
  2228                           ;main.c: 321:     PORTEbits.RE2 = 1;
  2229     07D4  1509               	bsf	9,2	;volatile
  2230                           
  2231                           ;main.c: 322:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2232     07D5  3014               	movlw	20
  2233     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  2234     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  2235     07D8  00A1               	movwf	??_lcd_dat+1
  2236     07D9  3079               	movlw	121
  2237     07DA  00A0               	movwf	??_lcd_dat
  2238     07DB                     u1927:
  2239     07DB  0BA0               	decfsz	??_lcd_dat,f
  2240     07DC  2FDB               	goto	u1927
  2241     07DD  0BA1               	decfsz	??_lcd_dat+1,f
  2242     07DE  2FDB               	goto	u1927
  2243     07DF                     l2101:
  2244                           
  2245                           ;main.c: 323:     PORTEbits.RE1 = 0;
  2246     07DF  1283               	bcf	3,5	;RP0=0, select bank0
  2247     07E0  1303               	bcf	3,6	;RP1=0, select bank0
  2248     07E1  1089               	bcf	9,1	;volatile
  2249                           
  2250                           ;main.c: 324:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2251     07E2  3014               	movlw	20
  2252     07E3  1283               	bcf	3,5	;RP0=0, select bank0
  2253     07E4  1303               	bcf	3,6	;RP1=0, select bank0
  2254     07E5  00A1               	movwf	??_lcd_dat+1
  2255     07E6  3079               	movlw	121
  2256     07E7  00A0               	movwf	??_lcd_dat
  2257     07E8                     u1937:
  2258     07E8  0BA0               	decfsz	??_lcd_dat,f
  2259     07E9  2FE8               	goto	u1937
  2260     07EA  0BA1               	decfsz	??_lcd_dat+1,f
  2261     07EB  2FE8               	goto	u1937
  2262     07EC                     l2103:
  2263                           
  2264                           ;main.c: 326:     PORTEbits.RE1 = 1;
  2265     07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2266     07ED  1303               	bcf	3,6	;RP1=0, select bank0
  2267     07EE  1489               	bsf	9,1	;volatile
  2268     07EF                     l135:
  2269     07EF  0008               	return
  2270     07F0                     __end_of_lcd_dat:
  2271                           
  2272                           	psect	text9
  2273     0752                     __ptext9:	
  2274 ;; *************** function _lcd_send *****************
  2275 ;; Defined at:
  2276 ;;		line 370 in file "main.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  dato            1    wreg     unsigned char 
  2279 ;;  tipo            1    0[BANK0 ] unsigned char 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  dato            1    3[BANK0 ] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       1       0       0       0
  2292 ;;      Locals:         0       1       0       0       0
  2293 ;;      Temps:          0       2       0       0       0
  2294 ;;      Totals:         0       4       0       0       0
  2295 ;;Total ram usage:        4 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 1
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305     0752                     _lcd_send:	
  2306                           ;psect for function _lcd_send
  2307                           
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _lcd_send: [wreg+status,2+status,0]
  2311                           ;lcd_send@dato stored from wreg
  2312     0752  1283               	bcf	3,5	;RP0=0, select bank0
  2313     0753  1303               	bcf	3,6	;RP1=0, select bank0
  2314     0754  00A3               	movwf	lcd_send@dato
  2315     0755                     l2249:
  2316                           
  2317                           ;main.c: 370: void lcd_send(char dato, char tipo);main.c: 371: {;main.c: 374:     TRISD 
      +                          = 0x00;
  2318     0755  1683               	bsf	3,5	;RP0=1, select bank1
  2319     0756  1303               	bcf	3,6	;RP1=0, select bank1
  2320     0757  0188               	clrf	8	;volatile
  2321     0758                     l2251:
  2322                           
  2323                           ;main.c: 375:     TRISEbits.TRISE1 = 0;
  2324     0758  1089               	bcf	9,1	;volatile
  2325     0759                     l2253:
  2326                           
  2327                           ;main.c: 376:     TRISEbits.TRISE2 = 0;
  2328     0759  1109               	bcf	9,2	;volatile
  2329     075A                     l2255:
  2330                           
  2331                           ;main.c: 378:     PORTEbits.RE1 = 1;
  2332     075A  1283               	bcf	3,5	;RP0=0, select bank0
  2333     075B  1303               	bcf	3,6	;RP1=0, select bank0
  2334     075C  1489               	bsf	9,1	;volatile
  2335     075D                     l2257:
  2336                           
  2337                           ;main.c: 379:     PORTD = dato;
  2338     075D  0823               	movf	lcd_send@dato,w
  2339     075E  0088               	movwf	8	;volatile
  2340     075F                     l2259:
  2341                           
  2342                           ;main.c: 380:     PORTEbits.RE2 = tipo;
  2343     075F  0C20               	rrf	lcd_send@tipo,w
  2344     0760  1C03               	skipc
  2345     0761  1109               	bcf	9,2	;volatile
  2346     0762  1803               	skipnc
  2347     0763  1509               	bsf	9,2	;volatile
  2348     0764                     l2261:
  2349                           
  2350                           ;main.c: 381:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2351     0764  3014               	movlw	20
  2352     0765  1283               	bcf	3,5	;RP0=0, select bank0
  2353     0766  1303               	bcf	3,6	;RP1=0, select bank0
  2354     0767  00A2               	movwf	??_lcd_send+1
  2355     0768  3079               	movlw	121
  2356     0769  00A1               	movwf	??_lcd_send
  2357     076A                     u1947:
  2358     076A  0BA1               	decfsz	??_lcd_send,f
  2359     076B  2F6A               	goto	u1947
  2360     076C  0BA2               	decfsz	??_lcd_send+1,f
  2361     076D  2F6A               	goto	u1947
  2362     076E                     l2263:
  2363                           
  2364                           ;main.c: 382:     PORTEbits.RE1 = 0;
  2365     076E  1283               	bcf	3,5	;RP0=0, select bank0
  2366     076F  1303               	bcf	3,6	;RP1=0, select bank0
  2367     0770  1089               	bcf	9,1	;volatile
  2368     0771                     l2265:
  2369                           
  2370                           ;main.c: 383:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2371     0771  3014               	movlw	20
  2372     0772  1283               	bcf	3,5	;RP0=0, select bank0
  2373     0773  1303               	bcf	3,6	;RP1=0, select bank0
  2374     0774  00A2               	movwf	??_lcd_send+1
  2375     0775  3079               	movlw	121
  2376     0776  00A1               	movwf	??_lcd_send
  2377     0777                     u1957:
  2378     0777  0BA1               	decfsz	??_lcd_send,f
  2379     0778  2F77               	goto	u1957
  2380     0779  0BA2               	decfsz	??_lcd_send+1,f
  2381     077A  2F77               	goto	u1957
  2382     077B                     l2267:
  2383                           
  2384                           ;main.c: 384:     PORTEbits.RE1 = 1;
  2385     077B  1283               	bcf	3,5	;RP0=0, select bank0
  2386     077C  1303               	bcf	3,6	;RP1=0, select bank0
  2387     077D  1489               	bsf	9,1	;volatile
  2388     077E                     l150:
  2389     077E  0008               	return
  2390     077F                     __end_of_lcd_send:
  2391                           
  2392                           	psect	text10
  2393     04C8                     __ptext10:	
  2394 ;; *************** function _lcd_init *****************
  2395 ;; Defined at:
  2396 ;;		line 341 in file "main.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0, pclath, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0
  2412 ;;      Temps:          0       2       0       0       0
  2413 ;;      Totals:         0       2       0       0       0
  2414 ;;Total ram usage:        2 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 2
  2417 ;; This function calls:
  2418 ;;		_lcd_cmd
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424     04C8                     _lcd_init:	
  2425                           ;psect for function _lcd_init
  2426                           
  2427     04C8                     l2217:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2430                           
  2431                           
  2432                           ;main.c: 342:     TRISD = 0x00;
  2433     04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2434     04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2435     04CA  0188               	clrf	8	;volatile
  2436                           
  2437                           ;main.c: 343:     TRISE = 0x00;
  2438     04CB  0189               	clrf	9	;volatile
  2439     04CC                     l2219:
  2440                           
  2441                           ;main.c: 344:     PORTEbits.RE1 = 0;
  2442     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2443     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2444     04CE  1089               	bcf	9,1	;volatile
  2445     04CF                     l2221:
  2446                           
  2447                           ;main.c: 345:     PORTEbits.RE2 = 0;
  2448     04CF  1109               	bcf	9,2	;volatile
  2449     04D0                     l2223:
  2450                           
  2451                           ;main.c: 346:     _delay((unsigned long)((20)*(20000000/4000.0)));
  2452     04D0  3082               	movlw	130
  2453     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2454     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2455     04D3  00A4               	movwf	??_lcd_init+1
  2456     04D4  30DD               	movlw	221
  2457     04D5  00A3               	movwf	??_lcd_init
  2458     04D6                     u1967:
  2459     04D6  0BA3               	decfsz	??_lcd_init,f
  2460     04D7  2CD6               	goto	u1967
  2461     04D8  0BA4               	decfsz	??_lcd_init+1,f
  2462     04D9  2CD6               	goto	u1967
  2463     04DA                     l2225:
  2464                           
  2465                           ;main.c: 347:     PORTEbits.RE1 = 1;
  2466     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2467     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2468     04DC  1489               	bsf	9,1	;volatile
  2469     04DD                     l2227:
  2470                           
  2471                           ;main.c: 349:     lcd_cmd(0x38);
  2472     04DD  3038               	movlw	56
  2473     04DE  120A  158A  27DE  120A  118A  	fcall	_lcd_cmd
  2474     04E3                     l2229:
  2475                           
  2476                           ;main.c: 350:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2477     04E3  3021               	movlw	33
  2478     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2479     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2480     04E6  00A4               	movwf	??_lcd_init+1
  2481     04E7  3075               	movlw	117
  2482     04E8  00A3               	movwf	??_lcd_init
  2483     04E9                     u1977:
  2484     04E9  0BA3               	decfsz	??_lcd_init,f
  2485     04EA  2CE9               	goto	u1977
  2486     04EB  0BA4               	decfsz	??_lcd_init+1,f
  2487     04EC  2CE9               	goto	u1977
  2488     04ED  2CEE               	nop2
  2489     04EE                     l2231:
  2490                           
  2491                           ;main.c: 351:     lcd_cmd(0x38);
  2492     04EE  3038               	movlw	56
  2493     04EF  120A  158A  27DE  120A  118A  	fcall	_lcd_cmd
  2494     04F4                     l2233:
  2495                           
  2496                           ;main.c: 352:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2497     04F4  3007               	movlw	7
  2498     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2499     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2500     04F7  00A4               	movwf	??_lcd_init+1
  2501     04F8  307C               	movlw	124
  2502     04F9  00A3               	movwf	??_lcd_init
  2503     04FA                     u1987:
  2504     04FA  0BA3               	decfsz	??_lcd_init,f
  2505     04FB  2CFA               	goto	u1987
  2506     04FC  0BA4               	decfsz	??_lcd_init+1,f
  2507     04FD  2CFA               	goto	u1987
  2508     04FE  0000               	nop
  2509     04FF                     l2235:
  2510                           
  2511                           ;main.c: 353:     lcd_cmd(0x38);
  2512     04FF  3038               	movlw	56
  2513     0500  120A  158A  27DE  120A  118A  	fcall	_lcd_cmd
  2514     0505                     l2237:
  2515                           
  2516                           ;main.c: 354:     lcd_cmd(0x08);
  2517     0505  3008               	movlw	8
  2518     0506  120A  158A  27DE  120A  118A  	fcall	_lcd_cmd
  2519     050B                     l2239:
  2520                           
  2521                           ;main.c: 355:     lcd_cmd(0x0F);
  2522     050B  300F               	movlw	15
  2523     050C  120A  158A  27DE  120A  118A  	fcall	_lcd_cmd
  2524     0511                     l2241:
  2525                           
  2526                           ;main.c: 356:     lcd_cmd(0x01);
  2527     0511  3001               	movlw	1
  2528     0512  120A  158A  27DE  120A  118A  	fcall	_lcd_cmd
  2529     0517                     l2243:
  2530                           
  2531                           ;main.c: 357:     lcd_cmd(0b00001100);
  2532     0517  300C               	movlw	12
  2533     0518  120A  158A  27DE  120A  118A  	fcall	_lcd_cmd
  2534     051D                     l2245:
  2535                           
  2536                           ;main.c: 358:     lcd_cmd(0x80);
  2537     051D  3080               	movlw	128
  2538     051E  120A  158A  27DE  120A  118A  	fcall	_lcd_cmd
  2539     0523                     l141:
  2540     0523  0008               	return
  2541     0524                     __end_of_lcd_init:
  2542                           
  2543                           	psect	text11
  2544     0FDE                     __ptext11:	
  2545 ;; *************** function _lcd_cmd *****************
  2546 ;; Defined at:
  2547 ;;		line 329 in file "main.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  val             1    wreg     unsigned char 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  val             1    2[BANK0 ] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       1       0       0       0
  2563 ;;      Temps:          0       2       0       0       0
  2564 ;;      Totals:         0       3       0       0       0
  2565 ;;Total ram usage:        3 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 1
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_lcd_init
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575     0FDE                     _lcd_cmd:	
  2576                           ;psect for function _lcd_cmd
  2577                           
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _lcd_cmd: [wreg]
  2581                           ;lcd_cmd@val stored from wreg
  2582     0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2583     0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2584     0FE0  00A2               	movwf	lcd_cmd@val
  2585     0FE1                     l2105:
  2586                           
  2587                           ;main.c: 330:     PORTEbits.RE1 = 1;
  2588     0FE1  1489               	bsf	9,1	;volatile
  2589     0FE2                     l2107:
  2590                           
  2591                           ;main.c: 332:     PORTD = val;
  2592     0FE2  0822               	movf	lcd_cmd@val,w
  2593     0FE3  0088               	movwf	8	;volatile
  2594     0FE4                     l2109:
  2595                           
  2596                           ;main.c: 333:     PORTEbits.RE2 = 0;
  2597     0FE4  1109               	bcf	9,2	;volatile
  2598                           
  2599                           ;main.c: 334:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2600     0FE5  3014               	movlw	20
  2601     0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  2602     0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  2603     0FE8  00A1               	movwf	??_lcd_cmd+1
  2604     0FE9  3079               	movlw	121
  2605     0FEA  00A0               	movwf	??_lcd_cmd
  2606     0FEB                     u1997:
  2607     0FEB  0BA0               	decfsz	??_lcd_cmd,f
  2608     0FEC  2FEB               	goto	u1997
  2609     0FED  0BA1               	decfsz	??_lcd_cmd+1,f
  2610     0FEE  2FEB               	goto	u1997
  2611     0FEF                     l2111:
  2612                           
  2613                           ;main.c: 335:     PORTEbits.RE1 = 0;
  2614     0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  2615     0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  2616     0FF1  1089               	bcf	9,1	;volatile
  2617                           
  2618                           ;main.c: 336:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2619     0FF2  3014               	movlw	20
  2620     0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  2621     0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  2622     0FF5  00A1               	movwf	??_lcd_cmd+1
  2623     0FF6  3079               	movlw	121
  2624     0FF7  00A0               	movwf	??_lcd_cmd
  2625     0FF8                     u2007:
  2626     0FF8  0BA0               	decfsz	??_lcd_cmd,f
  2627     0FF9  2FF8               	goto	u2007
  2628     0FFA  0BA1               	decfsz	??_lcd_cmd+1,f
  2629     0FFB  2FF8               	goto	u2007
  2630     0FFC                     l2113:
  2631                           
  2632                           ;main.c: 338:     PORTEbits.RE1 = 1;
  2633     0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  2634     0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  2635     0FFE  1489               	bsf	9,1	;volatile
  2636     0FFF                     l138:
  2637     0FFF  0008               	return
  2638     1000                     __end_of_lcd_cmd:
  2639                           
  2640                           	psect	text12
  2641     01EF                     __ptext12:	
  2642 ;; *************** function _keyPressed *****************
  2643 ;; Defined at:
  2644 ;;		line 474 in file "main.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  tmp             1    3[BANK0 ] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      unsigned char 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2658 ;;      Params:         0       0       0       0       0
  2659 ;;      Locals:         0       1       0       0       0
  2660 ;;      Temps:          0       3       0       0       0
  2661 ;;      Totals:         0       4       0       0       0
  2662 ;;Total ram usage:        4 bytes
  2663 ;; Hardware stack levels used: 2
  2664 ;; Hardware stack levels required when called: 1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672     01EF                     _keyPressed:	
  2673                           ;psect for function _keyPressed
  2674                           
  2675     01EF                     l2277:	
  2676                           ;incstack = 0
  2677                           ; Regs used in _keyPressed: [wreg-fsr0h+status,2+status,0+pclath]
  2678                           
  2679                           
  2680                           ;main.c: 475:     TRISB = 0x00;
  2681     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2682     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2683     01F1  0186               	clrf	6	;volatile
  2684     01F2                     l2279:
  2685                           
  2686                           ;main.c: 476:     TRISD = 0x0F;
  2687     01F2  300F               	movlw	15
  2688     01F3  0088               	movwf	8	;volatile
  2689     01F4                     l2281:
  2690                           
  2691                           ;main.c: 478:     char tmp = '!';
  2692     01F4  3021               	movlw	33
  2693     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2694     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2695     01F7  00A3               	movwf	keyPressed@tmp
  2696                           
  2697                           ;main.c: 481:     for (colScan = 0; colScan < 3; colScan++) {
  2698     01F8  01F1               	clrf	_colScan
  2699     01F9                     l2287:
  2700                           
  2701                           ;main.c: 483:         PORTB = PORTB | 0x07;
  2702     01F9  0806               	movf	6,w	;volatile
  2703     01FA  3807               	iorlw	7
  2704     01FB  0086               	movwf	6	;volatile
  2705     01FC                     l2289:
  2706                           
  2707                           ;main.c: 484:         PORTB = PORTB & colMask[colScan];
  2708     01FC  0871               	movf	_colScan,w
  2709     01FD  3E50               	addlw	low ((_colMask-__stringbase)| (0+32768))
  2710     01FE  0084               	movwf	4
  2711     01FF  120A  118A  2374  120A  118A  	fcall	stringdir
  2712     0204  0506               	andwf	6,w	;volatile
  2713     0205  0086               	movwf	6	;volatile
  2714     0206                     l2291:
  2715                           
  2716                           ;main.c: 486:         for (rowScan = 0; rowScan < 4; rowScan++)
  2717     0206  01F0               	clrf	_rowScan
  2718     0207                     l2297:
  2719                           
  2720                           ;main.c: 487:         {;main.c: 488:             if (!(PORTD & rowMask[rowScan]))
  2721     0207  0870               	movf	_rowScan,w
  2722     0208  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  2723     0209  0084               	movwf	4
  2724     020A  120A  118A  2374  120A  118A  	fcall	stringdir
  2725     020F  0508               	andwf	8,w	;volatile
  2726     0210  1D03               	btfss	3,2
  2727     0211  2A13               	goto	u1661
  2728     0212  2A14               	goto	u1660
  2729     0213                     u1661:
  2730     0213  2A3B               	goto	l191
  2731     0214                     u1660:
  2732     0214                     l2299:
  2733                           
  2734                           ;main.c: 489:             {;main.c: 490:                 _delay((unsigned long)((5)*(200
      +                          00000/4000.0)));
  2735     0214  3021               	movlw	33
  2736     0215  1283               	bcf	3,5	;RP0=0, select bank0
  2737     0216  1303               	bcf	3,6	;RP1=0, select bank0
  2738     0217  00A1               	movwf	??_keyPressed+1
  2739     0218  3075               	movlw	117
  2740     0219  00A0               	movwf	??_keyPressed
  2741     021A                     u2017:
  2742     021A  0BA0               	decfsz	??_keyPressed,f
  2743     021B  2A1A               	goto	u2017
  2744     021C  0BA1               	decfsz	??_keyPressed+1,f
  2745     021D  2A1A               	goto	u2017
  2746     021E  2A1F               	nop2
  2747     021F                     l2301:
  2748                           
  2749                           ;main.c: 492:                 if (!(PORTD & rowMask[rowScan])) {
  2750     021F  0870               	movf	_rowScan,w
  2751     0220  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  2752     0221  0084               	movwf	4
  2753     0222  120A  118A  2374  120A  118A  	fcall	stringdir
  2754     0227  1283               	bcf	3,5	;RP0=0, select bank0
  2755     0228  1303               	bcf	3,6	;RP1=0, select bank0
  2756     0229  0508               	andwf	8,w	;volatile
  2757     022A  1D03               	btfss	3,2
  2758     022B  2A2D               	goto	u1671
  2759     022C  2A2E               	goto	u1670
  2760     022D                     u1671:
  2761     022D  2A3B               	goto	l191
  2762     022E                     u1670:
  2763     022E                     l2303:
  2764                           
  2765                           ;main.c: 494:                     keypressed = rowScan + (4 * colScan);
  2766     022E  0871               	movf	_colScan,w
  2767     022F  00A0               	movwf	??_keyPressed
  2768     0230  3002               	movlw	2
  2769     0231                     u1685:
  2770     0231  1003               	clrc
  2771     0232  0DA0               	rlf	??_keyPressed,f
  2772     0233  3EFF               	addlw	-1
  2773     0234  1D03               	skipz
  2774     0235  2A31               	goto	u1685
  2775     0236  0870               	movf	_rowScan,w
  2776     0237  0720               	addwf	??_keyPressed,w
  2777     0238  00F4               	movwf	_keypressed
  2778     0239                     l2305:
  2779                           
  2780                           ;main.c: 495:                     keyok = 1;
  2781     0239  01F3               	clrf	_keyok
  2782     023A  0AF3               	incf	_keyok,f
  2783     023B                     l191:	
  2784                           ;main.c: 497:             }
  2785                           
  2786                           
  2787                           ;main.c: 498:         }
  2788     023B  3001               	movlw	1
  2789     023C  00A0               	movwf	??_keyPressed
  2790     023D  0820               	movf	??_keyPressed,w
  2791     023E  07F0               	addwf	_rowScan,f
  2792     023F                     l2307:
  2793     023F  3004               	movlw	4
  2794     0240  0270               	subwf	_rowScan,w
  2795     0241  1C03               	skipc
  2796     0242  2A44               	goto	u1691
  2797     0243  2A45               	goto	u1690
  2798     0244                     u1691:
  2799     0244  2A07               	goto	l2297
  2800     0245                     u1690:
  2801     0245                     l2309:
  2802                           
  2803                           ;main.c: 500:         if (keyok)
  2804     0245  0873               	movf	_keyok,w
  2805     0246  1903               	btfsc	3,2
  2806     0247  2A49               	goto	u1701
  2807     0248  2A4A               	goto	u1700
  2808     0249                     u1701:
  2809     0249  2ABF               	goto	l2353
  2810     024A                     u1700:
  2811     024A  2A72               	goto	l2341
  2812     024B                     l2313:
  2813     024B  302A               	movlw	42
  2814     024C  00A3               	movwf	keyPressed@tmp
  2815                           
  2816                           ;main.c: 505:                     break;
  2817     024D  2AA0               	goto	l2343
  2818     024E                     l2315:
  2819     024E  3037               	movlw	55
  2820     024F  00A3               	movwf	keyPressed@tmp
  2821                           
  2822                           ;main.c: 507:                     break;
  2823     0250  2AA0               	goto	l2343
  2824     0251                     l2317:
  2825     0251  3034               	movlw	52
  2826     0252  00A3               	movwf	keyPressed@tmp
  2827                           
  2828                           ;main.c: 509:                     break;
  2829     0253  2AA0               	goto	l2343
  2830     0254                     l2319:
  2831     0254  3031               	movlw	49
  2832     0255  00A3               	movwf	keyPressed@tmp
  2833                           
  2834                           ;main.c: 511:                     break;
  2835     0256  2AA0               	goto	l2343
  2836     0257                     l2321:
  2837     0257  3030               	movlw	48
  2838     0258  00A3               	movwf	keyPressed@tmp
  2839                           
  2840                           ;main.c: 513:                     break;
  2841     0259  2AA0               	goto	l2343
  2842     025A                     l2323:
  2843     025A  3038               	movlw	56
  2844     025B  00A3               	movwf	keyPressed@tmp
  2845                           
  2846                           ;main.c: 515:                     break;
  2847     025C  2AA0               	goto	l2343
  2848     025D                     l2325:
  2849     025D  3035               	movlw	53
  2850     025E  00A3               	movwf	keyPressed@tmp
  2851                           
  2852                           ;main.c: 517:                     break;
  2853     025F  2AA0               	goto	l2343
  2854     0260                     l2327:
  2855     0260  3032               	movlw	50
  2856     0261  00A3               	movwf	keyPressed@tmp
  2857                           
  2858                           ;main.c: 519:                     break;
  2859     0262  2AA0               	goto	l2343
  2860     0263                     l2329:
  2861     0263  3023               	movlw	35
  2862     0264  00A3               	movwf	keyPressed@tmp
  2863                           
  2864                           ;main.c: 521:                     break;
  2865     0265  2AA0               	goto	l2343
  2866     0266                     l2331:
  2867     0266  3039               	movlw	57
  2868     0267  00A3               	movwf	keyPressed@tmp
  2869                           
  2870                           ;main.c: 523:                     break;
  2871     0268  2AA0               	goto	l2343
  2872     0269                     l2333:
  2873     0269  3036               	movlw	54
  2874     026A  00A3               	movwf	keyPressed@tmp
  2875                           
  2876                           ;main.c: 525:                     break;
  2877     026B  2AA0               	goto	l2343
  2878     026C                     l2335:
  2879     026C  3033               	movlw	51
  2880     026D  00A3               	movwf	keyPressed@tmp
  2881                           
  2882                           ;main.c: 527:                     break;
  2883     026E  2AA0               	goto	l2343
  2884     026F                     l2337:
  2885     026F  3021               	movlw	33
  2886     0270  00A3               	movwf	keyPressed@tmp
  2887                           
  2888                           ;main.c: 529:                     break;
  2889     0271  2AA0               	goto	l2343
  2890     0272                     l2341:
  2891     0272  0874               	movf	_keypressed,w
  2892     0273  00A0               	movwf	??_keyPressed
  2893     0274  01A1               	clrf	??_keyPressed+1
  2894                           
  2895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2896                           ; Switch size 1, requested type "simple"
  2897                           ; Number of cases is 1, Range of values is 0 to 0
  2898                           ; switch strategies available:
  2899                           ; Name         Instructions Cycles
  2900                           ; simple_byte            4     3 (average)
  2901                           ; direct_byte           11     8 (fixed)
  2902                           ; jumptable            260     6 (fixed)
  2903                           ;	Chosen strategy is simple_byte
  2904     0275  0821               	movf	??_keyPressed+1,w
  2905     0276  3A00               	xorlw	0	; case 0
  2906     0277  1903               	skipnz
  2907     0278  2A7A               	goto	l2579
  2908     0279  2A6F               	goto	l2337
  2909     027A                     l2579:
  2910                           
  2911                           ; Switch size 1, requested type "simple"
  2912                           ; Number of cases is 12, Range of values is 0 to 11
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte           37    19 (average)
  2916                           ; direct_byte           44     8 (fixed)
  2917                           ; jumptable            260     6 (fixed)
  2918                           ;	Chosen strategy is simple_byte
  2919     027A  0820               	movf	??_keyPressed,w
  2920     027B  3A00               	xorlw	0	; case 0
  2921     027C  1903               	skipnz
  2922     027D  2A4B               	goto	l2313
  2923     027E  3A01               	xorlw	1	; case 1
  2924     027F  1903               	skipnz
  2925     0280  2A4E               	goto	l2315
  2926     0281  3A03               	xorlw	3	; case 2
  2927     0282  1903               	skipnz
  2928     0283  2A51               	goto	l2317
  2929     0284  3A01               	xorlw	1	; case 3
  2930     0285  1903               	skipnz
  2931     0286  2A54               	goto	l2319
  2932     0287  3A07               	xorlw	7	; case 4
  2933     0288  1903               	skipnz
  2934     0289  2A57               	goto	l2321
  2935     028A  3A01               	xorlw	1	; case 5
  2936     028B  1903               	skipnz
  2937     028C  2A5A               	goto	l2323
  2938     028D  3A03               	xorlw	3	; case 6
  2939     028E  1903               	skipnz
  2940     028F  2A5D               	goto	l2325
  2941     0290  3A01               	xorlw	1	; case 7
  2942     0291  1903               	skipnz
  2943     0292  2A60               	goto	l2327
  2944     0293  3A0F               	xorlw	15	; case 8
  2945     0294  1903               	skipnz
  2946     0295  2A63               	goto	l2329
  2947     0296  3A01               	xorlw	1	; case 9
  2948     0297  1903               	skipnz
  2949     0298  2A66               	goto	l2331
  2950     0299  3A03               	xorlw	3	; case 10
  2951     029A  1903               	skipnz
  2952     029B  2A69               	goto	l2333
  2953     029C  3A01               	xorlw	1	; case 11
  2954     029D  1903               	skipnz
  2955     029E  2A6C               	goto	l2335
  2956     029F  2A6F               	goto	l2337
  2957     02A0                     l2343:
  2958                           
  2959                           ;main.c: 534:             keyok = 0;
  2960     02A0  01F3               	clrf	_keyok
  2961     02A1                     l2345:
  2962                           
  2963                           ;main.c: 537:             PORTD = PORTD | 0x0F;
  2964     02A1  0808               	movf	8,w	;volatile
  2965     02A2  380F               	iorlw	15
  2966     02A3  0088               	movwf	8	;volatile
  2967                           
  2968                           ;main.c: 538:             while ((PORTD & 0x0F) != 0x0F) {
  2969     02A4  2AA8               	goto	l2349
  2970     02A5                     l2347:
  2971                           
  2972                           ;main.c: 539:                 PORTD = PORTD | 0x0F;
  2973     02A5  0808               	movf	8,w	;volatile
  2974     02A6  380F               	iorlw	15
  2975     02A7  0088               	movwf	8	;volatile
  2976     02A8                     l2349:	
  2977                           ;main.c: 540:                 continue;
  2978                           
  2979                           
  2980                           ;main.c: 538:             while ((PORTD & 0x0F) != 0x0F) {
  2981     02A8  300F               	movlw	15
  2982     02A9  0508               	andwf	8,w	;volatile
  2983     02AA  00A0               	movwf	??_keyPressed
  2984     02AB  300F               	movlw	15
  2985     02AC  0620               	xorwf	??_keyPressed,w
  2986     02AD  1D03               	btfss	3,2
  2987     02AE  2AB0               	goto	u1711
  2988     02AF  2AB1               	goto	u1710
  2989     02B0                     u1711:
  2990     02B0  2AA5               	goto	l2347
  2991     02B1                     u1710:
  2992     02B1                     l2351:
  2993                           
  2994                           ;main.c: 543:             _delay((unsigned long)((200)*(20000000/4000.0)));
  2995     02B1  3006               	movlw	6
  2996     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2997     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2998     02B4  00A2               	movwf	??_keyPressed+2
  2999     02B5  3013               	movlw	19
  3000     02B6  00A1               	movwf	??_keyPressed+1
  3001     02B7  30AD               	movlw	173
  3002     02B8  00A0               	movwf	??_keyPressed
  3003     02B9                     u2027:
  3004     02B9  0BA0               	decfsz	??_keyPressed,f
  3005     02BA  2AB9               	goto	u2027
  3006     02BB  0BA1               	decfsz	??_keyPressed+1,f
  3007     02BC  2AB9               	goto	u2027
  3008     02BD  0BA2               	decfsz	??_keyPressed+2,f
  3009     02BE  2AB9               	goto	u2027
  3010     02BF                     l2353:	
  3011                           ;main.c: 544:         } else {
  3012                           
  3013                           
  3014                           ;main.c: 548:     }
  3015     02BF  3001               	movlw	1
  3016     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  3017     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  3018     02C2  00A0               	movwf	??_keyPressed
  3019     02C3  0820               	movf	??_keyPressed,w
  3020     02C4  07F1               	addwf	_colScan,f
  3021     02C5                     l2355:
  3022     02C5  3003               	movlw	3
  3023     02C6  0271               	subwf	_colScan,w
  3024     02C7  1C03               	skipc
  3025     02C8  2ACA               	goto	u1721
  3026     02C9  2ACB               	goto	u1720
  3027     02CA                     u1721:
  3028     02CA  29F9               	goto	l2287
  3029     02CB                     u1720:
  3030     02CB                     l2357:
  3031                           
  3032                           ;main.c: 550:     return tmp;
  3033     02CB  0823               	movf	keyPressed@tmp,w
  3034     02CC                     l213:
  3035     02CC  0008               	return
  3036     02CD                     __end_of_keyPressed:
  3037                           
  3038                           	psect	text13
  3039     07AA                     __ptext13:	
  3040 ;; *************** function _itoa *****************
  3041 ;; Defined at:
  3042 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  buf             1    wreg     PTR unsigned char 
  3045 ;;		 -> buff(2), 
  3046 ;;  val             2   35[BANK0 ] int 
  3047 ;;  base            2   37[BANK0 ] int 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  buf             1   40[BANK0 ] PTR unsigned char 
  3050 ;;		 -> buff(2), 
  3051 ;;  cp              1    0        PTR unsigned char 
  3052 ;;		 -> buff(2), 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      PTR unsigned char 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         0       4       0       0       0
  3063 ;;      Locals:         0       1       0       0       0
  3064 ;;      Temps:          0       1       0       0       0
  3065 ;;      Totals:         0       6       0       0       0
  3066 ;;Total ram usage:        6 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 3
  3069 ;; This function calls:
  3070 ;;		_utoa
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076     07AA                     _itoa:	
  3077                           ;psect for function _itoa
  3078                           
  3079                           
  3080                           ;incstack = 0
  3081                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3082                           ;itoa@buf stored from wreg
  3083     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3084     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3085     07AC  00C8               	movwf	itoa@buf
  3086     07AD                     l2429:
  3087     07AD                     l2431:
  3088     07AD  1FC4               	btfss	itoa@val+1,7
  3089     07AE  2FB0               	goto	u1801
  3090     07AF  2FB1               	goto	u1800
  3091     07B0                     u1801:
  3092     07B0  2FBF               	goto	l2439
  3093     07B1                     u1800:
  3094     07B1                     l2433:
  3095     07B1  0848               	movf	itoa@buf,w
  3096     07B2  0084               	movwf	4
  3097     07B3  302D               	movlw	45
  3098     07B4  1383               	bcf	3,7	;select IRP bank0
  3099     07B5  0080               	movwf	0
  3100     07B6                     l2435:
  3101     07B6  3001               	movlw	1
  3102     07B7  00C7               	movwf	??_itoa
  3103     07B8  0847               	movf	??_itoa,w
  3104     07B9  07C8               	addwf	itoa@buf,f
  3105     07BA                     l2437:
  3106     07BA  09C3               	comf	itoa@val,f
  3107     07BB  09C4               	comf	itoa@val+1,f
  3108     07BC  0AC3               	incf	itoa@val,f
  3109     07BD  1903               	skipnz
  3110     07BE  0AC4               	incf	itoa@val+1,f
  3111     07BF                     l2439:
  3112     07BF  0844               	movf	itoa@val+1,w
  3113     07C0  00BB               	movwf	utoa@val+1
  3114     07C1  0843               	movf	itoa@val,w
  3115     07C2  00BA               	movwf	utoa@val
  3116     07C3  0846               	movf	itoa@base+1,w
  3117     07C4  00BD               	movwf	utoa@base+1
  3118     07C5  0845               	movf	itoa@base,w
  3119     07C6  00BC               	movwf	utoa@base
  3120     07C7  0848               	movf	itoa@buf,w
  3121     07C8  120A  118A  245A  120A  118A  	fcall	_utoa
  3122     07CD                     l763:
  3123     07CD  0008               	return
  3124     07CE                     __end_of_itoa:
  3125                           
  3126                           	psect	text14
  3127     045A                     __ptext14:	
  3128 ;; *************** function _utoa *****************
  3129 ;; Defined at:
  3130 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  buf             1    wreg     PTR unsigned char 
  3133 ;;		 -> buff(2), 
  3134 ;;  val             2   26[BANK0 ] unsigned int 
  3135 ;;  base            2   28[BANK0 ] int 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  buf             1   34[BANK0 ] PTR unsigned char 
  3138 ;;		 -> buff(2), 
  3139 ;;  v               2   31[BANK0 ] unsigned int 
  3140 ;;  c               1   33[BANK0 ] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      PTR unsigned char 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         0       4       0       0       0
  3151 ;;      Locals:         0       4       0       0       0
  3152 ;;      Temps:          0       1       0       0       0
  3153 ;;      Totals:         0       9       0       0       0
  3154 ;;Total ram usage:        9 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 2
  3157 ;; This function calls:
  3158 ;;		___lwdiv
  3159 ;;		___lwmod
  3160 ;; This function is called by:
  3161 ;;		_itoa
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165     045A                     _utoa:	
  3166                           ;psect for function _utoa
  3167                           
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3171                           ;utoa@buf stored from wreg
  3172     045A  1283               	bcf	3,5	;RP0=0, select bank0
  3173     045B  1303               	bcf	3,6	;RP1=0, select bank0
  3174     045C  00C2               	movwf	utoa@buf
  3175     045D                     l2171:
  3176     045D  083B               	movf	utoa@val+1,w
  3177     045E  00C0               	movwf	utoa@v+1
  3178     045F  083A               	movf	utoa@val,w
  3179     0460  00BF               	movwf	utoa@v
  3180     0461                     l2173:
  3181     0461  083D               	movf	utoa@base+1,w
  3182     0462  00A1               	movwf	___lwdiv@divisor+1
  3183     0463  083C               	movf	utoa@base,w
  3184     0464  00A0               	movwf	___lwdiv@divisor
  3185     0465  0840               	movf	utoa@v+1,w
  3186     0466  00A3               	movwf	___lwdiv@dividend+1
  3187     0467  083F               	movf	utoa@v,w
  3188     0468  00A2               	movwf	___lwdiv@dividend
  3189     0469  120A  118A  265D  120A  118A  	fcall	___lwdiv
  3190     046E  1283               	bcf	3,5	;RP0=0, select bank0
  3191     046F  1303               	bcf	3,6	;RP1=0, select bank0
  3192     0470  0821               	movf	?___lwdiv+1,w
  3193     0471  00C0               	movwf	utoa@v+1
  3194     0472  0820               	movf	?___lwdiv,w
  3195     0473  00BF               	movwf	utoa@v
  3196     0474                     l2175:
  3197     0474  3001               	movlw	1
  3198     0475  00BE               	movwf	??_utoa
  3199     0476  083E               	movf	??_utoa,w
  3200     0477  07C2               	addwf	utoa@buf,f
  3201     0478                     l2177:
  3202     0478  083F               	movf	utoa@v,w
  3203     0479  0440               	iorwf	utoa@v+1,w
  3204     047A  1D03               	btfss	3,2
  3205     047B  2C7D               	goto	u1611
  3206     047C  2C7E               	goto	u1610
  3207     047D                     u1611:
  3208     047D  2C61               	goto	l2173
  3209     047E                     u1610:
  3210     047E                     l2179:
  3211     047E  0842               	movf	utoa@buf,w
  3212     047F  0084               	movwf	4
  3213     0480  1383               	bcf	3,7	;select IRP bank0
  3214     0481  0180               	clrf	0
  3215     0482                     l2181:
  3216     0482  3001               	movlw	1
  3217     0483  02C2               	subwf	utoa@buf,f
  3218     0484                     l2183:
  3219     0484  083D               	movf	utoa@base+1,w
  3220     0485  00B5               	movwf	___lwmod@divisor+1
  3221     0486  083C               	movf	utoa@base,w
  3222     0487  00B4               	movwf	___lwmod@divisor
  3223     0488  083B               	movf	utoa@val+1,w
  3224     0489  00B7               	movwf	___lwmod@dividend+1
  3225     048A  083A               	movf	utoa@val,w
  3226     048B  00B6               	movwf	___lwmod@dividend
  3227     048C  120A  118A  26E9  120A  118A  	fcall	___lwmod
  3228     0491  1283               	bcf	3,5	;RP0=0, select bank0
  3229     0492  1303               	bcf	3,6	;RP1=0, select bank0
  3230     0493  0834               	movf	?___lwmod,w
  3231     0494  00C1               	movwf	utoa@c
  3232     0495                     l2185:
  3233     0495  083D               	movf	utoa@base+1,w
  3234     0496  00A1               	movwf	___lwdiv@divisor+1
  3235     0497  083C               	movf	utoa@base,w
  3236     0498  00A0               	movwf	___lwdiv@divisor
  3237     0499  083B               	movf	utoa@val+1,w
  3238     049A  00A3               	movwf	___lwdiv@dividend+1
  3239     049B  083A               	movf	utoa@val,w
  3240     049C  00A2               	movwf	___lwdiv@dividend
  3241     049D  120A  118A  265D  120A  118A  	fcall	___lwdiv
  3242     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3243     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  3244     04A4  0821               	movf	?___lwdiv+1,w
  3245     04A5  00BB               	movwf	utoa@val+1
  3246     04A6  0820               	movf	?___lwdiv,w
  3247     04A7  00BA               	movwf	utoa@val
  3248     04A8                     l2187:
  3249     04A8  300A               	movlw	10
  3250     04A9  0241               	subwf	utoa@c,w
  3251     04AA  1C03               	skipc
  3252     04AB  2CAD               	goto	u1621
  3253     04AC  2CAE               	goto	u1620
  3254     04AD                     u1621:
  3255     04AD  2CB2               	goto	l769
  3256     04AE                     u1620:
  3257     04AE                     l2189:
  3258     04AE  3007               	movlw	7
  3259     04AF  00BE               	movwf	??_utoa
  3260     04B0  083E               	movf	??_utoa,w
  3261     04B1  07C1               	addwf	utoa@c,f
  3262     04B2                     l769:
  3263     04B2  3030               	movlw	48
  3264     04B3  00BE               	movwf	??_utoa
  3265     04B4  083E               	movf	??_utoa,w
  3266     04B5  07C1               	addwf	utoa@c,f
  3267     04B6                     l2191:
  3268     04B6  0842               	movf	utoa@buf,w
  3269     04B7  0084               	movwf	4
  3270     04B8  0841               	movf	utoa@c,w
  3271     04B9  1383               	bcf	3,7	;select IRP bank0
  3272     04BA  0080               	movwf	0
  3273     04BB                     l2193:
  3274     04BB  3001               	movlw	1
  3275     04BC  02C2               	subwf	utoa@buf,f
  3276     04BD                     l2195:
  3277     04BD  083A               	movf	utoa@val,w
  3278     04BE  043B               	iorwf	utoa@val+1,w
  3279     04BF  1D03               	btfss	3,2
  3280     04C0  2CC2               	goto	u1631
  3281     04C1  2CC3               	goto	u1630
  3282     04C2                     u1631:
  3283     04C2  2C84               	goto	l2183
  3284     04C3                     u1630:
  3285     04C3                     l2197:
  3286                           
  3287                           ;	Return value of _utoa is never used
  3288     04C3  3001               	movlw	1
  3289     04C4  00BE               	movwf	??_utoa
  3290     04C5  083E               	movf	??_utoa,w
  3291     04C6  07C2               	addwf	utoa@buf,f
  3292     04C7                     l771:
  3293     04C7  0008               	return
  3294     04C8                     __end_of_utoa:
  3295                           
  3296                           	psect	text15
  3297     06E9                     __ptext15:	
  3298 ;; *************** function ___lwmod *****************
  3299 ;; Defined at:
  3300 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  divisor         2   20[BANK0 ] unsigned int 
  3303 ;;  dividend        2   22[BANK0 ] unsigned int 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  counter         1   25[BANK0 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  2   20[BANK0 ] unsigned int 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       4       0       0       0
  3316 ;;      Locals:         0       1       0       0       0
  3317 ;;      Temps:          0       1       0       0       0
  3318 ;;      Totals:         0       6       0       0       0
  3319 ;;Total ram usage:        6 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_random_string
  3326 ;;		_utoa
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330     06E9                     ___lwmod:	
  3331                           ;psect for function ___lwmod
  3332                           
  3333     06E9                     l2073:	
  3334                           ;incstack = 0
  3335                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3336                           
  3337     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3338     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3339     06EB  0834               	movf	___lwmod@divisor,w
  3340     06EC  0435               	iorwf	___lwmod@divisor+1,w
  3341     06ED  1903               	btfsc	3,2
  3342     06EE  2EF0               	goto	u1431
  3343     06EF  2EF1               	goto	u1430
  3344     06F0                     u1431:
  3345     06F0  2F20               	goto	l2091
  3346     06F1                     u1430:
  3347     06F1                     l2075:
  3348     06F1  01B9               	clrf	___lwmod@counter
  3349     06F2  0AB9               	incf	___lwmod@counter,f
  3350     06F3  2EFF               	goto	l2081
  3351     06F4                     l2077:
  3352     06F4  3001               	movlw	1
  3353     06F5                     u1445:
  3354     06F5  1003               	clrc
  3355     06F6  0DB4               	rlf	___lwmod@divisor,f
  3356     06F7  0DB5               	rlf	___lwmod@divisor+1,f
  3357     06F8  3EFF               	addlw	-1
  3358     06F9  1D03               	skipz
  3359     06FA  2EF5               	goto	u1445
  3360     06FB                     l2079:
  3361     06FB  3001               	movlw	1
  3362     06FC  00B8               	movwf	??___lwmod
  3363     06FD  0838               	movf	??___lwmod,w
  3364     06FE  07B9               	addwf	___lwmod@counter,f
  3365     06FF                     l2081:
  3366     06FF  1FB5               	btfss	___lwmod@divisor+1,7
  3367     0700  2F02               	goto	u1451
  3368     0701  2F03               	goto	u1450
  3369     0702                     u1451:
  3370     0702  2EF4               	goto	l2077
  3371     0703                     u1450:
  3372     0703                     l2083:
  3373     0703  0835               	movf	___lwmod@divisor+1,w
  3374     0704  0237               	subwf	___lwmod@dividend+1,w
  3375     0705  1D03               	skipz
  3376     0706  2F09               	goto	u1465
  3377     0707  0834               	movf	___lwmod@divisor,w
  3378     0708  0236               	subwf	___lwmod@dividend,w
  3379     0709                     u1465:
  3380     0709  1C03               	skipc
  3381     070A  2F0C               	goto	u1461
  3382     070B  2F0D               	goto	u1460
  3383     070C                     u1461:
  3384     070C  2F13               	goto	l2087
  3385     070D                     u1460:
  3386     070D                     l2085:
  3387     070D  0834               	movf	___lwmod@divisor,w
  3388     070E  02B6               	subwf	___lwmod@dividend,f
  3389     070F  0835               	movf	___lwmod@divisor+1,w
  3390     0710  1C03               	skipc
  3391     0711  03B7               	decf	___lwmod@dividend+1,f
  3392     0712  02B7               	subwf	___lwmod@dividend+1,f
  3393     0713                     l2087:
  3394     0713  3001               	movlw	1
  3395     0714                     u1475:
  3396     0714  1003               	clrc
  3397     0715  0CB5               	rrf	___lwmod@divisor+1,f
  3398     0716  0CB4               	rrf	___lwmod@divisor,f
  3399     0717  3EFF               	addlw	-1
  3400     0718  1D03               	skipz
  3401     0719  2F14               	goto	u1475
  3402     071A                     l2089:
  3403     071A  3001               	movlw	1
  3404     071B  02B9               	subwf	___lwmod@counter,f
  3405     071C  1D03               	btfss	3,2
  3406     071D  2F1F               	goto	u1481
  3407     071E  2F20               	goto	u1480
  3408     071F                     u1481:
  3409     071F  2F03               	goto	l2083
  3410     0720                     u1480:
  3411     0720                     l2091:
  3412     0720  0837               	movf	___lwmod@dividend+1,w
  3413     0721  00B5               	movwf	?___lwmod+1
  3414     0722  0836               	movf	___lwmod@dividend,w
  3415     0723  00B4               	movwf	?___lwmod
  3416     0724                     l591:
  3417     0724  0008               	return
  3418     0725                     __end_of___lwmod:
  3419                           
  3420                           	psect	text16
  3421     065D                     __ptext16:	
  3422 ;; *************** function ___lwdiv *****************
  3423 ;; Defined at:
  3424 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  divisor         2    0[BANK0 ] unsigned int 
  3427 ;;  dividend        2    2[BANK0 ] unsigned int 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  quotient        2    6[BANK0 ] unsigned int 
  3430 ;;  counter         1    5[BANK0 ] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  2    0[BANK0 ] unsigned int 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         0       4       0       0       0
  3441 ;;      Locals:         0       3       0       0       0
  3442 ;;      Temps:          0       1       0       0       0
  3443 ;;      Totals:         0       8       0       0       0
  3444 ;;Total ram usage:        8 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; Hardware stack levels required when called: 1
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_utoa
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454     065D                     ___lwdiv:	
  3455                           ;psect for function ___lwdiv
  3456                           
  3457     065D                     l2047:	
  3458                           ;incstack = 0
  3459                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3460                           
  3461     065D  1283               	bcf	3,5	;RP0=0, select bank0
  3462     065E  1303               	bcf	3,6	;RP1=0, select bank0
  3463     065F  01A6               	clrf	___lwdiv@quotient
  3464     0660  01A7               	clrf	___lwdiv@quotient+1
  3465     0661                     l2049:
  3466     0661  0820               	movf	___lwdiv@divisor,w
  3467     0662  0421               	iorwf	___lwdiv@divisor+1,w
  3468     0663  1903               	btfsc	3,2
  3469     0664  2E66               	goto	u1361
  3470     0665  2E67               	goto	u1360
  3471     0666                     u1361:
  3472     0666  2E9E               	goto	l2069
  3473     0667                     u1360:
  3474     0667                     l2051:
  3475     0667  01A5               	clrf	___lwdiv@counter
  3476     0668  0AA5               	incf	___lwdiv@counter,f
  3477     0669  2E75               	goto	l2057
  3478     066A                     l2053:
  3479     066A  3001               	movlw	1
  3480     066B                     u1375:
  3481     066B  1003               	clrc
  3482     066C  0DA0               	rlf	___lwdiv@divisor,f
  3483     066D  0DA1               	rlf	___lwdiv@divisor+1,f
  3484     066E  3EFF               	addlw	-1
  3485     066F  1D03               	skipz
  3486     0670  2E6B               	goto	u1375
  3487     0671                     l2055:
  3488     0671  3001               	movlw	1
  3489     0672  00A4               	movwf	??___lwdiv
  3490     0673  0824               	movf	??___lwdiv,w
  3491     0674  07A5               	addwf	___lwdiv@counter,f
  3492     0675                     l2057:
  3493     0675  1FA1               	btfss	___lwdiv@divisor+1,7
  3494     0676  2E78               	goto	u1381
  3495     0677  2E79               	goto	u1380
  3496     0678                     u1381:
  3497     0678  2E6A               	goto	l2053
  3498     0679                     u1380:
  3499     0679                     l2059:
  3500     0679  3001               	movlw	1
  3501     067A                     u1395:
  3502     067A  1003               	clrc
  3503     067B  0DA6               	rlf	___lwdiv@quotient,f
  3504     067C  0DA7               	rlf	___lwdiv@quotient+1,f
  3505     067D  3EFF               	addlw	-1
  3506     067E  1D03               	skipz
  3507     067F  2E7A               	goto	u1395
  3508     0680  0821               	movf	___lwdiv@divisor+1,w
  3509     0681  0223               	subwf	___lwdiv@dividend+1,w
  3510     0682  1D03               	skipz
  3511     0683  2E86               	goto	u1405
  3512     0684  0820               	movf	___lwdiv@divisor,w
  3513     0685  0222               	subwf	___lwdiv@dividend,w
  3514     0686                     u1405:
  3515     0686  1C03               	skipc
  3516     0687  2E89               	goto	u1401
  3517     0688  2E8A               	goto	u1400
  3518     0689                     u1401:
  3519     0689  2E91               	goto	l2065
  3520     068A                     u1400:
  3521     068A                     l2061:
  3522     068A  0820               	movf	___lwdiv@divisor,w
  3523     068B  02A2               	subwf	___lwdiv@dividend,f
  3524     068C  0821               	movf	___lwdiv@divisor+1,w
  3525     068D  1C03               	skipc
  3526     068E  03A3               	decf	___lwdiv@dividend+1,f
  3527     068F  02A3               	subwf	___lwdiv@dividend+1,f
  3528     0690                     l2063:
  3529     0690  1426               	bsf	___lwdiv@quotient,0
  3530     0691                     l2065:
  3531     0691  3001               	movlw	1
  3532     0692                     u1415:
  3533     0692  1003               	clrc
  3534     0693  0CA1               	rrf	___lwdiv@divisor+1,f
  3535     0694  0CA0               	rrf	___lwdiv@divisor,f
  3536     0695  3EFF               	addlw	-1
  3537     0696  1D03               	skipz
  3538     0697  2E92               	goto	u1415
  3539     0698                     l2067:
  3540     0698  3001               	movlw	1
  3541     0699  02A5               	subwf	___lwdiv@counter,f
  3542     069A  1D03               	btfss	3,2
  3543     069B  2E9D               	goto	u1421
  3544     069C  2E9E               	goto	u1420
  3545     069D                     u1421:
  3546     069D  2E79               	goto	l2059
  3547     069E                     u1420:
  3548     069E                     l2069:
  3549     069E  0827               	movf	___lwdiv@quotient+1,w
  3550     069F  00A1               	movwf	?___lwdiv+1
  3551     06A0  0826               	movf	___lwdiv@quotient,w
  3552     06A1  00A0               	movwf	?___lwdiv
  3553     06A2                     l581:
  3554     06A2  0008               	return
  3555     06A3                     __end_of___lwdiv:
  3556                           
  3557                           	psect	text17
  3558     0FAB                     __ptext17:	
  3559 ;; *************** function _initKeyPad *****************
  3560 ;; Defined at:
  3561 ;;		line 390 in file "main.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0
  3577 ;;      Temps:          0       1       0       0       0
  3578 ;;      Totals:         0       1       0       0       0
  3579 ;;Total ram usage:        1 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_main
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589     0FAB                     _initKeyPad:	
  3590                           ;psect for function _initKeyPad
  3591                           
  3592     0FAB                     l2247:	
  3593                           ;incstack = 0
  3594                           ; Regs used in _initKeyPad: [wreg+status,2+status,0]
  3595                           
  3596                           
  3597                           ;main.c: 392:     TRISD |= 0x0f;
  3598     0FAB  300F               	movlw	15
  3599     0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3600     0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  3601     0FAE  00A0               	movwf	??_initKeyPad
  3602     0FAF  0820               	movf	??_initKeyPad,w
  3603     0FB0  1683               	bsf	3,5	;RP0=1, select bank1
  3604     0FB1  1303               	bcf	3,6	;RP1=0, select bank1
  3605     0FB2  0488               	iorwf	8,f	;volatile
  3606                           
  3607                           ;main.c: 393:     TRISB &= ~0x07;
  3608     0FB3  30F8               	movlw	248
  3609     0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  3610     0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  3611     0FB6  00A0               	movwf	??_initKeyPad
  3612     0FB7  0820               	movf	??_initKeyPad,w
  3613     0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3614     0FB9  1303               	bcf	3,6	;RP1=0, select bank1
  3615     0FBA  0586               	andwf	6,f	;volatile
  3616     0FBB                     l153:
  3617     0FBB  0008               	return
  3618     0FBC                     __end_of_initKeyPad:
  3619                           
  3620                           	psect	text18
  3621     06A3                     __ptext18:	
  3622 ;; *************** function _UART_init *****************
  3623 ;; Defined at:
  3624 ;;		line 420 in file "main.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  baudrate        4   15[BANK0 ] long 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3638 ;;      Params:         0       4       0       0       0
  3639 ;;      Locals:         0       0       0       0       0
  3640 ;;      Temps:          0       4       0       0       0
  3641 ;;      Totals:         0       8       0       0       0
  3642 ;;Total ram usage:        8 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 2
  3645 ;; This function calls:
  3646 ;;		___aldiv
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652     06A3                     _UART_init:	
  3653                           ;psect for function _UART_init
  3654                           
  3655     06A3                     l2201:	
  3656                           ;incstack = 0
  3657                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  3658                           
  3659                           
  3660                           ;main.c: 421:     TRISC &= ~0x40;
  3661     06A3  30BF               	movlw	191
  3662     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3663     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3664     06A6  00B3               	movwf	??_UART_init
  3665     06A7  0833               	movf	??_UART_init,w
  3666     06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3667     06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3668     06AA  0587               	andwf	7,f	;volatile
  3669     06AB                     l2203:
  3670                           
  3671                           ;main.c: 422:     TRISC |= 0x80;
  3672     06AB  1787               	bsf	7,7	;volatile
  3673                           
  3674                           ;main.c: 423:     TXSTA |= 0x24;
  3675     06AC  3024               	movlw	36
  3676     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3677     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3678     06AF  00B3               	movwf	??_UART_init
  3679     06B0  0833               	movf	??_UART_init,w
  3680     06B1  1683               	bsf	3,5	;RP0=1, select bank1
  3681     06B2  1303               	bcf	3,6	;RP1=0, select bank1
  3682     06B3  0498               	iorwf	24,f	;volatile
  3683     06B4                     l2205:
  3684                           
  3685                           ;main.c: 426:     RCSTA |= 0x80;
  3686     06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3687     06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3688     06B6  1798               	bsf	24,7	;volatile
  3689     06B7                     l2207:
  3690                           
  3691                           ;main.c: 427:     RCSTA |= 0x10;
  3692     06B7  1618               	bsf	24,4	;volatile
  3693     06B8                     l2209:
  3694                           
  3695                           ;main.c: 429:     SPBRG = (char) (20000000 / (long) (64UL * baudrate)) - 1;
  3696     06B8  082F               	movf	UART_init@baudrate,w
  3697     06B9  00B3               	movwf	??_UART_init
  3698     06BA  0830               	movf	UART_init@baudrate+1,w
  3699     06BB  00B4               	movwf	??_UART_init+1
  3700     06BC  0831               	movf	UART_init@baudrate+2,w
  3701     06BD  00B5               	movwf	??_UART_init+2
  3702     06BE  0832               	movf	UART_init@baudrate+3,w
  3703     06BF  00B6               	movwf	??_UART_init+3
  3704     06C0  3006               	movlw	6
  3705     06C1                     u1645:
  3706     06C1  1003               	clrc
  3707     06C2  0DB3               	rlf	??_UART_init,f
  3708     06C3  0DB4               	rlf	??_UART_init+1,f
  3709     06C4  0DB5               	rlf	??_UART_init+2,f
  3710     06C5  0DB6               	rlf	??_UART_init+3,f
  3711     06C6                     u1640:
  3712     06C6  3EFF               	addlw	-1
  3713     06C7  1D03               	skipz
  3714     06C8  2EC1               	goto	u1645
  3715     06C9  0836               	movf	??_UART_init+3,w
  3716     06CA  00A3               	movwf	___aldiv@divisor+3
  3717     06CB  0835               	movf	??_UART_init+2,w
  3718     06CC  00A2               	movwf	___aldiv@divisor+2
  3719     06CD  0834               	movf	??_UART_init+1,w
  3720     06CE  00A1               	movwf	___aldiv@divisor+1
  3721     06CF  0833               	movf	??_UART_init,w
  3722     06D0  00A0               	movwf	___aldiv@divisor
  3723     06D1  3001               	movlw	1
  3724     06D2  00A7               	movwf	___aldiv@dividend+3
  3725     06D3  3031               	movlw	49
  3726     06D4  00A6               	movwf	___aldiv@dividend+2
  3727     06D5  302D               	movlw	45
  3728     06D6  00A5               	movwf	___aldiv@dividend+1
  3729     06D7  3000               	movlw	0
  3730     06D8  00A4               	movwf	___aldiv@dividend
  3731     06D9  120A  118A  22CD  120A  118A  	fcall	___aldiv
  3732     06DE  1283               	bcf	3,5	;RP0=0, select bank0
  3733     06DF  1303               	bcf	3,6	;RP1=0, select bank0
  3734     06E0  0820               	movf	?___aldiv,w
  3735     06E1  3EFF               	addlw	255
  3736     06E2  1683               	bsf	3,5	;RP0=1, select bank1
  3737     06E3  1303               	bcf	3,6	;RP1=0, select bank1
  3738     06E4  0099               	movwf	25	;volatile
  3739     06E5                     l2211:
  3740                           
  3741                           ;main.c: 431:     INTCON |= 0x80;
  3742     06E5  178B               	bsf	11,7	;volatile
  3743     06E6                     l2213:
  3744                           
  3745                           ;main.c: 432:     INTCON |= 0x40;
  3746     06E6  170B               	bsf	11,6	;volatile
  3747     06E7                     l2215:
  3748                           
  3749                           ;main.c: 433:     PIE1 |= 0x20;
  3750     06E7  168C               	bsf	12,5	;volatile
  3751     06E8                     l165:
  3752     06E8  0008               	return
  3753     06E9                     __end_of_UART_init:
  3754                           
  3755                           	psect	text19
  3756     02CD                     __ptext19:	
  3757 ;; *************** function ___aldiv *****************
  3758 ;; Defined at:
  3759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  divisor         4    0[BANK0 ] long 
  3762 ;;  dividend        4    4[BANK0 ] long 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  quotient        4   11[BANK0 ] long 
  3765 ;;  sign            1   10[BANK0 ] unsigned char 
  3766 ;;  counter         1    9[BANK0 ] unsigned char 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  4    0[BANK0 ] long 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3776 ;;      Params:         0       8       0       0       0
  3777 ;;      Locals:         0       6       0       0       0
  3778 ;;      Temps:          0       1       0       0       0
  3779 ;;      Totals:         0      15       0       0       0
  3780 ;;Total ram usage:       15 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; Hardware stack levels required when called: 1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_UART_init
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790     02CD                     ___aldiv:	
  3791                           ;psect for function ___aldiv
  3792                           
  3793     02CD                     l2131:	
  3794                           ;incstack = 0
  3795                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3796                           
  3797     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  3798     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  3799     02CF  01AA               	clrf	___aldiv@sign
  3800     02D0                     l2133:
  3801     02D0  1FA3               	btfss	___aldiv@divisor+3,7
  3802     02D1  2AD3               	goto	u1511
  3803     02D2  2AD4               	goto	u1510
  3804     02D3                     u1511:
  3805     02D3  2AE1               	goto	l374
  3806     02D4                     u1510:
  3807     02D4                     l2135:
  3808     02D4  09A0               	comf	___aldiv@divisor,f
  3809     02D5  09A1               	comf	___aldiv@divisor+1,f
  3810     02D6  09A2               	comf	___aldiv@divisor+2,f
  3811     02D7  09A3               	comf	___aldiv@divisor+3,f
  3812     02D8  0AA0               	incf	___aldiv@divisor,f
  3813     02D9  1903               	skipnz
  3814     02DA  0AA1               	incf	___aldiv@divisor+1,f
  3815     02DB  1903               	skipnz
  3816     02DC  0AA2               	incf	___aldiv@divisor+2,f
  3817     02DD  1903               	skipnz
  3818     02DE  0AA3               	incf	___aldiv@divisor+3,f
  3819     02DF  01AA               	clrf	___aldiv@sign
  3820     02E0  0AAA               	incf	___aldiv@sign,f
  3821     02E1                     l374:
  3822     02E1  1FA7               	btfss	___aldiv@dividend+3,7
  3823     02E2  2AE4               	goto	u1521
  3824     02E3  2AE5               	goto	u1520
  3825     02E4                     u1521:
  3826     02E4  2AF4               	goto	l2141
  3827     02E5                     u1520:
  3828     02E5                     l2137:
  3829     02E5  09A4               	comf	___aldiv@dividend,f
  3830     02E6  09A5               	comf	___aldiv@dividend+1,f
  3831     02E7  09A6               	comf	___aldiv@dividend+2,f
  3832     02E8  09A7               	comf	___aldiv@dividend+3,f
  3833     02E9  0AA4               	incf	___aldiv@dividend,f
  3834     02EA  1903               	skipnz
  3835     02EB  0AA5               	incf	___aldiv@dividend+1,f
  3836     02EC  1903               	skipnz
  3837     02ED  0AA6               	incf	___aldiv@dividend+2,f
  3838     02EE  1903               	skipnz
  3839     02EF  0AA7               	incf	___aldiv@dividend+3,f
  3840     02F0                     l2139:
  3841     02F0  3001               	movlw	1
  3842     02F1  00A8               	movwf	??___aldiv
  3843     02F2  0828               	movf	??___aldiv,w
  3844     02F3  06AA               	xorwf	___aldiv@sign,f
  3845     02F4                     l2141:
  3846     02F4  3000               	movlw	0
  3847     02F5  00AE               	movwf	___aldiv@quotient+3
  3848     02F6  3000               	movlw	0
  3849     02F7  00AD               	movwf	___aldiv@quotient+2
  3850     02F8  3000               	movlw	0
  3851     02F9  00AC               	movwf	___aldiv@quotient+1
  3852     02FA  3000               	movlw	0
  3853     02FB  00AB               	movwf	___aldiv@quotient
  3854     02FC                     l2143:
  3855     02FC  0823               	movf	___aldiv@divisor+3,w
  3856     02FD  0422               	iorwf	___aldiv@divisor+2,w
  3857     02FE  0421               	iorwf	___aldiv@divisor+1,w
  3858     02FF  0420               	iorwf	___aldiv@divisor,w
  3859     0300  1903               	skipnz
  3860     0301  2B03               	goto	u1531
  3861     0302  2B04               	goto	u1530
  3862     0303                     u1531:
  3863     0303  2B51               	goto	l2163
  3864     0304                     u1530:
  3865     0304                     l2145:
  3866     0304  01A9               	clrf	___aldiv@counter
  3867     0305  0AA9               	incf	___aldiv@counter,f
  3868     0306  2B14               	goto	l2149
  3869     0307                     l2147:
  3870     0307  3001               	movlw	1
  3871     0308  00A8               	movwf	??___aldiv
  3872     0309                     u1545:
  3873     0309  1003               	clrc
  3874     030A  0DA0               	rlf	___aldiv@divisor,f
  3875     030B  0DA1               	rlf	___aldiv@divisor+1,f
  3876     030C  0DA2               	rlf	___aldiv@divisor+2,f
  3877     030D  0DA3               	rlf	___aldiv@divisor+3,f
  3878     030E  0BA8               	decfsz	??___aldiv,f
  3879     030F  2B09               	goto	u1545
  3880     0310  3001               	movlw	1
  3881     0311  00A8               	movwf	??___aldiv
  3882     0312  0828               	movf	??___aldiv,w
  3883     0313  07A9               	addwf	___aldiv@counter,f
  3884     0314                     l2149:
  3885     0314  1FA3               	btfss	___aldiv@divisor+3,7
  3886     0315  2B17               	goto	u1551
  3887     0316  2B18               	goto	u1550
  3888     0317                     u1551:
  3889     0317  2B07               	goto	l2147
  3890     0318                     u1550:
  3891     0318                     l2151:
  3892     0318  3001               	movlw	1
  3893     0319  00A8               	movwf	??___aldiv
  3894     031A                     u1565:
  3895     031A  1003               	clrc
  3896     031B  0DAB               	rlf	___aldiv@quotient,f
  3897     031C  0DAC               	rlf	___aldiv@quotient+1,f
  3898     031D  0DAD               	rlf	___aldiv@quotient+2,f
  3899     031E  0DAE               	rlf	___aldiv@quotient+3,f
  3900     031F  0BA8               	decfsz	??___aldiv,f
  3901     0320  2B1A               	goto	u1565
  3902     0321                     l2153:
  3903     0321  0823               	movf	___aldiv@divisor+3,w
  3904     0322  0227               	subwf	___aldiv@dividend+3,w
  3905     0323  1D03               	skipz
  3906     0324  2B2F               	goto	u1575
  3907     0325  0822               	movf	___aldiv@divisor+2,w
  3908     0326  0226               	subwf	___aldiv@dividend+2,w
  3909     0327  1D03               	skipz
  3910     0328  2B2F               	goto	u1575
  3911     0329  0821               	movf	___aldiv@divisor+1,w
  3912     032A  0225               	subwf	___aldiv@dividend+1,w
  3913     032B  1D03               	skipz
  3914     032C  2B2F               	goto	u1575
  3915     032D  0820               	movf	___aldiv@divisor,w
  3916     032E  0224               	subwf	___aldiv@dividend,w
  3917     032F                     u1575:
  3918     032F  1C03               	skipc
  3919     0330  2B32               	goto	u1571
  3920     0331  2B33               	goto	u1570
  3921     0332                     u1571:
  3922     0332  2B42               	goto	l2159
  3923     0333                     u1570:
  3924     0333                     l2155:
  3925     0333  0820               	movf	___aldiv@divisor,w
  3926     0334  02A4               	subwf	___aldiv@dividend,f
  3927     0335  0821               	movf	___aldiv@divisor+1,w
  3928     0336  1C03               	skipc
  3929     0337  0F21               	incfsz	___aldiv@divisor+1,w
  3930     0338  02A5               	subwf	___aldiv@dividend+1,f
  3931     0339  0822               	movf	___aldiv@divisor+2,w
  3932     033A  1C03               	skipc
  3933     033B  0F22               	incfsz	___aldiv@divisor+2,w
  3934     033C  02A6               	subwf	___aldiv@dividend+2,f
  3935     033D  0823               	movf	___aldiv@divisor+3,w
  3936     033E  1C03               	skipc
  3937     033F  0F23               	incfsz	___aldiv@divisor+3,w
  3938     0340  02A7               	subwf	___aldiv@dividend+3,f
  3939     0341                     l2157:
  3940     0341  142B               	bsf	___aldiv@quotient,0
  3941     0342                     l2159:
  3942     0342  3001               	movlw	1
  3943     0343                     u1585:
  3944     0343  1003               	clrc
  3945     0344  0CA3               	rrf	___aldiv@divisor+3,f
  3946     0345  0CA2               	rrf	___aldiv@divisor+2,f
  3947     0346  0CA1               	rrf	___aldiv@divisor+1,f
  3948     0347  0CA0               	rrf	___aldiv@divisor,f
  3949     0348  3EFF               	addlw	-1
  3950     0349  1D03               	skipz
  3951     034A  2B43               	goto	u1585
  3952     034B                     l2161:
  3953     034B  3001               	movlw	1
  3954     034C  02A9               	subwf	___aldiv@counter,f
  3955     034D  1D03               	btfss	3,2
  3956     034E  2B50               	goto	u1591
  3957     034F  2B51               	goto	u1590
  3958     0350                     u1591:
  3959     0350  2B18               	goto	l2151
  3960     0351                     u1590:
  3961     0351                     l2163:
  3962     0351  082A               	movf	___aldiv@sign,w
  3963     0352  1903               	btfsc	3,2
  3964     0353  2B55               	goto	u1601
  3965     0354  2B56               	goto	u1600
  3966     0355                     u1601:
  3967     0355  2B61               	goto	l2167
  3968     0356                     u1600:
  3969     0356                     l2165:
  3970     0356  09AB               	comf	___aldiv@quotient,f
  3971     0357  09AC               	comf	___aldiv@quotient+1,f
  3972     0358  09AD               	comf	___aldiv@quotient+2,f
  3973     0359  09AE               	comf	___aldiv@quotient+3,f
  3974     035A  0AAB               	incf	___aldiv@quotient,f
  3975     035B  1903               	skipnz
  3976     035C  0AAC               	incf	___aldiv@quotient+1,f
  3977     035D  1903               	skipnz
  3978     035E  0AAD               	incf	___aldiv@quotient+2,f
  3979     035F  1903               	skipnz
  3980     0360  0AAE               	incf	___aldiv@quotient+3,f
  3981     0361                     l2167:
  3982     0361  082E               	movf	___aldiv@quotient+3,w
  3983     0362  00A3               	movwf	?___aldiv+3
  3984     0363  082D               	movf	___aldiv@quotient+2,w
  3985     0364  00A2               	movwf	?___aldiv+2
  3986     0365  082C               	movf	___aldiv@quotient+1,w
  3987     0366  00A1               	movwf	?___aldiv+1
  3988     0367  082B               	movf	___aldiv@quotient,w
  3989     0368  00A0               	movwf	?___aldiv
  3990     0369                     l384:
  3991     0369  0008               	return
  3992     036A                     __end_of___aldiv:
  3993                           
  3994                           	psect	text20
  3995     0FBC                     __ptext20:	
  3996 ;; *************** function _UART_TxString *****************
  3997 ;; Defined at:
  3998 ;;		line 445 in file "main.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  str             1    wreg     PTR const unsigned char 
  4001 ;;		 -> random_string@str(8), 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  str             1    3[BANK0 ] PTR const unsigned char 
  4004 ;;		 -> random_string@str(8), 
  4005 ;;  i               1    4[BANK0 ] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       0       0       0       0
  4016 ;;      Locals:         0       2       0       0       0
  4017 ;;      Temps:          0       1       0       0       0
  4018 ;;      Totals:         0       3       0       0       0
  4019 ;;Total ram usage:        3 bytes
  4020 ;; Hardware stack levels used: 1
  4021 ;; Hardware stack levels required when called: 2
  4022 ;; This function calls:
  4023 ;;		_UART_TxChar
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029     0FBC                     _UART_TxString:	
  4030                           ;psect for function _UART_TxString
  4031                           
  4032                           
  4033                           ;incstack = 0
  4034                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4035                           ;UART_TxString@str stored from wreg
  4036     0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  4037     0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  4038     0FBE  00A3               	movwf	UART_TxString@str
  4039     0FBF                     l2389:
  4040                           
  4041                           ;main.c: 446:     unsigned char i = 0;
  4042     0FBF  01A4               	clrf	UART_TxString@i
  4043                           
  4044                           ;main.c: 448:     while (str[i] != 0) {
  4045     0FC0  2FD2               	goto	l2395
  4046     0FC1                     l2391:
  4047                           
  4048                           ;main.c: 449:         UART_TxChar(str[i]);
  4049     0FC1  0824               	movf	UART_TxString@i,w
  4050     0FC2  0723               	addwf	UART_TxString@str,w
  4051     0FC3  00A2               	movwf	??_UART_TxString
  4052     0FC4  0822               	movf	??_UART_TxString,w
  4053     0FC5  0084               	movwf	4
  4054     0FC6  0800               	movf	0,w
  4055     0FC7  120A  118A  27F0  120A  158A  	fcall	_UART_TxChar
  4056     0FCC                     l2393:
  4057                           
  4058                           ;main.c: 450:         i++;
  4059     0FCC  3001               	movlw	1
  4060     0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  4061     0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  4062     0FCF  00A2               	movwf	??_UART_TxString
  4063     0FD0  0822               	movf	??_UART_TxString,w
  4064     0FD1  07A4               	addwf	UART_TxString@i,f
  4065     0FD2                     l2395:
  4066                           
  4067                           ;main.c: 448:     while (str[i] != 0) {
  4068     0FD2  0824               	movf	UART_TxString@i,w
  4069     0FD3  0723               	addwf	UART_TxString@str,w
  4070     0FD4  00A2               	movwf	??_UART_TxString
  4071     0FD5  0822               	movf	??_UART_TxString,w
  4072     0FD6  0084               	movwf	4
  4073     0FD7  1383               	bcf	3,7	;select IRP bank0
  4074     0FD8  0800               	movf	0,w
  4075     0FD9  1D03               	btfss	3,2
  4076     0FDA  2FDC               	goto	u1741
  4077     0FDB  2FDD               	goto	u1740
  4078     0FDC                     u1741:
  4079     0FDC  2FC1               	goto	l2391
  4080     0FDD                     u1740:
  4081     0FDD                     l177:
  4082     0FDD  0008               	return
  4083     0FDE                     __end_of_UART_TxString:
  4084                           
  4085                           	psect	text21
  4086     07F0                     __ptext21:	
  4087 ;; *************** function _UART_TxChar *****************
  4088 ;; Defined at:
  4089 ;;		line 436 in file "main.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  ch              1    wreg     unsigned char 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  ch              1    1[BANK0 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4103 ;;      Params:         0       0       0       0       0
  4104 ;;      Locals:         0       1       0       0       0
  4105 ;;      Temps:          0       1       0       0       0
  4106 ;;      Totals:         0       2       0       0       0
  4107 ;;Total ram usage:        2 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 1
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_UART_TxString
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117     07F0                     _UART_TxChar:	
  4118                           ;psect for function _UART_TxChar
  4119                           
  4120                           
  4121                           ;incstack = 0
  4122                           ; Regs used in _UART_TxChar: [wreg+status,2+status,0]
  4123                           ;UART_TxChar@ch stored from wreg
  4124     07F0  1283               	bcf	3,5	;RP0=0, select bank0
  4125     07F1  1303               	bcf	3,6	;RP1=0, select bank0
  4126     07F2  00A1               	movwf	UART_TxChar@ch
  4127     07F3                     l2125:
  4128     07F3                     l168:	
  4129                           ;main.c: 437:     while (!(PIR1 & 0x10));
  4130                           
  4131     07F3  1E0C               	btfss	12,4	;volatile
  4132     07F4  2FF6               	goto	u1501
  4133     07F5  2FF7               	goto	u1500
  4134     07F6                     u1501:
  4135     07F6  2FF3               	goto	l168
  4136     07F7                     u1500:
  4137     07F7                     l2127:
  4138                           
  4139                           ;main.c: 439:     PIR1 &= ~0x10;
  4140     07F7  30EF               	movlw	239
  4141     07F8  00A0               	movwf	??_UART_TxChar
  4142     07F9  0820               	movf	??_UART_TxChar,w
  4143     07FA  058C               	andwf	12,f	;volatile
  4144     07FB                     l2129:
  4145                           
  4146                           ;main.c: 441:     TXREG = ch;
  4147     07FB  0821               	movf	UART_TxChar@ch,w
  4148     07FC  0099               	movwf	25	;volatile
  4149     07FD                     l171:
  4150     07FD  0008               	return
  4151     07FE                     __end_of_UART_TxChar:
  4152                           
  4153                           	psect	text22
  4154     03EB                     __ptext22:	
  4155 ;; *************** function _ISR *****************
  4156 ;; Defined at:
  4157 ;;		line 624 in file "main.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4171 ;;      Params:         0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0
  4173 ;;      Temps:          5       0       0       0       0
  4174 ;;      Totals:         5       0       0       0       0
  4175 ;;Total ram usage:        5 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		Interrupt level 1
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184     03EB                     _ISR:	
  4185                           ;psect for function _ISR
  4186                           
  4187     03EB                     i1l1967:
  4188                           
  4189                           ;main.c: 625:     if (RCIF)
  4190     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  4191     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  4192     03ED  1E8C               	btfss	12,5	;volatile
  4193     03EE  2BF0               	goto	u126_21
  4194     03EF  2BF1               	goto	u126_20
  4195     03F0                     u126_21:
  4196     03F0  2C04               	goto	i1l1979
  4197     03F1                     u126_20:
  4198     03F1                     i1l1969:
  4199                           
  4200                           ;main.c: 626:     {;main.c: 627:         dato[i++] = RCREG;
  4201     03F1  084D               	movf	_i,w
  4202     03F2  3EA0               	addlw	(low (_dato| 0))& (0+255)
  4203     03F3  0084               	movwf	4
  4204     03F4  081A               	movf	26,w	;volatile
  4205     03F5  1383               	bcf	3,7	;select IRP bank1
  4206     03F6  0080               	movwf	0
  4207     03F7                     i1l1971:
  4208     03F7  3001               	movlw	1
  4209     03F8  07CD               	addwf	_i,f
  4210     03F9  1803               	skipnc
  4211     03FA  0ACE               	incf	_i+1,f
  4212     03FB  3000               	movlw	0
  4213     03FC  07CE               	addwf	_i+1,f
  4214     03FD                     i1l1973:
  4215                           
  4216                           ;main.c: 628:         dato[i] = '\0';
  4217     03FD  084D               	movf	_i,w
  4218     03FE  3EA0               	addlw	(low (_dato| 0))& (0+255)
  4219     03FF  0084               	movwf	4
  4220     0400  0180               	clrf	0
  4221     0401                     i1l1975:
  4222                           
  4223                           ;main.c: 629:         received = 1;
  4224     0401  01D3               	clrf	_received
  4225     0402  0AD3               	incf	_received,f
  4226     0403                     i1l1977:
  4227                           
  4228                           ;main.c: 630:         RCIF = 0;
  4229     0403  128C               	bcf	12,5	;volatile
  4230     0404                     i1l1979:
  4231                           
  4232                           ;main.c: 633:     if (INTCON & 0x04)
  4233     0404  1D0B               	btfss	11,2	;volatile
  4234     0405  2C07               	goto	u127_21
  4235     0406  2C08               	goto	u127_20
  4236     0407                     u127_21:
  4237     0407  2C4F               	goto	i1l223
  4238     0408                     u127_20:
  4239     0408                     i1l1981:
  4240                           
  4241                           ;main.c: 634:     {;main.c: 635:         INTCON &= ~0x04;
  4242     0408  30FB               	movlw	251
  4243     0409  00F5               	movwf	??_ISR
  4244     040A  0875               	movf	??_ISR,w
  4245     040B  058B               	andwf	11,f	;volatile
  4246     040C                     i1l1983:
  4247                           
  4248                           ;main.c: 636:         TMR0 = 6;
  4249     040C  3006               	movlw	6
  4250     040D  0081               	movwf	1	;volatile
  4251     040E                     i1l1985:
  4252                           
  4253                           ;main.c: 638:         if (code_generate_send) {
  4254     040E  0852               	movf	_code_generate_send,w
  4255     040F  1903               	btfsc	3,2
  4256     0410  2C12               	goto	u128_21
  4257     0411  2C13               	goto	u128_20
  4258     0412                     u128_21:
  4259     0412  2C4F               	goto	i1l223
  4260     0413                     u128_20:
  4261     0413                     i1l1987:
  4262                           
  4263                           ;main.c: 640:             countOn++;
  4264     0413  3001               	movlw	1
  4265     0414  07CB               	addwf	_countOn,f
  4266     0415  1803               	skipnc
  4267     0416  0ACC               	incf	_countOn+1,f
  4268     0417  3000               	movlw	0
  4269     0418  07CC               	addwf	_countOn+1,f
  4270                           
  4271                           ;main.c: 641:             countSec++;
  4272     0419  3001               	movlw	1
  4273     041A  07C9               	addwf	_countSec,f
  4274     041B  1803               	skipnc
  4275     041C  0ACA               	incf	_countSec+1,f
  4276     041D  3000               	movlw	0
  4277     041E  07CA               	addwf	_countSec+1,f
  4278     041F                     i1l1989:
  4279                           
  4280                           ;main.c: 644:             if (countSec > 250)
  4281     041F  084A               	movf	_countSec+1,w
  4282     0420  3A80               	xorlw	128
  4283     0421  00FF               	movwf	btemp+1
  4284     0422  3080               	movlw	128
  4285     0423  027F               	subwf	btemp+1,w
  4286     0424  1D03               	skipz
  4287     0425  2C28               	goto	u129_25
  4288     0426  30FB               	movlw	251
  4289     0427  0249               	subwf	_countSec,w
  4290     0428                     u129_25:
  4291     0428  1C03               	skipc
  4292     0429  2C2B               	goto	u129_21
  4293     042A  2C2C               	goto	u129_20
  4294     042B                     u129_21:
  4295     042B  2C36               	goto	i1l1995
  4296     042C                     u129_20:
  4297     042C                     i1l1991:
  4298                           
  4299                           ;main.c: 645:             {;main.c: 646:                 numSec--;
  4300     042C  30FF               	movlw	255
  4301     042D  1283               	bcf	3,5	;RP0=0, select bank0
  4302     042E  1303               	bcf	3,6	;RP1=0, select bank0
  4303     042F  07ED               	addwf	_numSec,f
  4304     0430  1803               	skipnc
  4305     0431  0AEE               	incf	_numSec+1,f
  4306     0432  30FF               	movlw	255
  4307     0433  07EE               	addwf	_numSec+1,f
  4308     0434                     i1l1993:
  4309                           
  4310                           ;main.c: 647:                 countSec = 0;
  4311     0434  01C9               	clrf	_countSec
  4312     0435  01CA               	clrf	_countSec+1
  4313     0436                     i1l1995:
  4314                           
  4315                           ;main.c: 651:             if (countOn >= 15000) {
  4316     0436  1283               	bcf	3,5	;RP0=0, select bank0
  4317     0437  1303               	bcf	3,6	;RP1=0, select bank0
  4318     0438  084C               	movf	_countOn+1,w
  4319     0439  3A80               	xorlw	128
  4320     043A  00FF               	movwf	btemp+1
  4321     043B  30BA               	movlw	186
  4322     043C  027F               	subwf	btemp+1,w
  4323     043D  1D03               	skipz
  4324     043E  2C41               	goto	u130_25
  4325     043F  3098               	movlw	152
  4326     0440  024B               	subwf	_countOn,w
  4327     0441                     u130_25:
  4328     0441  1C03               	skipc
  4329     0442  2C44               	goto	u130_21
  4330     0443  2C45               	goto	u130_20
  4331     0444                     u130_21:
  4332     0444  2C4F               	goto	i1l223
  4333     0445                     u130_20:
  4334     0445                     i1l1997:
  4335                           
  4336                           ;main.c: 652:                 stop_wait = 1;
  4337     0445  1283               	bcf	3,5	;RP0=0, select bank0
  4338     0446  1303               	bcf	3,6	;RP1=0, select bank0
  4339     0447  01D1               	clrf	_stop_wait
  4340     0448  0AD1               	incf	_stop_wait,f
  4341     0449                     i1l1999:
  4342                           
  4343                           ;main.c: 653:                 countOn = 0;
  4344     0449  01CB               	clrf	_countOn
  4345     044A  01CC               	clrf	_countOn+1
  4346     044B                     i1l2001:
  4347                           
  4348                           ;main.c: 654:                 numSec = 60;
  4349     044B  303C               	movlw	60
  4350     044C  00ED               	movwf	_numSec
  4351     044D  3000               	movlw	0
  4352     044E  00EE               	movwf	_numSec+1
  4353     044F                     i1l223:
  4354     044F  0879               	movf	??_ISR+4,w
  4355     0450  00FF               	movwf	btemp+1
  4356     0451  0878               	movf	??_ISR+3,w
  4357     0452  008A               	movwf	10
  4358     0453  0877               	movf	??_ISR+2,w
  4359     0454  0084               	movwf	4
  4360     0455  0E76               	swapf	??_ISR+1,w
  4361     0456  0083               	movwf	3
  4362     0457  0EFE               	swapf	btemp,f
  4363     0458  0E7E               	swapf	btemp,w
  4364     0459  0009               	retfie
  4365     045A                     __end_of_ISR:
  4366     007E                     btemp	set	126	;btemp
  4367     007E                     wtemp0	set	126
  4368                           
  4369                           	psect	intentry
  4370     0004                     __pintentry:	
  4371                           ;incstack = 0
  4372                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1]
  4373                           
  4374     0004                     interrupt_function:
  4375     007E                     saved_w	set	btemp
  4376     0004  00FE               	movwf	btemp
  4377     0005  0E03               	swapf	3,w
  4378     0006  00F6               	movwf	??_ISR+1
  4379     0007  0804               	movf	4,w
  4380     0008  00F7               	movwf	??_ISR+2
  4381     0009  080A               	movf	10,w
  4382     000A  00F8               	movwf	??_ISR+3
  4383     000B  087F               	movf	btemp+1,w
  4384     000C  00F9               	movwf	??_ISR+4
  4385     000D  120A  118A  2BEB   	ljmp	_ISR
  4386                           
  4387                           	psect	idloc
  4388                           
  4389                           ;Config register IDLOC0 @ 0x2000
  4390                           ;	unspecified, using default values
  4391     2000                     	org	8192
  4392     2000  3FFF               	dw	16383
  4393                           
  4394                           ;Config register IDLOC1 @ 0x2001
  4395                           ;	unspecified, using default values
  4396     2001                     	org	8193
  4397     2001  3FFF               	dw	16383
  4398                           
  4399                           ;Config register IDLOC2 @ 0x2002
  4400                           ;	unspecified, using default values
  4401     2002                     	org	8194
  4402     2002  3FFF               	dw	16383
  4403                           
  4404                           ;Config register IDLOC3 @ 0x2003
  4405                           ;	unspecified, using default values
  4406     2003                     	org	8195
  4407     2003  3FFF               	dw	16383
  4408                           
  4409                           	psect	config
  4410                           
  4411                           ;Config register CONFIG @ 0x2007
  4412                           ;	Oscillator Selection bits
  4413                           ;	FOSC = HS, HS oscillator
  4414                           ;	Watchdog Timer Enable bit
  4415                           ;	WDTE = OFF, WDT disabled
  4416                           ;	Power-up Timer Enable bit
  4417                           ;	PWRTE = ON, PWRT enabled
  4418                           ;	Brown-out Reset Enable bit
  4419                           ;	BOREN = ON, BOR enabled
  4420                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4421                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4422                           ;	Data EEPROM Memory Code Protection bit
  4423                           ;	CPD = OFF, Data EEPROM code protection off
  4424                           ;	Flash Program Memory Write Enable bits
  4425                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4426                           ;	In-Circuit Debugger Mode bit
  4427                           ;	DEBUG = 0x1, unprogrammed default
  4428                           ;	Flash Program Memory Code Protection bit
  4429                           ;	CP = OFF, Code protection off
  4430     2007                     	org	8199
  4431     2007  3F72               	dw	16242

Data Sizes:
    Strings     31
    Constant    82
    Data        6
    BSS         137
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     41      79
    BANK1            80      5      55
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    boh	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 50
		 -> dataParsed(BANK3[50]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> code_keyboard(BANK0[10]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    parseData@dataParsed	PTR unsigned char  size(1) Largest target is 50
		 -> dataParsed(BANK3[50]), 

    parseData@data	PTR unsigned char  size(1) Largest target is 50
		 -> dato(BANK1[50]), 

    UART_TxString@str	PTR const unsigned char  size(1) Largest target is 8
		 -> random_string@str(BANK0[8]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 12
		 -> random_string@str(BANK0[8]), STR_6(CODE[11]), buff(BANK0[2]), STR_5(CODE[11]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[12]), STR_1(CODE[11]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    sp__random_string	PTR unsigned char  size(1) Largest target is 8
		 -> random_string@str(BANK0[8]), 

    main@code	PTR unsigned char  size(1) Largest target is 8
		 -> random_string@str(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_itoa
    _random_string->___lwmod
    _rand->___lmul
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd
    _itoa->_utoa
    _utoa->___lwmod
    ___lwmod->_rand
    _UART_init->___aldiv
    _UART_TxString->_UART_TxChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    7289
                                              0 BANK1      5     5      0
                      _UART_TxString
                          _UART_init
                         _initKeyPad
                               _itoa
                         _keyPressed
                           _lcd_init
                           _lcd_send
                            _lcd_str
                          _parseData
                      _random_string
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     4      2     259
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _random_string                                        6     6      0    1162
                                             26 BANK0      6     6      0
                            ___lwmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     316
                                             13 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _parseData                                            9     8      1     513
                                              0 BANK0      9     8      1
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     881
                                              3 BANK0      4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send                                             4     3      1     872
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      31
                                              3 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _keyPressed                                           4     4      0      73
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2298
                                             35 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1849
                                             26 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                             20 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initKeyPad                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            8     4      4     746
                                             15 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        3     3      0     197
                                              2 BANK0      3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TxString
     _UART_TxChar
   _UART_init
     ___aldiv
   _initKeyPad
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
         _rand (ARG)
           ___lmul
   _keyPressed
   _lcd_init
     _lcd_cmd
   _lcd_send
   _lcd_str
     _lcd_dat
   _parseData
   _random_string
     ___lwmod
     _rand
     _srand
   _strcmp

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      5      37       7       68.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C2      12        0.0%
ABS                  0      0      C2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jun 15 17:11:23 2023

                           _i 004D                             _l 004F                             pc 0002  
                          fsr 0004                           l213 02CC                           l141 0523  
                         l150 077E                           l118 01EB                           l135 07EF  
                         l153 0FBB                           l138 0FFF                           l162 057C  
                         l171 07FD                           l147 0751                           l323 0615  
                         l180 05B6                           l165 06E8                           l191 023B  
                         l168 07F3                           l184 05CD                           l177 0FDD  
                         l374 02E1                           l384 0369                           l581 06A2  
                         l591 0724                           l771 04C7                           l763 07CD  
                         l776 0FAA                           l769 04B2                           l779 065C  
                         l787 07A9                           _ISR 03EB                           _boh 0072  
       __end_of_random_string 057D                           fsr0 0004                           indf 0000  
                        ?_ISR 0075                          l2101 07DF                          l2111 0FEF  
                        l2103 07EC                          l2201 06A3                          l2113 0FFC  
                        l2105 0FE1                          l2041 05FC                          l2033 05CE  
                        l2121 0645                          l2131 02CD                          l2211 06E5  
                        l2203 06AB                          l2051 0667                          l2107 0FE2  
                        l2043 060D                          l2035 05D8                          l2115 0FA2  
                        l2125 07F3                          l2141 02F4                          l2133 02D0  
                        l2213 06E6                          l2205 06B4                          l2061 068A  
                        l2053 066A                          l2301 021F                          l2109 0FE4  
                        l2221 04CF                          l2037 05DC                          l2117 0616  
                        l2127 07F7                          l2151 0318                          l2143 02FC  
                        l2135 02D4                          l2215 06E7                          l2207 06B7  
                        l2063 0690                          l2055 0671                          l2047 065D  
                        l2303 022E                          l2231 04EE                          l2223 04D0  
                        l2039 05F3                          l2119 0637                          l2129 07FB  
                        l2161 034B                          l2153 0321                          l2145 0304  
                        l2137 02E5                          l2209 06B8                          l2065 0691  
                        l2057 0675                          l2049 0661                          l2081 06FF  
                        l2073 06E9                          l2321 0257                          l2313 024B  
                        l2305 0239                          l2241 0511                          l2233 04F4  
                        l2225 04DA                          l2217 04C8                          l2401 0590  
                        l2155 0333                          l2147 0307                          l2163 0351  
                        l2139 02F0                          l2067 0698                          l2059 0679  
                        l2083 0703                          l2075 06F1                          l2091 0720  
                        l2171 045D                          l2331 0266                          l2323 025A  
                        l2315 024E                          l2307 023F                          l2243 0517  
                        l2235 04FF                          l2227 04DD                          l2219 04CC  
                        l2251 0758                          l2411 05C7                          l2403 059B  
                        l2165 0356                          l2157 0341                          l2149 0314  
                        l2069 069E                          l2085 070D                          l2077 06F4  
                        l2181 0482                          l2173 0461                          l2333 0269  
                        l2325 025D                          l2317 0251                          l2341 0272  
                        l2309 0245                          l2245 051D                          l2237 0505  
                        l2229 04E3                          l2261 0764                          l2253 0759  
                        l2405 05AA                          l2421 078B                          l2501 0119  
                        l2167 0361                          l2159 0342                          l2247 0FAB  
                        l2087 0713                          l2079 06FB                          l2191 04B6  
                        l2183 0484                          l2175 0474                          l2431 07AD  
                        l2351 02B1                          l2335 026C                          l2327 0260  
                        l2319 0254                          l2343 02A0                          l2239 050B  
                        l2263 076E                          l2255 075A                          l2095 07D1  
                        l2271 0729                          l2407 05B0                          l2423 079D  
                        l2415 0782                          l2511 0143                          l2503 0121  
                        l2089 071A                          l2193 04BB                          l2185 0495  
                        l2177 0478                          l2433 07B1                          l2345 02A1  
                        l2337 026F                          l2329 0263                          l2353 02BF  
                        l2281 01F4                          l2265 0771                          l2257 075D  
                        l2249 0755                          l2097 07D2                          l2273 073A  
                        l2409 05C1                          l2425 07A4                          l2417 0783  
                        l2521 0177                          l2513 0155                          l2505 012D  
                        l2195 04BD                          l2187 04A8                          l2179 047E  
                        l2435 07B6                          l2355 02C5                          l2347 02A5  
                        l2291 0206                          l2267 077B                          l2259 075F  
                        l2099 07D4                          l2275 0740                          l2419 0787  
                        l2531 0183                          l2523 017A                          l2515 015E  
                        l2507 0135                          l2451 0065                          l2443 005A  
                        l2197 04C3                          l2189 04AE                          l2437 07BA  
                        l2429 07AD                          l2357 02CB                          l2349 02A8  
                        l2277 01EF                          l2269 0725                          l2381 0574  
                        l2373 0536                          l2365 0524                          l2533 018A  
                        l2525 017B                          l2517 016D                          l2509 013C  
                        l2541 01A6                          l2461 0089                          l2453 0069  
                        l2445 005D                          l2391 0FC1                          l2439 07BF  
                        l2287 01F9                          l2279 01F2                          l2383 057A  
                        l2375 0552                          l2367 0532                          l2551 01D4  
                        l2527 017D                          l2535 0196                          l2543 01AB  
                        l2471 00B6                          l2463 0094                          l2455 0076  
                        l2447 005F                          l2393 0FCC                          l2297 0207  
                        l2289 01FC                          l2385 057B                          l2377 0561  
                        l2553 01DB                          l2545 01B9                          l2537 01A0  
                        l2529 0181                          l2481 00D6                          l2473 00C1  
                        l2465 009B                          l2457 007B                          l2449 0063  
                        l2395 0FD2                          l2299 0214                          l2379 0567  
                        l2555 01E6                          l2547 01C2                          l2539 01A6  
                        l2491 00F3                          l2483 00DB                          l2475 00C9  
                        l2467 00A5                          l2459 0080                          l2389 0FBF  
                        l2397 0580                          l2557 01E9                          l2549 01CD  
                        l2493 00FA                          l2485 00E3                          l2477 00CD  
                        l2469 00AE                          l2399 0585                          l2495 0105  
                        l2487 00E9                          l2479 00CF                          l2497 010E  
                        l2489 00ED                          l2579 027A                          l2499 0111  
                        STR_1 03D8                          STR_2 03CC                          STR_3 03E3  
                        STR_4 03E7                          STR_5 03D8                          STR_6 03D8  
                        u1310 05DC                          u2007 0FF8                          u1311 05DB  
                        u1400 068A                          u1401 0689                          u2017 021A  
                        u1321 05E5                          u1322 05EC                          u2027 02B9  
                        u1323 05F3                          u1500 07F7                          u1420 069E  
                        u1501 07F6                          u1421 069D                          u1405 0686  
                        u1510 02D4                          u1430 06F1                          u1350 060D  
                        u1511 02D3                          u1415 0692                          u1431 06F0  
                        u1351 060C                          u1335 05F5                          u1600 0356  
                        u1520 02E5                          u1360 0667                          u1601 0355  
                        u1521 02E4                          u1361 0666                          u1345 05FD  
                        u1530 0304                          u1450 0703                          u1610 047E  
                        u1531 0303                          u1451 0702                          u1611 047D  
                        u1380 0679                          u1460 070D                          u1620 04AE  
                        u1700 024A                          u1381 0678                          u1461 070C  
                        u1445 06F5                          u1621 04AD                          u1701 0249  
                        u1550 0318                          u1630 04C3                          u1710 02B1  
                        u1551 0317                          u1375 066B                          u1631 04C2  
                        u1711 02B0                          u1640 06C6                          u1480 0720  
                        u1800 07B1                          u1720 02CB                          u1545 0309  
                        u1481 071F                          u1465 0709                          u1801 07B0  
                        u1721 02CA                          u1570 0333                          u1650 0751  
                        u1490 0654                          u1730 0574                          u1810 009B  
                        u1571 0332                          u1395 067A                          u1475 0714  
                        u1651 0750                          u1731 0573                          u1811 009A  
                        u1740 0FDD                          u1660 0214                          u1900 01D4  
                        u1820 00A5                          u1741 0FDC                          u1565 031A  
                        u1645 06C1                          u1661 0213                          u1901 01D3  
                        u1821 00A4                          u1590 0351                          u1670 022E  
                        u1750 0590                          u1830 00D6                          u1591 0350  
                        u1575 032F                          u1671 022D                          u1751 058F  
                        u1495 064F                          u1735 0570                          u1831 00D5  
                        _PIE1 008C                          u1760 059B                          u1840 00DB  
                        u1585 0343                          u1761 059A                          u1841 00DA  
                        u1690 0245                          u1770 05C1                          u1850 00E9  
                        u1691 0244                          u1771 05C0                          u1851 00E8  
                        u1780 079D                          u1860 00F3                          u1685 0231  
                        u1781 079C                          u1917 0166                          u1861 00F2  
                        u1790 07A4                          u1870 0121                          u1927 07DB  
                        u1791 07A3                          u1871 0120                          u1880 0135  
                        u1937 07E8                          u1881 0134                          u1890 0155  
                        u1947 076A                          u1891 0154                          u1957 0777  
                        u1967 04D6                          u1977 04E9                          u1987 04FA  
                        _RCIF 0065                          u1997 0FEB                          _PIR1 000C  
                        _TMR0 0001                          _dato 00A0                          _buff 0067  
                        _main 005A                          _keys 03B9                          _rand 0616  
                        _itoa 07AA                          btemp 007E                          _utoa 045A  
                        start 0010                         ??_ISR 0075                  lcd_send@dato 0023  
                lcd_send@tipo 0020               __end_of___aldiv 036A                         ?_main 0075  
                       ?_rand 002D                         ?_itoa 0043                         ?_utoa 003A  
             __end_of___lwdiv 06A3                         i1l223 044F               __end_of___lwmod 0725  
                       _RCREG 001A                         _RCSTA 0018                         _SPBRG 0099  
                       _PORTB 0006                         _PORTD 0008                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
                       _TXREG 0019                         _TXSTA 0098               __end_of_colMask 03CC  
         ___lmul@multiplicand 0024               __end_of_lcd_dat 07F0               __end_of_lcd_cmd 1000  
             __end_of_lcd_str 0752                         _first 0050                 parseData@data 0028  
                       _keyok 0073                         _randx 0069                         _srand 0FA2  
                       pclath 000A               __end_of_rowMask 03C9                         utoa@c 0041  
                       utoa@v 003F                         status 0003                         wtemp0 007E  
            random_string@str 005F               __initialization 0013                  __end_of_main 01EF  
                __end_of_keys 03C5                  __end_of_rand 065D                  __end_of_itoa 07CE  
                __end_of_utoa 04C8                        ??_main 00D2                        ??_rand 002F  
                      ??_itoa 0047                        ??_utoa 003E                        ?_srand 0020  
                      i1l2001 044B                        u130_20 0445                        u130_21 0444  
                      u130_25 0441                        i1l1971 03F7                        i1l1981 0408  
                      i1l1973 03FD                        i1l1991 042C                        i1l1983 040C  
                      i1l1975 0401                        i1l1967 03EB                        i1l1993 0434  
                      i1l1985 040E                        i1l1977 0403                        i1l1969 03F1  
                      i1l1995 0436                        i1l1987 0413                        i1l1979 0404  
                      i1l1997 0445                        i1l1989 041F                        i1l1999 0449  
                      u126_20 03F1                        u126_21 03F0                        u127_20 0408  
                      u127_21 0407                        u128_20 0413                        u128_21 0412  
                      u129_20 042C                        _INTCON 000B                        u129_21 042B  
                      u129_25 0428                  ?_UART_TxChar 0075              __end_of_lcd_init 0524  
            __end_of_lcd_send 077F                        ___lmul 05CE                     ??___aldiv 0028  
           __end_of_UART_init 06E9                     ??___lwdiv 0024                     ??___lwmod 0038  
                      _numSec 006D                     ??_lcd_dat 0020                     ??_lcd_cmd 0020  
                      _strcmp 077F                     ??_lcd_str 0025                        saved_w 007E  
                      srand@x 0020       __end_of__initialization 0056         __end_of_UART_TxString 0FDE  
              __pcstackCOMMON 0075                  __pidataBANK0 0F94                 __end_of_srand 0FAB  
                     ??_srand 0022                    _dataParsed 0190                    __pbssBANK0 0049  
                  __pbssBANK1 00A0                    __pbssBANK3 0190                    __pmaintext 005A  
                     ?___lmul 0020                    __pintentry 0004                ___lmul@product 0029  
                     ?_strcmp 0020                     ?_lcd_init 0075                     ?_lcd_send 0020  
                  __stringtab 036A                    _keyPressed 01EF                    _initKeyPad 0FAB  
                     ___aldiv 02CD                       ___lwdiv 065D                       ___lwmod 06E9  
                     _colMask 03C9                       _colScan 0071                       __ptext1 077F  
                     __ptext2 0524                       __ptext3 0FA2                       __ptext4 0616  
                     __ptext5 05CE                       __ptext6 057D                       __ptext7 0725  
                     __ptext8 07CE                       __ptext9 0752                       _lcd_dat 07CE  
                     _lcd_cmd 0FDE                       _lcd_str 0725                       _countOn 004B  
            ___aldiv@dividend 0024                    _keypressed 0074             __end_of_parseData 05CE  
                     _rowMask 03C5                       _rowScan 0070                       clrloop0 0F9B  
                  ??_lcd_init 0023                    ??_lcd_send 0021          end_of_initialization 0056  
                     itoa@buf 0048                       itoa@val 0043                UART_TxString@i 0024  
            ___aldiv@quotient 002B                       utoa@buf 0042                       utoa@val 003A  
          random_string@index 003C                       strcmp@r 0024                     _UART_init 06A3  
                   _PORTEbits 0009                 _random_string 0524                     _TRISEbits 0089  
                  lcd_dat@val 0022                    lcd_cmd@val 0022                    main@kpress 00D6  
                  lcd_str@str 0023                random_string@i 003E                   ?_keyPressed 0075  
                 ?_initKeyPad 0075                __end_of___lmul 0616                    ?_UART_init 002F  
              ?_random_string 0075                __end_of_strcmp 07AA           start_initialization 0013  
                 __end_of_ISR 045A                      ??___lmul 0028                   __pdataBANK0 0069  
                    ??_strcmp 0022                   __pbssCOMMON 0070                     ___latbits 0002  
               __pcstackBANK0 0020                 __pcstackBANK1 00D2                    parseData@i 0026  
                  parseData@j 0024                 keyPressed@tmp 0023              ___lwdiv@dividend 0022  
                    ?___aldiv 0020                      ?___lwdiv 0020                      ?___lwmod 0034  
                   __pstrings 036A                   ??_UART_init 0033                      ?_lcd_dat 0075  
             ??_random_string 003A                      ?_lcd_cmd 0075                      ?_lcd_str 0023  
               UART_TxChar@ch 0021              ___lwdiv@quotient 0026                     _parseData 057D  
             ___aldiv@divisor 0020             interrupt_function 0004               ___aldiv@counter 0029  
                   clear_ram0 0F9A                 ??_UART_TxChar 0020                 _code_keyboard 0055  
               _UART_TxString 0FBC  __end_ofrandom_string@charset 03B9                   __stringbase 0379  
                   _tmpkpress 0054                     _stop_wait 0051             ___lmul@multiplier 0020  
                  ?_parseData 0020                ?_UART_TxString 0075                  ??_keyPressed 0020  
                ??_initKeyPad 0020           __end_of_UART_TxChar 07FE            __end_of__stringtab 037A  
         parseData@dataParsed 0020               ___lwdiv@divisor 0020               ___lwdiv@counter 0025  
                    __ptext10 04C8                      __ptext11 0FDE                      __ptext20 0FBC  
                    __ptext12 01EF                      __ptext21 07F0                      __ptext13 07AA  
                    __ptext22 03EB                      __ptext14 045A                      __ptext15 06E9  
                    __ptext16 065D                      __ptext17 0FAB                      __ptext18 06A3  
                    __ptext19 02CD            __end_of_keyPressed 02CD                      _lcd_init 04C8  
            UART_TxString@str 0023                      _lcd_send 0752            __end_of_initKeyPad 0FBC  
                    _countSec 0049            _code_generate_send 0052                      _received 0053  
                    main@code 00D5                      lcd_str@i 0026                      itoa@base 0045  
        random_string@charset 037A                      intlevel1 0000                   ??_parseData 0021  
           UART_init@baudrate 002F              ___lwmod@dividend 0036               ??_UART_TxString 0022  
                   stringcode 0374                   _UART_TxChar 07F0                      utoa@base 003C  
                  _OPTION_REG 0081                      strcmp@s1 0025                      strcmp@s2 0020  
             ___lwmod@divisor 0034               ___lwmod@counter 0039                      stringdir 0374  
                    stringtab 036A                  ___aldiv@sign 002A  
