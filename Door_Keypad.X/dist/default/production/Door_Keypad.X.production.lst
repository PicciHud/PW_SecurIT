

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 31 17:13:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000E                     	;# 
    92     000F                     	;# 
    93     0010                     	;# 
    94     0011                     	;# 
    95     0012                     	;# 
    96     0013                     	;# 
    97     0014                     	;# 
    98     0015                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     0019                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     0087                     	;# 
   115     0088                     	;# 
   116     0089                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     008E                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009C                     	;# 
   187     009D                     	;# 
   188     009E                     	;# 
   189     009F                     	;# 
   190     010C                     	;# 
   191     010D                     	;# 
   192     010E                     	;# 
   193     010F                     	;# 
   194     018C                     	;# 
   195     018D                     	;# 
   196                           
   197                           	psect	idataBANK0
   198     07DE                     __pidataBANK0:
   199                           
   200                           ;initializer for _randx
   201     07DE  3401               	retlw	1
   202     07DF  3400               	retlw	0
   203     07E0  3400               	retlw	0
   204     07E1  3400               	retlw	0
   205                           
   206                           ;initializer for _numSec
   207     07E2  343C               	retlw	60
   208     07E3  3400               	retlw	0
   209                           
   210                           	psect	strings
   211     0300                     __pstrings:
   212     0300                     stringtab:
   213     0300                     __stringtab:
   214                           
   215                           ;	String table - string pointers are 1 byte each
   216     0300  1BFF               	btfsc	btemp+1,7
   217     0301  2B0A               	ljmp	stringcode
   218     0302  1383               	bcf	3,7
   219     0303  187F               	btfsc	btemp+1,0
   220     0304  1783               	bsf	3,7
   221     0305  0800               	movf	0,w
   222     0306  0A84               	incf	4,f
   223     0307  1903               	skipnz
   224     0308  0AFF               	incf	btemp+1,f
   225     0309  0008               	return
   226     030A                     stringcode:
   227     030A                     stringdir:
   228     030A  3003               	movlw	high stringdir
   229     030B  008A               	movwf	10
   230     030C  0804               	movf	4,w
   231     030D  0A84               	incf	4,f
   232     030E  0782               	addwf	2,f
   233     030F                     __stringbase:
   234     030F  3400               	retlw	0
   235     0310                     __end_of__stringtab:
   236     0310                     random_string@charset:
   237     0310  3461               	retlw	97
   238     0311  3462               	retlw	98
   239     0312  3463               	retlw	99
   240     0313  3464               	retlw	100
   241     0314  3465               	retlw	101
   242     0315  3466               	retlw	102
   243     0316  3467               	retlw	103
   244     0317  3468               	retlw	104
   245     0318  3469               	retlw	105
   246     0319  346A               	retlw	106
   247     031A  346B               	retlw	107
   248     031B  346C               	retlw	108
   249     031C  346D               	retlw	109
   250     031D  346E               	retlw	110
   251     031E  346F               	retlw	111
   252     031F  3470               	retlw	112
   253     0320  3471               	retlw	113
   254     0321  3472               	retlw	114
   255     0322  3473               	retlw	115
   256     0323  3474               	retlw	116
   257     0324  3475               	retlw	117
   258     0325  3476               	retlw	118
   259     0326  3477               	retlw	119
   260     0327  3478               	retlw	120
   261     0328  3479               	retlw	121
   262     0329  347A               	retlw	122
   263     032A  3441               	retlw	65
   264     032B  3442               	retlw	66
   265     032C  3443               	retlw	67
   266     032D  3444               	retlw	68
   267     032E  3445               	retlw	69
   268     032F  3446               	retlw	70
   269     0330  3447               	retlw	71
   270     0331  3448               	retlw	72
   271     0332  3449               	retlw	73
   272     0333  344A               	retlw	74
   273     0334  344B               	retlw	75
   274     0335  344C               	retlw	76
   275     0336  344D               	retlw	77
   276     0337  344E               	retlw	78
   277     0338  344F               	retlw	79
   278     0339  3450               	retlw	80
   279     033A  3451               	retlw	81
   280     033B  3452               	retlw	82
   281     033C  3453               	retlw	83
   282     033D  3454               	retlw	84
   283     033E  3455               	retlw	85
   284     033F  3456               	retlw	86
   285     0340  3457               	retlw	87
   286     0341  3458               	retlw	88
   287     0342  3459               	retlw	89
   288     0343  345A               	retlw	90
   289     0344  3430               	retlw	48
   290     0345  3431               	retlw	49
   291     0346  3432               	retlw	50
   292     0347  3433               	retlw	51
   293     0348  3434               	retlw	52
   294     0349  3435               	retlw	53
   295     034A  3436               	retlw	54
   296     034B  3437               	retlw	55
   297     034C  3438               	retlw	56
   298     034D  3439               	retlw	57
   299     034E  3400               	retlw	0
   300     034F                     __end_ofrandom_string@charset:
   301     034F                     _keys:
   302     034F  342A               	retlw	42
   303     0350  3407               	retlw	7
   304     0351  3404               	retlw	4
   305     0352  3401               	retlw	1
   306     0353  3400               	retlw	0
   307     0354  3408               	retlw	8
   308     0355  3405               	retlw	5
   309     0356  3402               	retlw	2
   310     0357  3423               	retlw	35
   311     0358  3409               	retlw	9
   312     0359  3406               	retlw	6
   313     035A  3403               	retlw	3
   314     035B                     __end_of_keys:
   315     035B                     _rowMask:
   316     035B  3401               	retlw	1
   317     035C  3402               	retlw	2
   318     035D  3404               	retlw	4
   319     035E  3408               	retlw	8
   320     035F                     __end_of_rowMask:
   321     035F                     _colMask:
   322     035F  34FE               	retlw	254
   323     0360  34FD               	retlw	253
   324     0361  34FB               	retlw	251
   325     0362                     __end_of_colMask:
   326     001A                     _RCREG	set	26
   327     0019                     _TXREG	set	25
   328     000C                     _PIR1	set	12
   329     0018                     _RCSTA	set	24
   330     0009                     _PORTEbits	set	9
   331     0008                     _PORTD	set	8
   332     0006                     _PORTB	set	6
   333     0001                     _TMR0	set	1
   334     000B                     _INTCON	set	11
   335     0065                     _RCIF	set	101
   336     008C                     _PIE1	set	140
   337     0099                     _SPBRG	set	153
   338     0098                     _TXSTA	set	152
   339     0087                     _TRISC	set	135
   340     0089                     _TRISEbits	set	137
   341     0089                     _TRISE	set	137
   342     0088                     _TRISD	set	136
   343     0081                     _OPTION_REG	set	129
   344     0086                     _TRISB	set	134
   345     0362                     STR_4:
   346     0362  3449               	retlw	73	;'I'
   347     0363  346E               	retlw	110	;'n'
   348     0364  3473               	retlw	115	;'s'
   349     0365  3465               	retlw	101	;'e'
   350     0366  3472               	retlw	114	;'r'
   351     0367  3474               	retlw	116	;'t'
   352     0368  3420               	retlw	32	;' '
   353     0369  3463               	retlw	99	;'c'
   354     036A  346F               	retlw	111	;'o'
   355     036B  3464               	retlw	100	;'d'
   356     036C  3465               	retlw	101	;'e'
   357     036D  3400               	retlw	0
   358     036E                     STR_1:
   359     036E  3477               	retlw	119	;'w'
   360     036F  3461               	retlw	97	;'a'
   361     0370  3469               	retlw	105	;'i'
   362     0371  3474               	retlw	116	;'t'
   363     0372  3469               	retlw	105	;'i'
   364     0373  346E               	retlw	110	;'n'
   365     0374  3467               	retlw	103	;'g'
   366     0375  342E               	retlw	46	;'.'
   367     0376  342E               	retlw	46	;'.'
   368     0377  342E               	retlw	46	;'.'
   369     0378  3400               	retlw	0
   370     0379                     STR_3:
   371     0379  3432               	retlw	50	;'2'
   372     037A  3438               	retlw	56	;'8'
   373     037B  3437               	retlw	55	;'7'
   374     037C  3435               	retlw	53	;'5'
   375     037D  3433               	retlw	51	;'3'
   376     037E  340D               	retlw	13
   377     037F  340A               	retlw	10
   378     0380  3400               	retlw	0
   379     0381                     STR_2:
   380     0381  3432               	retlw	50	;'2'
   381     0382  3438               	retlw	56	;'8'
   382     0383  3437               	retlw	55	;'7'
   383     0384  3435               	retlw	53	;'5'
   384     0385  3433               	retlw	51	;'3'
   385     0386  3400               	retlw	0
   386     036E                     
   387                           	psect	cinit
   388     0013                     start_initialization:	
   389                           ; #config settings
   390                           
   391     0013                     __initialization:
   392                           
   393                           ; Initialize objects allocated to BANK0
   394     0013  120A  118A  27DE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   395     0018  00E0               	movwf	__pdataBANK0& (0+127)
   396     0019  120A  118A  27DF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   397     001E  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   398     001F  120A  118A  27E0  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   399     0024  00E2               	movwf	(__pdataBANK0+2)& (0+127)
   400     0025  120A  118A  27E1  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   401     002A  00E3               	movwf	(__pdataBANK0+3)& (0+127)
   402     002B  120A  118A  27E2  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   403     0030  00E4               	movwf	(__pdataBANK0+4)& (0+127)
   404     0031  120A  118A  27E3  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   405     0036  00E5               	movwf	(__pdataBANK0+5)& (0+127)
   406                           
   407                           ; Clear objects allocated to BANK3
   408     0037  1783               	bsf	3,7	;select IRP bank2
   409     0038  3090               	movlw	low __pbssBANK3
   410     0039  0084               	movwf	4
   411     003A  30C2               	movlw	low (__pbssBANK3+50)
   412     003B  120A  118A  27D6  120A  118A  	fcall	clear_ram0
   413                           
   414                           ; Clear objects allocated to BANK1
   415     0040  1383               	bcf	3,7	;select IRP bank0
   416     0041  30A0               	movlw	low __pbssBANK1
   417     0042  0084               	movwf	4
   418     0043  30D2               	movlw	low (__pbssBANK1+50)
   419     0044  120A  118A  27D6  120A  118A  	fcall	clear_ram0
   420                           
   421                           ; Clear objects allocated to BANK0
   422     0049  304D               	movlw	low __pbssBANK0
   423     004A  0084               	movwf	4
   424     004B  3060               	movlw	low (__pbssBANK0+19)
   425     004C  120A  118A  27D6  120A  118A  	fcall	clear_ram0
   426                           
   427                           ; Clear objects allocated to COMMON
   428     0051  01F5               	clrf	__pbssCOMMON& (0+127)
   429     0052  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   430     0053  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   431     0054  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   432     0055                     end_of_initialization:	
   433                           ;End of C runtime variable initialization code
   434                           
   435     0055                     __end_of__initialization:
   436     0055  0183               	clrf	3
   437     0056  120A  118A  2859   	ljmp	_main	;jump to C main() function
   438                           
   439                           	psect	bssCOMMON
   440     0075                     __pbssCOMMON:
   441     0075                     _countSec:
   442     0075                     	ds	2
   443     0077                     _countOn:
   444     0077                     	ds	2
   445                           
   446                           	psect	bssBANK0
   447     004D                     __pbssBANK0:
   448     004D                     _i:
   449     004D                     	ds	2
   450     004F                     _rowScan:
   451     004F                     	ds	1
   452     0050                     _colScan:
   453     0050                     	ds	1
   454     0051                     _stop_wait:
   455     0051                     	ds	1
   456     0052                     _code_generate_send:
   457     0052                     	ds	1
   458     0053                     _received:
   459     0053                     	ds	1
   460     0054                     _keyok:
   461     0054                     	ds	1
   462     0055                     _keypressed:
   463     0055                     	ds	1
   464     0056                     random_string@str:
   465     0056                     	ds	8
   466     005E                     _buff:
   467     005E                     	ds	2
   468                           
   469                           	psect	dataBANK0
   470     0060                     __pdataBANK0:
   471     0060                     _randx:
   472     0060                     	ds	4
   473     0064                     _numSec:
   474     0064                     	ds	2
   475                           
   476                           	psect	bssBANK1
   477     00A0                     __pbssBANK1:
   478     00A0                     _dato:
   479     00A0                     	ds	50
   480                           
   481                           	psect	bssBANK3
   482     0190                     __pbssBANK3:
   483     0190                     _dataParsed:
   484     0190                     	ds	50
   485                           
   486                           	psect	clrtext
   487     07D6                     clear_ram0:	
   488                           ;	Called with FSR containing the base address, and
   489                           ;	W with the last address+1
   490                           
   491     07D6  0064               	clrwdt	;clear the watchdog before getting into this loop
   492     07D7                     clrloop0:
   493     07D7  0180               	clrf	0	;clear RAM location pointed to by FSR
   494     07D8  0A84               	incf	4,f	;increment pointer
   495     07D9  0604               	xorwf	4,w	;XOR with final address
   496     07DA  1903               	btfsc	3,2	;have we reached the end yet?
   497     07DB  3400               	retlw	0	;all done for this memory range, return
   498     07DC  0604               	xorwf	4,w	;XOR again to restore value
   499     07DD  2FD7               	goto	clrloop0	;do the next byte
   500                           
   501                           	psect	cstackCOMMON
   502     0070                     __pcstackCOMMON:
   503     0070                     ?_lcd_init:
   504     0070                     ?_initKeyPad:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_random_string:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_lcd_dat:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_lcd_cmd:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_UART_TxChar:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_ISR:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ??_ISR:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528                           
   529                           ; 2 bytes @ 0x0
   530     0070                     	ds	5
   531     0075                     ??_srand:
   532                           
   533                           	psect	cstackBANK0
   534     0020                     __pcstackBANK0:	
   535                           ; 1 bytes @ 0x5
   536                           
   537     0020                     ??_initKeyPad:
   538     0020                     ?_lcd_send:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0020                     ?_parseData:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0020                     ?_srand:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0020                     ??_lcd_dat:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0020                     ??_lcd_cmd:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0020                     ??_UART_TxChar:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0020                     ?___lwdiv:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0020                     ?___lmul:	
   560                           ; 2 bytes @ 0x0
   561                           
   562     0020                     ?___aldiv:	
   563                           ; 4 bytes @ 0x0
   564                           
   565     0020                     lcd_send@tipo:	
   566                           ; 4 bytes @ 0x0
   567                           
   568     0020                     parseData@dataParsed:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0020                     ___lwdiv@divisor:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0020                     srand@x:	
   575                           ; 2 bytes @ 0x0
   576                           
   577     0020                     ___lmul@multiplier:	
   578                           ; 2 bytes @ 0x0
   579                           
   580     0020                     ___aldiv@divisor:	
   581                           ; 4 bytes @ 0x0
   582                           
   583                           
   584                           ; 4 bytes @ 0x0
   585     0020                     	ds	1
   586     0021                     ??_lcd_send:
   587     0021                     ??_parseData:	
   588                           ; 1 bytes @ 0x1
   589                           
   590     0021                     UART_TxChar@ch:	
   591                           ; 1 bytes @ 0x1
   592                           
   593                           
   594                           ; 1 bytes @ 0x1
   595     0021                     	ds	1
   596     0022                     ?_UART_TxString:
   597     0022                     lcd_dat@val:	
   598                           ; 1 bytes @ 0x2
   599                           
   600     0022                     lcd_cmd@val:	
   601                           ; 1 bytes @ 0x2
   602                           
   603     0022                     UART_TxString@str:	
   604                           ; 1 bytes @ 0x2
   605                           
   606     0022                     ___lwdiv@dividend:	
   607                           ; 2 bytes @ 0x2
   608                           
   609                           
   610                           ; 2 bytes @ 0x2
   611     0022                     	ds	1
   612     0023                     ??_lcd_init:
   613     0023                     ?_lcd_str:	
   614                           ; 1 bytes @ 0x3
   615                           
   616     0023                     lcd_send@dato:	
   617                           ; 1 bytes @ 0x3
   618                           
   619     0023                     lcd_str@str:	
   620                           ; 1 bytes @ 0x3
   621                           
   622                           
   623                           ; 2 bytes @ 0x3
   624     0023                     	ds	1
   625     0024                     ??_UART_TxString:
   626     0024                     ??___lwdiv:	
   627                           ; 1 bytes @ 0x4
   628                           
   629     0024                     parseData@j:	
   630                           ; 1 bytes @ 0x4
   631                           
   632     0024                     ___lmul@multiplicand:	
   633                           ; 2 bytes @ 0x4
   634                           
   635     0024                     ___aldiv@dividend:	
   636                           ; 4 bytes @ 0x4
   637                           
   638                           
   639                           ; 4 bytes @ 0x4
   640     0024                     	ds	1
   641     0025                     ??_lcd_str:
   642     0025                     UART_TxString@i:	
   643                           ; 1 bytes @ 0x5
   644                           
   645     0025                     ___lwdiv@counter:	
   646                           ; 1 bytes @ 0x5
   647                           
   648                           
   649                           ; 1 bytes @ 0x5
   650     0025                     	ds	1
   651     0026                     lcd_str@i:
   652     0026                     parseData@i:	
   653                           ; 1 bytes @ 0x6
   654                           
   655     0026                     ___lwdiv@quotient:	
   656                           ; 2 bytes @ 0x6
   657                           
   658                           
   659                           ; 2 bytes @ 0x6
   660     0026                     	ds	2
   661     0028                     ??___lmul:
   662     0028                     ??___aldiv:	
   663                           ; 1 bytes @ 0x8
   664                           
   665     0028                     parseData@data:	
   666                           ; 1 bytes @ 0x8
   667                           
   668                           
   669                           ; 1 bytes @ 0x8
   670     0028                     	ds	1
   671     0029                     ___aldiv@counter:
   672     0029                     ___lmul@product:	
   673                           ; 1 bytes @ 0x9
   674                           
   675                           
   676                           ; 4 bytes @ 0x9
   677     0029                     	ds	1
   678     002A                     ___aldiv@sign:
   679                           
   680                           ; 1 bytes @ 0xA
   681     002A                     	ds	1
   682     002B                     ___aldiv@quotient:
   683                           
   684                           ; 4 bytes @ 0xB
   685     002B                     	ds	2
   686     002D                     ?_rand:
   687                           
   688                           ; 2 bytes @ 0xD
   689     002D                     	ds	2
   690     002F                     ?_UART_init:
   691     002F                     ??_rand:	
   692                           ; 1 bytes @ 0xF
   693                           
   694     002F                     UART_init@baudrate:	
   695                           ; 1 bytes @ 0xF
   696                           
   697                           
   698                           ; 4 bytes @ 0xF
   699     002F                     	ds	4
   700     0033                     ??_UART_init:
   701                           
   702                           ; 1 bytes @ 0x13
   703     0033                     	ds	1
   704     0034                     ?___lwmod:
   705     0034                     ___lwmod@divisor:	
   706                           ; 2 bytes @ 0x14
   707                           
   708                           
   709                           ; 2 bytes @ 0x14
   710     0034                     	ds	2
   711     0036                     ___lwmod@dividend:
   712                           
   713                           ; 2 bytes @ 0x16
   714     0036                     	ds	2
   715     0038                     ??___lwmod:
   716                           
   717                           ; 1 bytes @ 0x18
   718     0038                     	ds	1
   719     0039                     ___lwmod@counter:
   720                           
   721                           ; 1 bytes @ 0x19
   722     0039                     	ds	1
   723     003A                     ??_random_string:
   724     003A                     ?_utoa:	
   725                           ; 1 bytes @ 0x1A
   726                           
   727     003A                     utoa@val:	
   728                           ; 1 bytes @ 0x1A
   729                           
   730                           
   731                           ; 2 bytes @ 0x1A
   732     003A                     	ds	2
   733     003C                     random_string@index:
   734     003C                     utoa@base:	
   735                           ; 2 bytes @ 0x1C
   736                           
   737                           
   738                           ; 2 bytes @ 0x1C
   739     003C                     	ds	2
   740     003E                     ??_utoa:
   741     003E                     random_string@i:	
   742                           ; 1 bytes @ 0x1E
   743                           
   744                           
   745                           ; 2 bytes @ 0x1E
   746     003E                     	ds	1
   747     003F                     utoa@v:
   748                           
   749                           ; 2 bytes @ 0x1F
   750     003F                     	ds	2
   751     0041                     utoa@c:
   752                           
   753                           ; 1 bytes @ 0x21
   754     0041                     	ds	1
   755     0042                     utoa@buf:
   756                           
   757                           ; 1 bytes @ 0x22
   758     0042                     	ds	1
   759     0043                     ?_itoa:
   760     0043                     itoa@val:	
   761                           ; 1 bytes @ 0x23
   762                           
   763                           
   764                           ; 2 bytes @ 0x23
   765     0043                     	ds	2
   766     0045                     itoa@base:
   767                           
   768                           ; 2 bytes @ 0x25
   769     0045                     	ds	2
   770     0047                     ??_itoa:
   771                           
   772                           ; 1 bytes @ 0x27
   773     0047                     	ds	1
   774     0048                     itoa@buf:
   775                           
   776                           ; 1 bytes @ 0x28
   777     0048                     	ds	1
   778     0049                     ??_main:
   779                           
   780                           ; 1 bytes @ 0x29
   781     0049                     	ds	3
   782     004C                     main@code:
   783                           
   784                           ; 1 bytes @ 0x2C
   785     004C                     	ds	1
   786                           
   787                           	psect	maintext
   788     0059                     __pmaintext:	
   789 ;;
   790 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   791 ;;
   792 ;; *************** function _main *****************
   793 ;; Defined at:
   794 ;;		line 128 in file "main.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  code            1   44[BANK0 ] PTR unsigned char 
   799 ;;		 -> random_string@str(8), 
   800 ;;  CRC             1    0        unsigned char 
   801 ;;  data            1    0        unsigned char 
   802 ;;  CRC_response    1    0        unsigned char 
   803 ;;  confirm_requ    1    0        unsigned char 
   804 ;;  id              1    0        unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  2  100[None  ] int 
   807 ;; Registers used:
   808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : B00/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   814 ;;      Params:         0       0       0       0       0
   815 ;;      Locals:         0       1       0       0       0
   816 ;;      Temps:          0       3       0       0       0
   817 ;;      Totals:         0       4       0       0       0
   818 ;;Total ram usage:        4 bytes
   819 ;; Hardware stack levels required when called: 4
   820 ;; This function calls:
   821 ;;		_UART_TxString
   822 ;;		_UART_init
   823 ;;		_initKeyPad
   824 ;;		_itoa
   825 ;;		_lcd_init
   826 ;;		_lcd_send
   827 ;;		_lcd_str
   828 ;;		_parseData
   829 ;;		_random_string
   830 ;; This function is called by:
   831 ;;		Startup code after reset
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835     0059                     _main:	
   836                           ;psect for function _main
   837                           
   838     0059                     l2041:	
   839                           ;incstack = 0
   840                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   841                           
   842                           
   843                           ;main.c: 131:     TRISB = 0x00;
   844     0059  1683               	bsf	3,5	;RP0=1, select bank1
   845     005A  1303               	bcf	3,6	;RP1=0, select bank1
   846     005B  0186               	clrf	6	;volatile
   847     005C                     l2043:
   848                           
   849                           ;main.c: 132:     INTCON |= 0xA0;
   850     005C  30A0               	movlw	160
   851     005D  1283               	bcf	3,5	;RP0=0, select bank0
   852     005E  1303               	bcf	3,6	;RP1=0, select bank0
   853     005F  00C9               	movwf	??_main
   854     0060  0849               	movf	??_main,w
   855     0061  048B               	iorwf	11,f	;volatile
   856     0062                     l2045:
   857                           
   858                           ;main.c: 133:     OPTION_REG = 0x05;
   859     0062  3005               	movlw	5
   860     0063  1683               	bsf	3,5	;RP0=1, select bank1
   861     0064  1303               	bcf	3,6	;RP1=0, select bank1
   862     0065  0081               	movwf	1	;volatile
   863     0066                     l2047:
   864                           
   865                           ;main.c: 134:     TMR0 = 6;
   866     0066  3006               	movlw	6
   867     0067  1283               	bcf	3,5	;RP0=0, select bank0
   868     0068  1303               	bcf	3,6	;RP1=0, select bank0
   869     0069  0081               	movwf	1	;volatile
   870     006A                     l2049:
   871                           
   872                           ;main.c: 137:     UART_init(115200);
   873     006A  3000               	movlw	0
   874     006B  00B2               	movwf	UART_init@baudrate+3
   875     006C  3001               	movlw	1
   876     006D  00B1               	movwf	UART_init@baudrate+2
   877     006E  30C2               	movlw	194
   878     006F  00B0               	movwf	UART_init@baudrate+1
   879     0070  3000               	movlw	0
   880     0071  00AF               	movwf	UART_init@baudrate
   881     0072  120A  118A  263D  120A  118A  	fcall	_UART_init
   882     0077                     l2051:
   883                           
   884                           ;main.c: 138:     lcd_init();
   885     0077  120A  118A  2462  120A  118A  	fcall	_lcd_init
   886     007C                     l2053:
   887                           
   888                           ;main.c: 139:     initKeyPad();
   889     007C  120A  118A  27AE  120A  118A  	fcall	_initKeyPad
   890     0081                     l2055:
   891                           
   892                           ;main.c: 141:     lcd_send(0x01, 0);
   893     0081  1283               	bcf	3,5	;RP0=0, select bank0
   894     0082  1303               	bcf	3,6	;RP1=0, select bank0
   895     0083  01A0               	clrf	lcd_send@tipo
   896     0084  3001               	movlw	1
   897     0085  120A  118A  26EC  120A  118A  	fcall	_lcd_send
   898     008A                     l2057:
   899                           
   900                           ;main.c: 142:     lcd_str("waiting...");
   901     008A  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   902     008B  1283               	bcf	3,5	;RP0=0, select bank0
   903     008C  1303               	bcf	3,6	;RP1=0, select bank0
   904     008D  00A3               	movwf	lcd_str@str
   905     008E  3080               	movlw	128
   906     008F  00A4               	movwf	lcd_str@str+1
   907     0090  120A  118A  26BF  120A  118A  	fcall	_lcd_str
   908     0095                     l2059:
   909                           
   910                           ;main.c: 146:     {;main.c: 147:         TRISB = 0x00;
   911     0095  1683               	bsf	3,5	;RP0=1, select bank1
   912     0096  1303               	bcf	3,6	;RP1=0, select bank1
   913     0097  0186               	clrf	6	;volatile
   914     0098                     l2061:
   915                           
   916                           ;main.c: 148:         TRISD = 0x0F;
   917     0098  300F               	movlw	15
   918     0099  0088               	movwf	8	;volatile
   919     009A                     l2063:
   920                           
   921                           ;main.c: 151:         if(!code_generate_send)
   922     009A  1283               	bcf	3,5	;RP0=0, select bank0
   923     009B  1303               	bcf	3,6	;RP1=0, select bank0
   924     009C  0852               	movf	_code_generate_send,w
   925     009D  1D03               	btfss	3,2
   926     009E  28A0               	goto	u1601
   927     009F  28A1               	goto	u1600
   928     00A0                     u1601:
   929     00A0  2960               	goto	l2127
   930     00A1                     u1600:
   931     00A1                     l2065:
   932                           
   933                           ;main.c: 152:         {;main.c: 155:             for (colScan = 0; colScan < 3; colScan+
      +                          +)
   934     00A1  01D0               	clrf	_colScan
   935     00A2                     l2071:
   936                           
   937                           ;main.c: 156:             {;main.c: 158:                 PORTB = PORTB | 0x07;
   938     00A2  0806               	movf	6,w	;volatile
   939     00A3  3807               	iorlw	7
   940     00A4  0086               	movwf	6	;volatile
   941     00A5                     l2073:
   942                           
   943                           ;main.c: 159:                 PORTB = PORTB & colMask[colScan];
   944     00A5  0850               	movf	_colScan,w
   945     00A6  3E50               	addlw	low ((_colMask-__stringbase)| (0+32768))
   946     00A7  0084               	movwf	4
   947     00A8  120A  118A  230A  120A  118A  	fcall	stringdir
   948     00AD  0506               	andwf	6,w	;volatile
   949     00AE  0086               	movwf	6	;volatile
   950     00AF                     l2075:
   951                           
   952                           ;main.c: 161:                 for (rowScan = 0; rowScan < 4; rowScan++)
   953     00AF  01CF               	clrf	_rowScan
   954     00B0                     l2081:
   955                           
   956                           ;main.c: 162:                 {;main.c: 163:                     if (!(PORTD & rowMask[r
      +                          owScan]))
   957     00B0  084F               	movf	_rowScan,w
   958     00B1  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   959     00B2  0084               	movwf	4
   960     00B3  120A  118A  230A  120A  118A  	fcall	stringdir
   961     00B8  0508               	andwf	8,w	;volatile
   962     00B9  1D03               	btfss	3,2
   963     00BA  28BC               	goto	u1611
   964     00BB  28BD               	goto	u1610
   965     00BC                     u1611:
   966     00BC  28E4               	goto	l107
   967     00BD                     u1610:
   968     00BD                     l2083:
   969                           
   970                           ;main.c: 164:                     {;main.c: 165:                         _delay((unsigne
      +                          d long)((5)*(20000000/4000.0)));
   971     00BD  3021               	movlw	33
   972     00BE  1283               	bcf	3,5	;RP0=0, select bank0
   973     00BF  1303               	bcf	3,6	;RP1=0, select bank0
   974     00C0  00CA               	movwf	??_main+1
   975     00C1  3075               	movlw	117
   976     00C2  00C9               	movwf	??_main
   977     00C3                     u1737:
   978     00C3  0BC9               	decfsz	??_main,f
   979     00C4  28C3               	goto	u1737
   980     00C5  0BCA               	decfsz	??_main+1,f
   981     00C6  28C3               	goto	u1737
   982     00C7  28C8               	nop2
   983     00C8                     l2085:
   984                           
   985                           ;main.c: 167:                         if (!(PORTD & rowMask[rowScan]))
   986     00C8  1283               	bcf	3,5	;RP0=0, select bank0
   987     00C9  1303               	bcf	3,6	;RP1=0, select bank0
   988     00CA  084F               	movf	_rowScan,w
   989     00CB  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   990     00CC  0084               	movwf	4
   991     00CD  120A  118A  230A  120A  118A  	fcall	stringdir
   992     00D2  0508               	andwf	8,w	;volatile
   993     00D3  1D03               	btfss	3,2
   994     00D4  28D6               	goto	u1621
   995     00D5  28D7               	goto	u1620
   996     00D6                     u1621:
   997     00D6  28E4               	goto	l107
   998     00D7                     u1620:
   999     00D7                     l2087:
  1000                           
  1001                           ;main.c: 168:                         {;main.c: 170:                             keypres
      +                          sed = rowScan + (4 * colScan);
  1002     00D7  0850               	movf	_colScan,w
  1003     00D8  00C9               	movwf	??_main
  1004     00D9  3002               	movlw	2
  1005     00DA                     u1635:
  1006     00DA  1003               	clrc
  1007     00DB  0DC9               	rlf	??_main,f
  1008     00DC  3EFF               	addlw	-1
  1009     00DD  1D03               	skipz
  1010     00DE  28DA               	goto	u1635
  1011     00DF  084F               	movf	_rowScan,w
  1012     00E0  0749               	addwf	??_main,w
  1013     00E1  00D5               	movwf	_keypressed
  1014     00E2                     l2089:
  1015                           
  1016                           ;main.c: 171:                             keyok = 1;
  1017     00E2  01D4               	clrf	_keyok
  1018     00E3  0AD4               	incf	_keyok,f
  1019     00E4                     l107:	
  1020                           ;main.c: 173:                     }
  1021                           
  1022                           
  1023                           ;main.c: 174:                 }
  1024     00E4  3001               	movlw	1
  1025     00E5  00C9               	movwf	??_main
  1026     00E6  0849               	movf	??_main,w
  1027     00E7  07CF               	addwf	_rowScan,f
  1028     00E8                     l2091:
  1029     00E8  3004               	movlw	4
  1030     00E9  024F               	subwf	_rowScan,w
  1031     00EA  1C03               	skipc
  1032     00EB  28ED               	goto	u1641
  1033     00EC  28EE               	goto	u1640
  1034     00ED                     u1641:
  1035     00ED  28B0               	goto	l2081
  1036     00EE                     u1640:
  1037     00EE                     l2093:
  1038                           
  1039                           ;main.c: 176:                 if (keyok)
  1040     00EE  0854               	movf	_keyok,w
  1041     00EF  1903               	btfsc	3,2
  1042     00F0  28F2               	goto	u1651
  1043     00F1  28F3               	goto	u1650
  1044     00F2                     u1651:
  1045     00F2  2956               	goto	l2123
  1046     00F3                     u1650:
  1047     00F3                     l2095:
  1048                           
  1049                           ;main.c: 177:                 {;main.c: 179:                     if(keypressed == 8)
  1050     00F3  3008               	movlw	8
  1051     00F4  0655               	xorwf	_keypressed,w
  1052     00F5  1D03               	btfss	3,2
  1053     00F6  28F8               	goto	u1661
  1054     00F7  28F9               	goto	u1660
  1055     00F8                     u1661:
  1056     00F8  2920               	goto	l2107
  1057     00F9                     u1660:
  1058     00F9                     l2097:
  1059                           
  1060                           ;main.c: 180:                     {;main.c: 182:                         lcd_send(0x01, 
      +                          0);
  1061     00F9  01A0               	clrf	lcd_send@tipo
  1062     00FA  3001               	movlw	1
  1063     00FB  120A  118A  26EC  120A  118A  	fcall	_lcd_send
  1064     0100                     l2099:
  1065                           
  1066                           ;main.c: 184:                         char* code = random_string();
  1067     0100  120A  118A  24BE  120A  118A  	fcall	_random_string
  1068     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1069     0106  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0107  00CC               	movwf	main@code
  1071     0108                     l2101:
  1072                           
  1073                           ;main.c: 186:                         lcd_str(code);
  1074     0108  084C               	movf	main@code,w
  1075     0109  00A3               	movwf	lcd_str@str
  1076     010A  3000               	movlw	0
  1077     010B  00A4               	movwf	lcd_str@str+1
  1078     010C  120A  118A  26BF  120A  118A  	fcall	_lcd_str
  1079     0111                     l2103:
  1080                           
  1081                           ;main.c: 189:                         UART_TxString(code);
  1082     0111  1283               	bcf	3,5	;RP0=0, select bank0
  1083     0112  1303               	bcf	3,6	;RP1=0, select bank0
  1084     0113  084C               	movf	main@code,w
  1085     0114  00A2               	movwf	UART_TxString@str
  1086     0115  3000               	movlw	0
  1087     0116  00A3               	movwf	UART_TxString@str+1
  1088     0117  120A  118A  2719  120A  118A  	fcall	_UART_TxString
  1089     011C                     l2105:
  1090                           
  1091                           ;main.c: 192:                         code_generate_send = 1;
  1092     011C  1283               	bcf	3,5	;RP0=0, select bank0
  1093     011D  1303               	bcf	3,6	;RP1=0, select bank0
  1094     011E  01D2               	clrf	_code_generate_send
  1095     011F  0AD2               	incf	_code_generate_send,f
  1096     0120                     l2107:
  1097                           
  1098                           ;main.c: 196:                     if (keypressed == 7)
  1099     0120  3007               	movlw	7
  1100     0121  0655               	xorwf	_keypressed,w
  1101     0122  1D03               	btfss	3,2
  1102     0123  2925               	goto	u1671
  1103     0124  2926               	goto	u1670
  1104     0125                     u1671:
  1105     0125  2943               	goto	l2115
  1106     0126                     u1670:
  1107     0126                     l2109:
  1108                           
  1109                           ;main.c: 197:                     {;main.c: 198:                         lcd_send(0x01, 
      +                          0);
  1110     0126  01A0               	clrf	lcd_send@tipo
  1111     0127  3001               	movlw	1
  1112     0128  120A  118A  26EC  120A  118A  	fcall	_lcd_send
  1113     012D                     l2111:
  1114                           
  1115                           ;main.c: 199:                         lcd_str("28753");
  1116     012D  3072               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1117     012E  1283               	bcf	3,5	;RP0=0, select bank0
  1118     012F  1303               	bcf	3,6	;RP1=0, select bank0
  1119     0130  00A3               	movwf	lcd_str@str
  1120     0131  3080               	movlw	128
  1121     0132  00A4               	movwf	lcd_str@str+1
  1122     0133  120A  118A  26BF  120A  118A  	fcall	_lcd_str
  1123     0138                     l2113:
  1124                           
  1125                           ;main.c: 200:                         UART_TxString("28753\r\n");
  1126     0138  306A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1127     0139  1283               	bcf	3,5	;RP0=0, select bank0
  1128     013A  1303               	bcf	3,6	;RP1=0, select bank0
  1129     013B  00A2               	movwf	UART_TxString@str
  1130     013C  3080               	movlw	128
  1131     013D  00A3               	movwf	UART_TxString@str+1
  1132     013E  120A  118A  2719  120A  118A  	fcall	_UART_TxString
  1133     0143                     l2115:
  1134                           
  1135                           ;main.c: 203:                     keyok = 0;
  1136     0143  1283               	bcf	3,5	;RP0=0, select bank0
  1137     0144  1303               	bcf	3,6	;RP1=0, select bank0
  1138     0145  01D4               	clrf	_keyok
  1139     0146                     l2117:
  1140                           
  1141                           ;main.c: 206:                     PORTD = PORTD | 0x0F;
  1142     0146  0808               	movf	8,w	;volatile
  1143     0147  380F               	iorlw	15
  1144     0148  0088               	movwf	8	;volatile
  1145                           
  1146                           ;main.c: 207:                     while ((PORTD & 0x0F) != 0x0F)
  1147     0149  294D               	goto	l2121
  1148     014A                     l2119:
  1149                           
  1150                           ;main.c: 208:                     {;main.c: 209:                         PORTD = PORTD |
      +                           0x0F;
  1151     014A  0808               	movf	8,w	;volatile
  1152     014B  380F               	iorlw	15
  1153     014C  0088               	movwf	8	;volatile
  1154     014D                     l2121:	
  1155                           ;main.c: 210:                         continue;
  1156                           
  1157                           
  1158                           ;main.c: 207:                     while ((PORTD & 0x0F) != 0x0F)
  1159     014D  300F               	movlw	15
  1160     014E  0508               	andwf	8,w	;volatile
  1161     014F  00C9               	movwf	??_main
  1162     0150  300F               	movlw	15
  1163     0151  0649               	xorwf	??_main,w
  1164     0152  1D03               	btfss	3,2
  1165     0153  2955               	goto	u1681
  1166     0154  2956               	goto	u1680
  1167     0155                     u1681:
  1168     0155  294A               	goto	l2119
  1169     0156                     u1680:
  1170     0156                     l2123:
  1171                           
  1172                           ;main.c: 216:             }
  1173     0156  3001               	movlw	1
  1174     0157  00C9               	movwf	??_main
  1175     0158  0849               	movf	??_main,w
  1176     0159  07D0               	addwf	_colScan,f
  1177     015A                     l2125:
  1178     015A  3003               	movlw	3
  1179     015B  0250               	subwf	_colScan,w
  1180     015C  1C03               	skipc
  1181     015D  295F               	goto	u1691
  1182     015E  2960               	goto	u1690
  1183     015F                     u1691:
  1184     015F  28A2               	goto	l2071
  1185     0160                     u1690:
  1186     0160                     l2127:
  1187                           
  1188                           ;main.c: 219:         if(code_generate_send)
  1189     0160  0852               	movf	_code_generate_send,w
  1190     0161  1903               	btfsc	3,2
  1191     0162  2964               	goto	u1701
  1192     0163  2965               	goto	u1700
  1193     0164                     u1701:
  1194     0164  2895               	goto	l2059
  1195     0165                     u1700:
  1196     0165                     l2129:
  1197                           
  1198                           ;main.c: 220:         {;main.c: 221:             if(received)
  1199     0165  0853               	movf	_received,w
  1200     0166  1903               	btfsc	3,2
  1201     0167  2969               	goto	u1711
  1202     0168  296A               	goto	u1710
  1203     0169                     u1711:
  1204     0169  29AF               	goto	l2149
  1205     016A                     u1710:
  1206     016A                     l2131:
  1207                           
  1208                           ;main.c: 222:             {;main.c: 223:                 lcd_send(0x01, 0);
  1209     016A  01A0               	clrf	lcd_send@tipo
  1210     016B  3001               	movlw	1
  1211     016C  120A  118A  26EC  120A  118A  	fcall	_lcd_send
  1212     0171                     l2133:
  1213                           
  1214                           ;main.c: 226:                 lcd_str("Insert code");
  1215     0171  3053               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1216     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1217     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1218     0174  00A3               	movwf	lcd_str@str
  1219     0175  3080               	movlw	128
  1220     0176  00A4               	movwf	lcd_str@str+1
  1221     0177  120A  118A  26BF  120A  118A  	fcall	_lcd_str
  1222     017C                     l2135:
  1223                           
  1224                           ;main.c: 227:                 lcd_send(0xC0, 0);
  1225     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1226     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1227     017E  01A0               	clrf	lcd_send@tipo
  1228     017F  30C0               	movlw	192
  1229     0180  120A  118A  26EC  120A  118A  	fcall	_lcd_send
  1230     0185                     l2137:
  1231                           
  1232                           ;main.c: 230:                 parseData(dato, dataParsed);
  1233     0185  3090               	movlw	(low (_dataParsed| (0+256)))& (0+255)
  1234     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1235     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1236     0188  00A0               	movwf	parseData@dataParsed
  1237     0189  30A0               	movlw	(low (_dato| 0))& (0+255)
  1238     018A  120A  118A  2517  120A  118A  	fcall	_parseData
  1239     018F                     l2139:
  1240                           
  1241                           ;main.c: 232:                 lcd_str(dataParsed);
  1242     018F  3090               	movlw	(low (_dataParsed| (0+256)))& (0+255)
  1243     0190  1283               	bcf	3,5	;RP0=0, select bank0
  1244     0191  1303               	bcf	3,6	;RP1=0, select bank0
  1245     0192  00A3               	movwf	lcd_str@str
  1246     0193  3001               	movlw	1
  1247     0194  00A4               	movwf	lcd_str@str+1
  1248     0195  120A  118A  26BF  120A  118A  	fcall	_lcd_str
  1249     019A                     l2141:
  1250                           
  1251                           ;main.c: 248:                 char id;;main.c: 249:                 char confirm_request
      +                          ;;main.c: 250:                 char CRC_response;;main.c: 251:                 char data
      +                          ;;main.c: 252:                 char CRC;;main.c: 273:                 _delay((unsigned l
      +                          ong)((5000)*(20000000/4000.0)));
  1252     019A  307F               	movlw	127
  1253     019B  1283               	bcf	3,5	;RP0=0, select bank0
  1254     019C  1303               	bcf	3,6	;RP1=0, select bank0
  1255     019D  00CB               	movwf	??_main+2
  1256     019E  30D4               	movlw	212
  1257     019F  00CA               	movwf	??_main+1
  1258     01A0  3031               	movlw	49
  1259     01A1  00C9               	movwf	??_main
  1260     01A2                     u1747:
  1261     01A2  0BC9               	decfsz	??_main,f
  1262     01A3  29A2               	goto	u1747
  1263     01A4  0BCA               	decfsz	??_main+1,f
  1264     01A5  29A2               	goto	u1747
  1265     01A6  0BCB               	decfsz	??_main+2,f
  1266     01A7  29A2               	goto	u1747
  1267     01A8                     l2143:
  1268                           
  1269                           ;main.c: 274:                 i = 0;
  1270     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1271     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1272     01AA  01CD               	clrf	_i
  1273     01AB  01CE               	clrf	_i+1
  1274     01AC                     l2145:
  1275                           
  1276                           ;main.c: 275:                 code_generate_send = 0;
  1277     01AC  01D2               	clrf	_code_generate_send
  1278     01AD                     l2147:
  1279                           
  1280                           ;main.c: 276:                 received = 0;
  1281     01AD  01D3               	clrf	_received
  1282                           
  1283                           ;main.c: 277:             }
  1284     01AE  2895               	goto	l2059
  1285     01AF                     l2149:
  1286                           
  1287                           ;main.c: 279:             {;main.c: 280:                 itoa(buff, numSec, 10);
  1288     01AF  0865               	movf	_numSec+1,w
  1289     01B0  00C4               	movwf	itoa@val+1
  1290     01B1  0864               	movf	_numSec,w
  1291     01B2  00C3               	movwf	itoa@val
  1292     01B3  300A               	movlw	10
  1293     01B4  00C5               	movwf	itoa@base
  1294     01B5  3000               	movlw	0
  1295     01B6  00C6               	movwf	itoa@base+1
  1296     01B7  305E               	movlw	(low (_buff| 0))& (0+255)
  1297     01B8  120A  118A  2746  120A  118A  	fcall	_itoa
  1298     01BD                     l2151:
  1299                           
  1300                           ;main.c: 281:                 lcd_send(0xC0, 0);
  1301     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1302     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1303     01BF  01A0               	clrf	lcd_send@tipo
  1304     01C0  30C0               	movlw	192
  1305     01C1  120A  118A  26EC  120A  118A  	fcall	_lcd_send
  1306     01C6                     l2153:
  1307                           
  1308                           ;main.c: 282:                 lcd_str(buff);
  1309     01C6  305E               	movlw	(low (_buff| 0))& (0+255)
  1310     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1311     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1312     01C9  00A3               	movwf	lcd_str@str
  1313     01CA  3000               	movlw	0
  1314     01CB  00A4               	movwf	lcd_str@str+1
  1315     01CC  120A  118A  26BF  120A  118A  	fcall	_lcd_str
  1316     01D1                     l2155:
  1317                           
  1318                           ;main.c: 284:                 if(stop_wait)
  1319     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1320     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1321     01D3  0851               	movf	_stop_wait,w
  1322     01D4  1903               	btfsc	3,2
  1323     01D5  29D7               	goto	u1721
  1324     01D6  29D8               	goto	u1720
  1325     01D7                     u1721:
  1326     01D7  29EF               	goto	l115
  1327     01D8                     u1720:
  1328     01D8                     l2157:
  1329                           
  1330                           ;main.c: 285:                 {;main.c: 286:                     lcd_send(0x01, 0);
  1331     01D8  01A0               	clrf	lcd_send@tipo
  1332     01D9  3001               	movlw	1
  1333     01DA  120A  118A  26EC  120A  118A  	fcall	_lcd_send
  1334     01DF                     l2159:
  1335                           
  1336                           ;main.c: 287:                     lcd_str("waiting...");
  1337     01DF  305F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1338     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1339     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1340     01E2  00A3               	movwf	lcd_str@str
  1341     01E3  3080               	movlw	128
  1342     01E4  00A4               	movwf	lcd_str@str+1
  1343     01E5  120A  118A  26BF  120A  118A  	fcall	_lcd_str
  1344     01EA                     l2161:
  1345                           
  1346                           ;main.c: 288:                     stop_wait = 0;
  1347     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1348     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1349     01EC  01D1               	clrf	_stop_wait
  1350     01ED                     l2163:
  1351                           
  1352                           ;main.c: 289:                     code_generate_send = 0;
  1353     01ED  01D2               	clrf	_code_generate_send
  1354     01EE  2895               	goto	l2059
  1355     01EF                     l115:	
  1356                           ;main.c: 292:         }
  1357                           
  1358     01EF  2895               	goto	l2059
  1359     01F0  120A  118A  2810   	ljmp	start
  1360     01F3                     __end_of_main:
  1361                           
  1362                           	psect	text1
  1363     04BE                     __ptext1:	
  1364 ;; *************** function _random_string *****************
  1365 ;; Defined at:
  1366 ;;		line 389 in file "main.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  index           2   28[BANK0 ] int 
  1371 ;;  i               2   30[BANK0 ] int 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      PTR unsigned char 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         0       4       0       0       0
  1383 ;;      Temps:          0       2       0       0       0
  1384 ;;      Totals:         0       6       0       0       0
  1385 ;;Total ram usage:        6 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 3
  1388 ;; This function calls:
  1389 ;;		___lwmod
  1390 ;;		_rand
  1391 ;;		_srand
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397     04BE                     _random_string:	
  1398                           ;psect for function _random_string
  1399                           
  1400     04BE                     l1977:	
  1401                           ;incstack = 0
  1402                           ; Regs used in _random_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1403                           
  1404                           
  1405                           ;main.c: 390:     static char str[8];;main.c: 391:     const char charset[] = "abcdefghi
      +                          jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";;main.c: 393:     srand(TMR0);
  1406     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1407     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1408     04C0  0801               	movf	1,w	;volatile
  1409     04C1  00BA               	movwf	??_random_string
  1410     04C2  01BB               	clrf	??_random_string+1
  1411     04C3  083A               	movf	??_random_string,w
  1412     04C4  00A0               	movwf	srand@x
  1413     04C5  083B               	movf	??_random_string+1,w
  1414     04C6  00A1               	movwf	srand@x+1
  1415     04C7  120A  118A  27CD  120A  118A  	fcall	_srand
  1416     04CC                     l1979:
  1417                           
  1418                           ;main.c: 396:     for (int i = 0; i < 5; i++) {
  1419     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1420     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1421     04CE  01BE               	clrf	random_string@i
  1422     04CF  01BF               	clrf	random_string@i+1
  1423     04D0                     l1985:
  1424                           
  1425                           ;main.c: 397:         int index = rand() % (sizeof(charset) - 1);
  1426     04D0  303E               	movlw	62
  1427     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1428     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1429     04D3  00B4               	movwf	___lwmod@divisor
  1430     04D4  3000               	movlw	0
  1431     04D5  00B5               	movwf	___lwmod@divisor+1
  1432     04D6  120A  118A  25B0  120A  118A  	fcall	_rand
  1433     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1434     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1435     04DD  082E               	movf	?_rand+1,w
  1436     04DE  00B7               	movwf	___lwmod@dividend+1
  1437     04DF  082D               	movf	?_rand,w
  1438     04E0  00B6               	movwf	___lwmod@dividend
  1439     04E1  120A  118A  2683  120A  118A  	fcall	___lwmod
  1440     04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1441     04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1442     04E8  0835               	movf	?___lwmod+1,w
  1443     04E9  00BD               	movwf	random_string@index+1
  1444     04EA  0834               	movf	?___lwmod,w
  1445     04EB  00BC               	movwf	random_string@index
  1446     04EC                     l1987:
  1447                           
  1448                           ;main.c: 398:         str[i] = charset[index];
  1449     04EC  083C               	movf	random_string@index,w
  1450     04ED  3E01               	addlw	low ((random_string@charset-__stringbase)| (0+32768))
  1451     04EE  0084               	movwf	4
  1452     04EF  120A  118A  230A  120A  118A  	fcall	stringdir
  1453     04F4  00BA               	movwf	??_random_string
  1454     04F5  083E               	movf	random_string@i,w
  1455     04F6  3E56               	addlw	(low (random_string@str| 0))& (0+255)
  1456     04F7  0084               	movwf	4
  1457     04F8  083A               	movf	??_random_string,w
  1458     04F9  1383               	bcf	3,7	;select IRP bank0
  1459     04FA  0080               	movwf	0
  1460     04FB                     l1989:
  1461                           
  1462                           ;main.c: 399:     }
  1463     04FB  3001               	movlw	1
  1464     04FC  07BE               	addwf	random_string@i,f
  1465     04FD  1803               	skipnc
  1466     04FE  0ABF               	incf	random_string@i+1,f
  1467     04FF  3000               	movlw	0
  1468     0500  07BF               	addwf	random_string@i+1,f
  1469     0501                     l1991:
  1470     0501  083F               	movf	random_string@i+1,w
  1471     0502  3A80               	xorlw	128
  1472     0503  00FF               	movwf	btemp+1
  1473     0504  3080               	movlw	128
  1474     0505  027F               	subwf	btemp+1,w
  1475     0506  1D03               	skipz
  1476     0507  2D0A               	goto	u1545
  1477     0508  3005               	movlw	5
  1478     0509  023E               	subwf	random_string@i,w
  1479     050A                     u1545:
  1480     050A  1C03               	skipc
  1481     050B  2D0D               	goto	u1541
  1482     050C  2D0E               	goto	u1540
  1483     050D                     u1541:
  1484     050D  2CD0               	goto	l1985
  1485     050E                     u1540:
  1486     050E                     l1993:
  1487                           
  1488                           ;main.c: 401:     str[5] = '\r';
  1489     050E  300D               	movlw	13
  1490     050F  1283               	bcf	3,5	;RP0=0, select bank0
  1491     0510  1303               	bcf	3,6	;RP1=0, select bank0
  1492     0511  00DB               	movwf	random_string@str+5
  1493                           
  1494                           ;main.c: 402:     str[6] = '\n';
  1495     0512  300A               	movlw	10
  1496     0513  00DC               	movwf	random_string@str+6
  1497     0514                     l1995:
  1498                           
  1499                           ;main.c: 403:     str[7] = '\0';
  1500     0514  01DD               	clrf	random_string@str+7
  1501     0515                     l1997:
  1502                           
  1503                           ;main.c: 405:     return str;
  1504     0515  3056               	movlw	(low (random_string@str| 0))& (0+255)
  1505     0516                     l151:
  1506     0516  0008               	return
  1507     0517                     __end_of_random_string:
  1508                           
  1509                           	psect	text2
  1510     07CD                     __ptext2:	
  1511 ;; *************** function _srand *****************
  1512 ;; Defined at:
  1513 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  x               2    0[BANK0 ] unsigned int 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       2       0       0       0
  1528 ;;      Locals:         0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0
  1530 ;;      Totals:         0       2       0       0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; Hardware stack levels required when called: 1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_random_string
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541     07CD                     _srand:	
  1542                           ;psect for function _srand
  1543                           
  1544     07CD                     l1815:	
  1545                           ;incstack = 0
  1546                           ; Regs used in _srand: [wreg]
  1547                           
  1548     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1549     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1550     07CF  0820               	movf	srand@x,w
  1551     07D0  00E0               	movwf	_randx
  1552     07D1  0821               	movf	srand@x+1,w
  1553     07D2  00E1               	movwf	_randx+1
  1554     07D3  01E2               	clrf	_randx+2
  1555     07D4  01E3               	clrf	_randx+3
  1556     07D5                     l736:
  1557     07D5  0008               	return
  1558     07D6                     __end_of_srand:
  1559                           
  1560                           	psect	text3
  1561     05B0                     __ptext3:	
  1562 ;; *************** function _rand *****************
  1563 ;; Defined at:
  1564 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  2   13[BANK0 ] int 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1578 ;;      Params:         0       2       0       0       0
  1579 ;;      Locals:         0       0       0       0       0
  1580 ;;      Temps:          0       5       0       0       0
  1581 ;;      Totals:         0       7       0       0       0
  1582 ;;Total ram usage:        7 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 2
  1585 ;; This function calls:
  1586 ;;		___lmul
  1587 ;; This function is called by:
  1588 ;;		_random_string
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592     05B0                     _rand:	
  1593                           ;psect for function _rand
  1594                           
  1595     05B0                     l1817:	
  1596                           ;incstack = 0
  1597                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1598                           
  1599     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1600     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1601     05B2  0863               	movf	_randx+3,w
  1602     05B3  00A3               	movwf	___lmul@multiplier+3
  1603     05B4  0862               	movf	_randx+2,w
  1604     05B5  00A2               	movwf	___lmul@multiplier+2
  1605     05B6  0861               	movf	_randx+1,w
  1606     05B7  00A1               	movwf	___lmul@multiplier+1
  1607     05B8  0860               	movf	_randx,w
  1608     05B9  00A0               	movwf	___lmul@multiplier
  1609     05BA  3041               	movlw	65
  1610     05BB  00A7               	movwf	___lmul@multiplicand+3
  1611     05BC  30C6               	movlw	198
  1612     05BD  00A6               	movwf	___lmul@multiplicand+2
  1613     05BE  304E               	movlw	78
  1614     05BF  00A5               	movwf	___lmul@multiplicand+1
  1615     05C0  306D               	movlw	109
  1616     05C1  00A4               	movwf	___lmul@multiplicand
  1617     05C2  120A  118A  2568  120A  118A  	fcall	___lmul
  1618     05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1619     05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1620     05C9  0823               	movf	?___lmul+3,w
  1621     05CA  00E3               	movwf	_randx+3
  1622     05CB  0822               	movf	?___lmul+2,w
  1623     05CC  00E2               	movwf	_randx+2
  1624     05CD  0821               	movf	?___lmul+1,w
  1625     05CE  00E1               	movwf	_randx+1
  1626     05CF  0820               	movf	?___lmul,w
  1627     05D0  00E0               	movwf	_randx
  1628     05D1                     l1819:
  1629     05D1  3039               	movlw	57
  1630     05D2  07E0               	addwf	_randx,f
  1631     05D3  3030               	movlw	48
  1632     05D4  1803               	skipnc
  1633     05D5  3031               	movlw	49
  1634     05D6  07E1               	addwf	_randx+1,f
  1635     05D7  3000               	movlw	0
  1636     05D8  1803               	skipnc
  1637     05D9  3001               	movlw	1
  1638     05DA  07E2               	addwf	_randx+2,f
  1639     05DB  3000               	movlw	0
  1640     05DC  1803               	skipnc
  1641     05DD  3001               	movlw	1
  1642     05DE  07E3               	addwf	_randx+3,f
  1643     05DF                     l1821:
  1644     05DF  0860               	movf	_randx,w
  1645     05E0  00AF               	movwf	??_rand
  1646     05E1  0861               	movf	_randx+1,w
  1647     05E2  00B0               	movwf	??_rand+1
  1648     05E3  0862               	movf	_randx+2,w
  1649     05E4  00B1               	movwf	??_rand+2
  1650     05E5  0863               	movf	_randx+3,w
  1651     05E6  00B2               	movwf	??_rand+3
  1652     05E7  3010               	movlw	16
  1653     05E8  00B3               	movwf	??_rand+4
  1654     05E9                     u1375:
  1655     05E9  0D32               	rlf	??_rand+3,w
  1656     05EA  0CB2               	rrf	??_rand+3,f
  1657     05EB  0CB1               	rrf	??_rand+2,f
  1658     05EC  0CB0               	rrf	??_rand+1,f
  1659     05ED  0CAF               	rrf	??_rand,f
  1660     05EE                     u1370:
  1661     05EE  0BB3               	decfsz	??_rand+4,f
  1662     05EF  2DE9               	goto	u1375
  1663     05F0  30FF               	movlw	255
  1664     05F1  052F               	andwf	??_rand,w
  1665     05F2  00AD               	movwf	?_rand
  1666     05F3  307F               	movlw	127
  1667     05F4  0530               	andwf	??_rand+1,w
  1668     05F5  00AE               	movwf	?_rand+1
  1669     05F6                     l739:
  1670     05F6  0008               	return
  1671     05F7                     __end_of_rand:
  1672                           
  1673                           	psect	text4
  1674     0568                     __ptext4:	
  1675 ;; *************** function ___lmul *****************
  1676 ;; Defined at:
  1677 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1680 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  product         4    9[BANK0 ] unsigned long 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  4    0[BANK0 ] unsigned long 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       8       0       0       0
  1693 ;;      Locals:         0       4       0       0       0
  1694 ;;      Temps:          0       1       0       0       0
  1695 ;;      Totals:         0      13       0       0       0
  1696 ;;Total ram usage:       13 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_rand
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706     0568                     ___lmul:	
  1707                           ;psect for function ___lmul
  1708                           
  1709     0568                     l1733:	
  1710                           ;incstack = 0
  1711                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1712                           
  1713     0568  3000               	movlw	0
  1714     0569  1283               	bcf	3,5	;RP0=0, select bank0
  1715     056A  1303               	bcf	3,6	;RP1=0, select bank0
  1716     056B  00AC               	movwf	___lmul@product+3
  1717     056C  3000               	movlw	0
  1718     056D  00AB               	movwf	___lmul@product+2
  1719     056E  3000               	movlw	0
  1720     056F  00AA               	movwf	___lmul@product+1
  1721     0570  3000               	movlw	0
  1722     0571  00A9               	movwf	___lmul@product
  1723     0572                     l1735:
  1724     0572  1C20               	btfss	___lmul@multiplier,0
  1725     0573  2D75               	goto	u1191
  1726     0574  2D76               	goto	u1190
  1727     0575                     u1191:
  1728     0575  2D8D               	goto	l1739
  1729     0576                     u1190:
  1730     0576                     l1737:
  1731     0576  0824               	movf	___lmul@multiplicand,w
  1732     0577  07A9               	addwf	___lmul@product,f
  1733     0578  0825               	movf	___lmul@multiplicand+1,w
  1734     0579  1103               	clrz
  1735     057A  1803               	skipnc
  1736     057B  3E01               	addlw	1
  1737     057C  1903               	skipnz
  1738     057D  2D7F               	goto	u1201
  1739     057E  07AA               	addwf	___lmul@product+1,f
  1740     057F                     u1201:
  1741     057F  0826               	movf	___lmul@multiplicand+2,w
  1742     0580  1103               	clrz
  1743     0581  1803               	skipnc
  1744     0582  3E01               	addlw	1
  1745     0583  1903               	skipnz
  1746     0584  2D86               	goto	u1202
  1747     0585  07AB               	addwf	___lmul@product+2,f
  1748     0586                     u1202:
  1749     0586  0827               	movf	___lmul@multiplicand+3,w
  1750     0587  1103               	clrz
  1751     0588  1803               	skipnc
  1752     0589  3E01               	addlw	1
  1753     058A  1903               	skipnz
  1754     058B  2D8D               	goto	u1203
  1755     058C  07AC               	addwf	___lmul@product+3,f
  1756     058D                     u1203:
  1757     058D                     l1739:
  1758     058D  3001               	movlw	1
  1759     058E  00A8               	movwf	??___lmul
  1760     058F                     u1215:
  1761     058F  1003               	clrc
  1762     0590  0DA4               	rlf	___lmul@multiplicand,f
  1763     0591  0DA5               	rlf	___lmul@multiplicand+1,f
  1764     0592  0DA6               	rlf	___lmul@multiplicand+2,f
  1765     0593  0DA7               	rlf	___lmul@multiplicand+3,f
  1766     0594  0BA8               	decfsz	??___lmul,f
  1767     0595  2D8F               	goto	u1215
  1768     0596                     l1741:
  1769     0596  3001               	movlw	1
  1770     0597                     u1225:
  1771     0597  1003               	clrc
  1772     0598  0CA3               	rrf	___lmul@multiplier+3,f
  1773     0599  0CA2               	rrf	___lmul@multiplier+2,f
  1774     059A  0CA1               	rrf	___lmul@multiplier+1,f
  1775     059B  0CA0               	rrf	___lmul@multiplier,f
  1776     059C  3EFF               	addlw	-1
  1777     059D  1D03               	skipz
  1778     059E  2D97               	goto	u1225
  1779     059F  0823               	movf	___lmul@multiplier+3,w
  1780     05A0  0422               	iorwf	___lmul@multiplier+2,w
  1781     05A1  0421               	iorwf	___lmul@multiplier+1,w
  1782     05A2  0420               	iorwf	___lmul@multiplier,w
  1783     05A3  1D03               	skipz
  1784     05A4  2DA6               	goto	u1231
  1785     05A5  2DA7               	goto	u1230
  1786     05A6                     u1231:
  1787     05A6  2D72               	goto	l1735
  1788     05A7                     u1230:
  1789     05A7                     l1743:
  1790     05A7  082C               	movf	___lmul@product+3,w
  1791     05A8  00A3               	movwf	?___lmul+3
  1792     05A9  082B               	movf	___lmul@product+2,w
  1793     05AA  00A2               	movwf	?___lmul+2
  1794     05AB  082A               	movf	___lmul@product+1,w
  1795     05AC  00A1               	movwf	?___lmul+1
  1796     05AD  0829               	movf	___lmul@product,w
  1797     05AE  00A0               	movwf	?___lmul
  1798     05AF                     l283:
  1799     05AF  0008               	return
  1800     05B0                     __end_of___lmul:
  1801                           
  1802                           	psect	text5
  1803     0517                     __ptext5:	
  1804 ;; *************** function _parseData *****************
  1805 ;; Defined at:
  1806 ;;		line 447 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  data            1    wreg     PTR unsigned char 
  1809 ;;		 -> dato(50), 
  1810 ;;  dataParsed      1    0[BANK0 ] PTR unsigned char 
  1811 ;;		 -> dataParsed(50), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  data            1    8[BANK0 ] PTR unsigned char 
  1814 ;;		 -> dato(50), 
  1815 ;;  i               2    6[BANK0 ] int 
  1816 ;;  j               2    4[BANK0 ] int 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       1       0       0       0
  1827 ;;      Locals:         0       5       0       0       0
  1828 ;;      Temps:          0       3       0       0       0
  1829 ;;      Totals:         0       9       0       0       0
  1830 ;;Total ram usage:        9 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     0517                     _parseData:	
  1841                           ;psect for function _parseData
  1842                           
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _parseData: [wreg-fsr0h+status,2+status,0]
  1846                           ;parseData@data stored from wreg
  1847     0517  1283               	bcf	3,5	;RP0=0, select bank0
  1848     0518  1303               	bcf	3,6	;RP1=0, select bank0
  1849     0519  00A8               	movwf	parseData@data
  1850     051A                     l2009:
  1851                           
  1852                           ;main.c: 447: void parseData(char data[], char dataParsed[]);main.c: 448: {;main.c: 449:
      +                               int i = 0;
  1853     051A  01A6               	clrf	parseData@i
  1854     051B  01A7               	clrf	parseData@i+1
  1855                           
  1856                           ;main.c: 450:     int j = 0;
  1857     051C  01A4               	clrf	parseData@j
  1858     051D  01A5               	clrf	parseData@j+1
  1859                           
  1860                           ;main.c: 452:     while(data[i] != '\0')
  1861     051E  2D50               	goto	l169
  1862     051F                     l2011:
  1863                           
  1864                           ;main.c: 453:     {;main.c: 454:         if(data[i] >= 48 && data[i] <= 57)
  1865     051F  0826               	movf	parseData@i,w
  1866     0520  0728               	addwf	parseData@data,w
  1867     0521  00A1               	movwf	??_parseData
  1868     0522  0821               	movf	??_parseData,w
  1869     0523  0084               	movwf	4
  1870     0524  3030               	movlw	48
  1871     0525  0200               	subwf	0,w
  1872     0526  1C03               	skipc
  1873     0527  2D29               	goto	u1561
  1874     0528  2D2A               	goto	u1560
  1875     0529                     u1561:
  1876     0529  2D4A               	goto	l2019
  1877     052A                     u1560:
  1878     052A                     l2013:
  1879     052A  0826               	movf	parseData@i,w
  1880     052B  0728               	addwf	parseData@data,w
  1881     052C  00A1               	movwf	??_parseData
  1882     052D  0821               	movf	??_parseData,w
  1883     052E  0084               	movwf	4
  1884     052F  303A               	movlw	58
  1885     0530  0200               	subwf	0,w
  1886     0531  1803               	skipnc
  1887     0532  2D34               	goto	u1571
  1888     0533  2D35               	goto	u1570
  1889     0534                     u1571:
  1890     0534  2D4A               	goto	l2019
  1891     0535                     u1570:
  1892     0535                     l2015:
  1893                           
  1894                           ;main.c: 455:         {;main.c: 456:             dataParsed[j] = data[i];
  1895     0535  0826               	movf	parseData@i,w
  1896     0536  0728               	addwf	parseData@data,w
  1897     0537  00A1               	movwf	??_parseData
  1898     0538  0821               	movf	??_parseData,w
  1899     0539  0084               	movwf	4
  1900     053A  0800               	movf	0,w
  1901     053B  00A2               	movwf	??_parseData+1
  1902     053C  0824               	movf	parseData@j,w
  1903     053D  0720               	addwf	parseData@dataParsed,w
  1904     053E  00A3               	movwf	??_parseData+2
  1905     053F  0823               	movf	??_parseData+2,w
  1906     0540  0084               	movwf	4
  1907     0541  0822               	movf	??_parseData+1,w
  1908     0542  1783               	bsf	3,7	;select IRP bank2
  1909     0543  0080               	movwf	0
  1910     0544                     l2017:
  1911                           
  1912                           ;main.c: 457:             j++;
  1913     0544  3001               	movlw	1
  1914     0545  07A4               	addwf	parseData@j,f
  1915     0546  1803               	skipnc
  1916     0547  0AA5               	incf	parseData@j+1,f
  1917     0548  3000               	movlw	0
  1918     0549  07A5               	addwf	parseData@j+1,f
  1919     054A                     l2019:
  1920                           
  1921                           ;main.c: 460:         i++;
  1922     054A  3001               	movlw	1
  1923     054B  07A6               	addwf	parseData@i,f
  1924     054C  1803               	skipnc
  1925     054D  0AA7               	incf	parseData@i+1,f
  1926     054E  3000               	movlw	0
  1927     054F  07A7               	addwf	parseData@i+1,f
  1928     0550                     l169:	
  1929                           ;main.c: 461:     }
  1930                           
  1931                           
  1932                           ;main.c: 452:     while(data[i] != '\0')
  1933     0550  0826               	movf	parseData@i,w
  1934     0551  0728               	addwf	parseData@data,w
  1935     0552  00A1               	movwf	??_parseData
  1936     0553  0821               	movf	??_parseData,w
  1937     0554  0084               	movwf	4
  1938     0555  1383               	bcf	3,7	;select IRP bank0
  1939     0556  0800               	movf	0,w
  1940     0557  1D03               	btfss	3,2
  1941     0558  2D5A               	goto	u1581
  1942     0559  2D5B               	goto	u1580
  1943     055A                     u1581:
  1944     055A  2D1F               	goto	l2011
  1945     055B                     u1580:
  1946     055B                     l2021:
  1947                           
  1948                           ;main.c: 463:     j++;
  1949     055B  3001               	movlw	1
  1950     055C  07A4               	addwf	parseData@j,f
  1951     055D  1803               	skipnc
  1952     055E  0AA5               	incf	parseData@j+1,f
  1953     055F  3000               	movlw	0
  1954     0560  07A5               	addwf	parseData@j+1,f
  1955     0561                     l2023:
  1956                           
  1957                           ;main.c: 464:     data[j] = '\0';
  1958     0561  0824               	movf	parseData@j,w
  1959     0562  0728               	addwf	parseData@data,w
  1960     0563  00A1               	movwf	??_parseData
  1961     0564  0821               	movf	??_parseData,w
  1962     0565  0084               	movwf	4
  1963     0566  0180               	clrf	0
  1964     0567                     l173:
  1965     0567  0008               	return
  1966     0568                     __end_of_parseData:
  1967                           
  1968                           	psect	text6
  1969     06BF                     __ptext6:	
  1970 ;; *************** function _lcd_str *****************
  1971 ;; Defined at:
  1972 ;;		line 350 in file "main.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  str             2    3[BANK0 ] PTR const unsigned char 
  1975 ;;		 -> random_string@str(8), STR_5(11), buff(2), dataParsed(50), 
  1976 ;;		 -> STR_4(12), STR_2(6), STR_1(11), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  i               1    6[BANK0 ] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       2       0       0       0
  1989 ;;      Locals:         0       1       0       0       0
  1990 ;;      Temps:          0       1       0       0       0
  1991 ;;      Totals:         0       4       0       0       0
  1992 ;;Total ram usage:        4 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 2
  1995 ;; This function calls:
  1996 ;;		_lcd_dat
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002     06BF                     _lcd_str:	
  2003                           ;psect for function _lcd_str
  2004                           
  2005     06BF                     l1969:	
  2006                           ;incstack = 0
  2007                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2008                           
  2009                           
  2010                           ;main.c: 350: void lcd_str(const char* str);main.c: 351: {;main.c: 352:     unsigned cha
      +                          r i = 0;
  2011     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2012     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2013     06C1  01A6               	clrf	lcd_str@i
  2014                           
  2015                           ;main.c: 354:     while (str[i] != 0)
  2016     06C2  2EDA               	goto	l1975
  2017     06C3                     l1971:
  2018                           
  2019                           ;main.c: 355:     {;main.c: 356:         lcd_dat(str[i]);
  2020     06C3  0826               	movf	lcd_str@i,w
  2021     06C4  0723               	addwf	lcd_str@str,w
  2022     06C5  0084               	movwf	4
  2023     06C6  0824               	movf	lcd_str@str+1,w
  2024     06C7  1803               	skipnc
  2025     06C8  0A24               	incf	lcd_str@str+1,w
  2026     06C9  00FF               	movwf	btemp+1
  2027     06CA  120A  118A  2300  120A  118A  	fcall	stringtab
  2028     06CF  120A  118A  276A  120A  118A  	fcall	_lcd_dat
  2029     06D4                     l1973:
  2030                           
  2031                           ;main.c: 357:         i++;
  2032     06D4  3001               	movlw	1
  2033     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2034     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2035     06D7  00A5               	movwf	??_lcd_str
  2036     06D8  0825               	movf	??_lcd_str,w
  2037     06D9  07A6               	addwf	lcd_str@i,f
  2038     06DA                     l1975:
  2039                           
  2040                           ;main.c: 354:     while (str[i] != 0)
  2041     06DA  0826               	movf	lcd_str@i,w
  2042     06DB  0723               	addwf	lcd_str@str,w
  2043     06DC  0084               	movwf	4
  2044     06DD  0824               	movf	lcd_str@str+1,w
  2045     06DE  1803               	skipnc
  2046     06DF  0A24               	incf	lcd_str@str+1,w
  2047     06E0  00FF               	movwf	btemp+1
  2048     06E1  120A  118A  2300  120A  118A  	fcall	stringtab
  2049     06E6  3A00               	xorlw	0
  2050     06E7  1D03               	skipz
  2051     06E8  2EEA               	goto	u1531
  2052     06E9  2EEB               	goto	u1530
  2053     06EA                     u1531:
  2054     06EA  2EC3               	goto	l1971
  2055     06EB                     u1530:
  2056     06EB                     l136:
  2057     06EB  0008               	return
  2058     06EC                     __end_of_lcd_str:
  2059                           
  2060                           	psect	text7
  2061     076A                     __ptext7:	
  2062 ;; *************** function _lcd_dat *****************
  2063 ;; Defined at:
  2064 ;;		line 303 in file "main.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  val             1    wreg     unsigned char 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  val             1    2[BANK0 ] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       0       0       0
  2079 ;;      Locals:         0       1       0       0       0
  2080 ;;      Temps:          0       2       0       0       0
  2081 ;;      Totals:         0       3       0       0       0
  2082 ;;Total ram usage:        3 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 1
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_lcd_str
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092     076A                     _lcd_dat:	
  2093                           ;psect for function _lcd_dat
  2094                           
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _lcd_dat: [wreg]
  2098                           ;lcd_dat@val stored from wreg
  2099     076A  1283               	bcf	3,5	;RP0=0, select bank0
  2100     076B  1303               	bcf	3,6	;RP1=0, select bank0
  2101     076C  00A2               	movwf	lcd_dat@val
  2102     076D                     l1795:
  2103                           
  2104                           ;main.c: 303: void lcd_dat(unsigned char val);main.c: 304: {;main.c: 305:     PORTEbits.
      +                          RE1 = 1;
  2105     076D  1489               	bsf	9,1	;volatile
  2106     076E                     l1797:
  2107                           
  2108                           ;main.c: 307:     PORTD = val;
  2109     076E  0822               	movf	lcd_dat@val,w
  2110     076F  0088               	movwf	8	;volatile
  2111     0770                     l1799:
  2112                           
  2113                           ;main.c: 308:     PORTEbits.RE2 = 1;
  2114     0770  1509               	bsf	9,2	;volatile
  2115                           
  2116                           ;main.c: 309:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2117     0771  3014               	movlw	20
  2118     0772  1283               	bcf	3,5	;RP0=0, select bank0
  2119     0773  1303               	bcf	3,6	;RP1=0, select bank0
  2120     0774  00A1               	movwf	??_lcd_dat+1
  2121     0775  3079               	movlw	121
  2122     0776  00A0               	movwf	??_lcd_dat
  2123     0777                     u1757:
  2124     0777  0BA0               	decfsz	??_lcd_dat,f
  2125     0778  2F77               	goto	u1757
  2126     0779  0BA1               	decfsz	??_lcd_dat+1,f
  2127     077A  2F77               	goto	u1757
  2128     077B                     l1801:
  2129                           
  2130                           ;main.c: 310:     PORTEbits.RE1 = 0;
  2131     077B  1283               	bcf	3,5	;RP0=0, select bank0
  2132     077C  1303               	bcf	3,6	;RP1=0, select bank0
  2133     077D  1089               	bcf	9,1	;volatile
  2134                           
  2135                           ;main.c: 311:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2136     077E  3014               	movlw	20
  2137     077F  1283               	bcf	3,5	;RP0=0, select bank0
  2138     0780  1303               	bcf	3,6	;RP1=0, select bank0
  2139     0781  00A1               	movwf	??_lcd_dat+1
  2140     0782  3079               	movlw	121
  2141     0783  00A0               	movwf	??_lcd_dat
  2142     0784                     u1767:
  2143     0784  0BA0               	decfsz	??_lcd_dat,f
  2144     0785  2F84               	goto	u1767
  2145     0786  0BA1               	decfsz	??_lcd_dat+1,f
  2146     0787  2F84               	goto	u1767
  2147     0788                     l1803:
  2148                           
  2149                           ;main.c: 313:     PORTEbits.RE1 = 1;
  2150     0788  1283               	bcf	3,5	;RP0=0, select bank0
  2151     0789  1303               	bcf	3,6	;RP1=0, select bank0
  2152     078A  1489               	bsf	9,1	;volatile
  2153     078B                     l124:
  2154     078B  0008               	return
  2155     078C                     __end_of_lcd_dat:
  2156                           
  2157                           	psect	text8
  2158     06EC                     __ptext8:	
  2159 ;; *************** function _lcd_send *****************
  2160 ;; Defined at:
  2161 ;;		line 362 in file "main.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  dato            1    wreg     unsigned char 
  2164 ;;  tipo            1    0[BANK0 ] unsigned char 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  dato            1    3[BANK0 ] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         0       1       0       0       0
  2177 ;;      Locals:         0       1       0       0       0
  2178 ;;      Temps:          0       2       0       0       0
  2179 ;;      Totals:         0       4       0       0       0
  2180 ;;Total ram usage:        4 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190     06EC                     _lcd_send:	
  2191                           ;psect for function _lcd_send
  2192                           
  2193                           
  2194                           ;incstack = 0
  2195                           ; Regs used in _lcd_send: [wreg+status,2+status,0]
  2196                           ;lcd_send@dato stored from wreg
  2197     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2198     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2199     06EE  00A3               	movwf	lcd_send@dato
  2200     06EF                     l1949:
  2201                           
  2202                           ;main.c: 362: void lcd_send(char dato, char tipo);main.c: 363: {;main.c: 366:     TRISD 
      +                          = 0x00;
  2203     06EF  1683               	bsf	3,5	;RP0=1, select bank1
  2204     06F0  1303               	bcf	3,6	;RP1=0, select bank1
  2205     06F1  0188               	clrf	8	;volatile
  2206     06F2                     l1951:
  2207                           
  2208                           ;main.c: 367:     TRISEbits.TRISE1 = 0;
  2209     06F2  1089               	bcf	9,1	;volatile
  2210     06F3                     l1953:
  2211                           
  2212                           ;main.c: 368:     TRISEbits.TRISE2 = 0;
  2213     06F3  1109               	bcf	9,2	;volatile
  2214     06F4                     l1955:
  2215                           
  2216                           ;main.c: 370:     PORTEbits.RE1 = 1;
  2217     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2218     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2219     06F6  1489               	bsf	9,1	;volatile
  2220     06F7                     l1957:
  2221                           
  2222                           ;main.c: 371:     PORTD = dato;
  2223     06F7  0823               	movf	lcd_send@dato,w
  2224     06F8  0088               	movwf	8	;volatile
  2225     06F9                     l1959:
  2226                           
  2227                           ;main.c: 372:     PORTEbits.RE2 = tipo;
  2228     06F9  0C20               	rrf	lcd_send@tipo,w
  2229     06FA  1C03               	skipc
  2230     06FB  1109               	bcf	9,2	;volatile
  2231     06FC  1803               	skipnc
  2232     06FD  1509               	bsf	9,2	;volatile
  2233     06FE                     l1961:
  2234                           
  2235                           ;main.c: 373:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2236     06FE  3014               	movlw	20
  2237     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2238     0700  1303               	bcf	3,6	;RP1=0, select bank0
  2239     0701  00A2               	movwf	??_lcd_send+1
  2240     0702  3079               	movlw	121
  2241     0703  00A1               	movwf	??_lcd_send
  2242     0704                     u1777:
  2243     0704  0BA1               	decfsz	??_lcd_send,f
  2244     0705  2F04               	goto	u1777
  2245     0706  0BA2               	decfsz	??_lcd_send+1,f
  2246     0707  2F04               	goto	u1777
  2247     0708                     l1963:
  2248                           
  2249                           ;main.c: 374:     PORTEbits.RE1 = 0;
  2250     0708  1283               	bcf	3,5	;RP0=0, select bank0
  2251     0709  1303               	bcf	3,6	;RP1=0, select bank0
  2252     070A  1089               	bcf	9,1	;volatile
  2253     070B                     l1965:
  2254                           
  2255                           ;main.c: 375:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2256     070B  3014               	movlw	20
  2257     070C  1283               	bcf	3,5	;RP0=0, select bank0
  2258     070D  1303               	bcf	3,6	;RP1=0, select bank0
  2259     070E  00A2               	movwf	??_lcd_send+1
  2260     070F  3079               	movlw	121
  2261     0710  00A1               	movwf	??_lcd_send
  2262     0711                     u1787:
  2263     0711  0BA1               	decfsz	??_lcd_send,f
  2264     0712  2F11               	goto	u1787
  2265     0713  0BA2               	decfsz	??_lcd_send+1,f
  2266     0714  2F11               	goto	u1787
  2267     0715                     l1967:
  2268                           
  2269                           ;main.c: 376:     PORTEbits.RE1 = 1;
  2270     0715  1283               	bcf	3,5	;RP0=0, select bank0
  2271     0716  1303               	bcf	3,6	;RP1=0, select bank0
  2272     0717  1489               	bsf	9,1	;volatile
  2273     0718                     l139:
  2274     0718  0008               	return
  2275     0719                     __end_of_lcd_send:
  2276                           
  2277                           	psect	text9
  2278     0462                     __ptext9:	
  2279 ;; *************** function _lcd_init *****************
  2280 ;; Defined at:
  2281 ;;		line 329 in file "main.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0       2       0       0       0
  2298 ;;      Totals:         0       2       0       0       0
  2299 ;;Total ram usage:        2 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 2
  2302 ;; This function calls:
  2303 ;;		_lcd_cmd
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309     0462                     _lcd_init:	
  2310                           ;psect for function _lcd_init
  2311                           
  2312     0462                     l1917:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2315                           
  2316                           
  2317                           ;main.c: 331:     TRISD = 0x00;
  2318     0462  1683               	bsf	3,5	;RP0=1, select bank1
  2319     0463  1303               	bcf	3,6	;RP1=0, select bank1
  2320     0464  0188               	clrf	8	;volatile
  2321                           
  2322                           ;main.c: 332:     TRISE = 0x00;
  2323     0465  0189               	clrf	9	;volatile
  2324     0466                     l1919:
  2325                           
  2326                           ;main.c: 333:     PORTEbits.RE1 = 0;
  2327     0466  1283               	bcf	3,5	;RP0=0, select bank0
  2328     0467  1303               	bcf	3,6	;RP1=0, select bank0
  2329     0468  1089               	bcf	9,1	;volatile
  2330     0469                     l1921:
  2331                           
  2332                           ;main.c: 334:     PORTEbits.RE2 = 0;
  2333     0469  1109               	bcf	9,2	;volatile
  2334     046A                     l1923:
  2335                           
  2336                           ;main.c: 335:     _delay((unsigned long)((20)*(20000000/4000.0)));
  2337     046A  3082               	movlw	130
  2338     046B  1283               	bcf	3,5	;RP0=0, select bank0
  2339     046C  1303               	bcf	3,6	;RP1=0, select bank0
  2340     046D  00A4               	movwf	??_lcd_init+1
  2341     046E  30DD               	movlw	221
  2342     046F  00A3               	movwf	??_lcd_init
  2343     0470                     u1797:
  2344     0470  0BA3               	decfsz	??_lcd_init,f
  2345     0471  2C70               	goto	u1797
  2346     0472  0BA4               	decfsz	??_lcd_init+1,f
  2347     0473  2C70               	goto	u1797
  2348     0474                     l1925:
  2349                           
  2350                           ;main.c: 336:     PORTEbits.RE1 = 1;
  2351     0474  1283               	bcf	3,5	;RP0=0, select bank0
  2352     0475  1303               	bcf	3,6	;RP1=0, select bank0
  2353     0476  1489               	bsf	9,1	;volatile
  2354     0477                     l1927:
  2355                           
  2356                           ;main.c: 338:     lcd_cmd(0x38);
  2357     0477  3038               	movlw	56
  2358     0478  120A  118A  278C  120A  118A  	fcall	_lcd_cmd
  2359     047D                     l1929:
  2360                           
  2361                           ;main.c: 339:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2362     047D  3021               	movlw	33
  2363     047E  1283               	bcf	3,5	;RP0=0, select bank0
  2364     047F  1303               	bcf	3,6	;RP1=0, select bank0
  2365     0480  00A4               	movwf	??_lcd_init+1
  2366     0481  3075               	movlw	117
  2367     0482  00A3               	movwf	??_lcd_init
  2368     0483                     u1807:
  2369     0483  0BA3               	decfsz	??_lcd_init,f
  2370     0484  2C83               	goto	u1807
  2371     0485  0BA4               	decfsz	??_lcd_init+1,f
  2372     0486  2C83               	goto	u1807
  2373     0487  2C88               	nop2
  2374     0488                     l1931:
  2375                           
  2376                           ;main.c: 340:     lcd_cmd(0x38);
  2377     0488  3038               	movlw	56
  2378     0489  120A  118A  278C  120A  118A  	fcall	_lcd_cmd
  2379     048E                     l1933:
  2380                           
  2381                           ;main.c: 341:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2382     048E  3007               	movlw	7
  2383     048F  1283               	bcf	3,5	;RP0=0, select bank0
  2384     0490  1303               	bcf	3,6	;RP1=0, select bank0
  2385     0491  00A4               	movwf	??_lcd_init+1
  2386     0492  307C               	movlw	124
  2387     0493  00A3               	movwf	??_lcd_init
  2388     0494                     u1817:
  2389     0494  0BA3               	decfsz	??_lcd_init,f
  2390     0495  2C94               	goto	u1817
  2391     0496  0BA4               	decfsz	??_lcd_init+1,f
  2392     0497  2C94               	goto	u1817
  2393     0498  0000               	nop
  2394     0499                     l1935:
  2395                           
  2396                           ;main.c: 342:     lcd_cmd(0x38);
  2397     0499  3038               	movlw	56
  2398     049A  120A  118A  278C  120A  118A  	fcall	_lcd_cmd
  2399     049F                     l1937:
  2400                           
  2401                           ;main.c: 343:     lcd_cmd(0x08);
  2402     049F  3008               	movlw	8
  2403     04A0  120A  118A  278C  120A  118A  	fcall	_lcd_cmd
  2404     04A5                     l1939:
  2405                           
  2406                           ;main.c: 344:     lcd_cmd(0x0F);
  2407     04A5  300F               	movlw	15
  2408     04A6  120A  118A  278C  120A  118A  	fcall	_lcd_cmd
  2409     04AB                     l1941:
  2410                           
  2411                           ;main.c: 345:     lcd_cmd(0x01);
  2412     04AB  3001               	movlw	1
  2413     04AC  120A  118A  278C  120A  118A  	fcall	_lcd_cmd
  2414     04B1                     l1943:
  2415                           
  2416                           ;main.c: 346:     lcd_cmd(0b00001100);
  2417     04B1  300C               	movlw	12
  2418     04B2  120A  118A  278C  120A  118A  	fcall	_lcd_cmd
  2419     04B7                     l1945:
  2420                           
  2421                           ;main.c: 347:     lcd_cmd(0x80);
  2422     04B7  3080               	movlw	128
  2423     04B8  120A  118A  278C  120A  118A  	fcall	_lcd_cmd
  2424     04BD                     l130:
  2425     04BD  0008               	return
  2426     04BE                     __end_of_lcd_init:
  2427                           
  2428                           	psect	text10
  2429     078C                     __ptext10:	
  2430 ;; *************** function _lcd_cmd *****************
  2431 ;; Defined at:
  2432 ;;		line 316 in file "main.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  val             1    wreg     unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  val             1    2[BANK0 ] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       0       0       0       0
  2447 ;;      Locals:         0       1       0       0       0
  2448 ;;      Temps:          0       2       0       0       0
  2449 ;;      Totals:         0       3       0       0       0
  2450 ;;Total ram usage:        3 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_lcd_init
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460     078C                     _lcd_cmd:	
  2461                           ;psect for function _lcd_cmd
  2462                           
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in _lcd_cmd: [wreg]
  2466                           ;lcd_cmd@val stored from wreg
  2467     078C  1283               	bcf	3,5	;RP0=0, select bank0
  2468     078D  1303               	bcf	3,6	;RP1=0, select bank0
  2469     078E  00A2               	movwf	lcd_cmd@val
  2470     078F                     l1805:
  2471                           
  2472                           ;main.c: 316: void lcd_cmd(unsigned char val);main.c: 317: {;main.c: 318:     PORTEbits.
      +                          RE1 = 1;
  2473     078F  1489               	bsf	9,1	;volatile
  2474     0790                     l1807:
  2475                           
  2476                           ;main.c: 320:     PORTD = val;
  2477     0790  0822               	movf	lcd_cmd@val,w
  2478     0791  0088               	movwf	8	;volatile
  2479     0792                     l1809:
  2480                           
  2481                           ;main.c: 321:     PORTEbits.RE2 = 0;
  2482     0792  1109               	bcf	9,2	;volatile
  2483                           
  2484                           ;main.c: 322:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2485     0793  3014               	movlw	20
  2486     0794  1283               	bcf	3,5	;RP0=0, select bank0
  2487     0795  1303               	bcf	3,6	;RP1=0, select bank0
  2488     0796  00A1               	movwf	??_lcd_cmd+1
  2489     0797  3079               	movlw	121
  2490     0798  00A0               	movwf	??_lcd_cmd
  2491     0799                     u1827:
  2492     0799  0BA0               	decfsz	??_lcd_cmd,f
  2493     079A  2F99               	goto	u1827
  2494     079B  0BA1               	decfsz	??_lcd_cmd+1,f
  2495     079C  2F99               	goto	u1827
  2496     079D                     l1811:
  2497                           
  2498                           ;main.c: 323:     PORTEbits.RE1 = 0;
  2499     079D  1283               	bcf	3,5	;RP0=0, select bank0
  2500     079E  1303               	bcf	3,6	;RP1=0, select bank0
  2501     079F  1089               	bcf	9,1	;volatile
  2502                           
  2503                           ;main.c: 324:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2504     07A0  3014               	movlw	20
  2505     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  2506     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  2507     07A3  00A1               	movwf	??_lcd_cmd+1
  2508     07A4  3079               	movlw	121
  2509     07A5  00A0               	movwf	??_lcd_cmd
  2510     07A6                     u1837:
  2511     07A6  0BA0               	decfsz	??_lcd_cmd,f
  2512     07A7  2FA6               	goto	u1837
  2513     07A8  0BA1               	decfsz	??_lcd_cmd+1,f
  2514     07A9  2FA6               	goto	u1837
  2515     07AA                     l1813:
  2516                           
  2517                           ;main.c: 326:     PORTEbits.RE1 = 1;
  2518     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  2519     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  2520     07AC  1489               	bsf	9,1	;volatile
  2521     07AD                     l127:
  2522     07AD  0008               	return
  2523     07AE                     __end_of_lcd_cmd:
  2524                           
  2525                           	psect	text11
  2526     0746                     __ptext11:	
  2527 ;; *************** function _itoa *****************
  2528 ;; Defined at:
  2529 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  buf             1    wreg     PTR unsigned char 
  2532 ;;		 -> buff(2), 
  2533 ;;  val             2   35[BANK0 ] int 
  2534 ;;  base            2   37[BANK0 ] int 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  buf             1   40[BANK0 ] PTR unsigned char 
  2537 ;;		 -> buff(2), 
  2538 ;;  cp              1    0        PTR unsigned char 
  2539 ;;		 -> buff(2), 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      PTR unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       4       0       0       0
  2550 ;;      Locals:         0       1       0       0       0
  2551 ;;      Temps:          0       1       0       0       0
  2552 ;;      Totals:         0       6       0       0       0
  2553 ;;Total ram usage:        6 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 3
  2556 ;; This function calls:
  2557 ;;		_utoa
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563     0746                     _itoa:	
  2564                           ;psect for function _itoa
  2565                           
  2566                           
  2567                           ;incstack = 0
  2568                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2569                           ;itoa@buf stored from wreg
  2570     0746  1283               	bcf	3,5	;RP0=0, select bank0
  2571     0747  1303               	bcf	3,6	;RP1=0, select bank0
  2572     0748  00C8               	movwf	itoa@buf
  2573     0749                     l2027:
  2574     0749                     l2029:
  2575     0749  1FC4               	btfss	itoa@val+1,7
  2576     074A  2F4C               	goto	u1591
  2577     074B  2F4D               	goto	u1590
  2578     074C                     u1591:
  2579     074C  2F5B               	goto	l2037
  2580     074D                     u1590:
  2581     074D                     l2031:
  2582     074D  0848               	movf	itoa@buf,w
  2583     074E  0084               	movwf	4
  2584     074F  302D               	movlw	45
  2585     0750  1383               	bcf	3,7	;select IRP bank0
  2586     0751  0080               	movwf	0
  2587     0752                     l2033:
  2588     0752  3001               	movlw	1
  2589     0753  00C7               	movwf	??_itoa
  2590     0754  0847               	movf	??_itoa,w
  2591     0755  07C8               	addwf	itoa@buf,f
  2592     0756                     l2035:
  2593     0756  09C3               	comf	itoa@val,f
  2594     0757  09C4               	comf	itoa@val+1,f
  2595     0758  0AC3               	incf	itoa@val,f
  2596     0759  1903               	skipnz
  2597     075A  0AC4               	incf	itoa@val+1,f
  2598     075B                     l2037:
  2599     075B  0844               	movf	itoa@val+1,w
  2600     075C  00BB               	movwf	utoa@val+1
  2601     075D  0843               	movf	itoa@val,w
  2602     075E  00BA               	movwf	utoa@val
  2603     075F  0846               	movf	itoa@base+1,w
  2604     0760  00BD               	movwf	utoa@base+1
  2605     0761  0845               	movf	itoa@base,w
  2606     0762  00BC               	movwf	utoa@base
  2607     0763  0848               	movf	itoa@buf,w
  2608     0764  120A  118A  2387  120A  118A  	fcall	_utoa
  2609     0769                     l723:
  2610     0769  0008               	return
  2611     076A                     __end_of_itoa:
  2612                           
  2613                           	psect	text12
  2614     0387                     __ptext12:	
  2615 ;; *************** function _utoa *****************
  2616 ;; Defined at:
  2617 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  buf             1    wreg     PTR unsigned char 
  2620 ;;		 -> buff(2), 
  2621 ;;  val             2   26[BANK0 ] unsigned int 
  2622 ;;  base            2   28[BANK0 ] int 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  buf             1   34[BANK0 ] PTR unsigned char 
  2625 ;;		 -> buff(2), 
  2626 ;;  v               2   31[BANK0 ] unsigned int 
  2627 ;;  c               1   33[BANK0 ] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      PTR unsigned char 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       4       0       0       0
  2638 ;;      Locals:         0       4       0       0       0
  2639 ;;      Temps:          0       1       0       0       0
  2640 ;;      Totals:         0       9       0       0       0
  2641 ;;Total ram usage:        9 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; Hardware stack levels required when called: 2
  2644 ;; This function calls:
  2645 ;;		___lwdiv
  2646 ;;		___lwmod
  2647 ;; This function is called by:
  2648 ;;		_itoa
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652     0387                     _utoa:	
  2653                           ;psect for function _utoa
  2654                           
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2658                           ;utoa@buf stored from wreg
  2659     0387  1283               	bcf	3,5	;RP0=0, select bank0
  2660     0388  1303               	bcf	3,6	;RP1=0, select bank0
  2661     0389  00C2               	movwf	utoa@buf
  2662     038A                     l1871:
  2663     038A  083B               	movf	utoa@val+1,w
  2664     038B  00C0               	movwf	utoa@v+1
  2665     038C  083A               	movf	utoa@val,w
  2666     038D  00BF               	movwf	utoa@v
  2667     038E                     l1873:
  2668     038E  083D               	movf	utoa@base+1,w
  2669     038F  00A1               	movwf	___lwdiv@divisor+1
  2670     0390  083C               	movf	utoa@base,w
  2671     0391  00A0               	movwf	___lwdiv@divisor
  2672     0392  0840               	movf	utoa@v+1,w
  2673     0393  00A3               	movwf	___lwdiv@dividend+1
  2674     0394  083F               	movf	utoa@v,w
  2675     0395  00A2               	movwf	___lwdiv@dividend
  2676     0396  120A  118A  25F7  120A  118A  	fcall	___lwdiv
  2677     039B  1283               	bcf	3,5	;RP0=0, select bank0
  2678     039C  1303               	bcf	3,6	;RP1=0, select bank0
  2679     039D  0821               	movf	?___lwdiv+1,w
  2680     039E  00C0               	movwf	utoa@v+1
  2681     039F  0820               	movf	?___lwdiv,w
  2682     03A0  00BF               	movwf	utoa@v
  2683     03A1                     l1875:
  2684     03A1  3001               	movlw	1
  2685     03A2  00BE               	movwf	??_utoa
  2686     03A3  083E               	movf	??_utoa,w
  2687     03A4  07C2               	addwf	utoa@buf,f
  2688     03A5                     l1877:
  2689     03A5  083F               	movf	utoa@v,w
  2690     03A6  0440               	iorwf	utoa@v+1,w
  2691     03A7  1D03               	btfss	3,2
  2692     03A8  2BAA               	goto	u1491
  2693     03A9  2BAB               	goto	u1490
  2694     03AA                     u1491:
  2695     03AA  2B8E               	goto	l1873
  2696     03AB                     u1490:
  2697     03AB                     l1879:
  2698     03AB  0842               	movf	utoa@buf,w
  2699     03AC  0084               	movwf	4
  2700     03AD  1383               	bcf	3,7	;select IRP bank0
  2701     03AE  0180               	clrf	0
  2702     03AF                     l1881:
  2703     03AF  3001               	movlw	1
  2704     03B0  02C2               	subwf	utoa@buf,f
  2705     03B1                     l1883:
  2706     03B1  083D               	movf	utoa@base+1,w
  2707     03B2  00B5               	movwf	___lwmod@divisor+1
  2708     03B3  083C               	movf	utoa@base,w
  2709     03B4  00B4               	movwf	___lwmod@divisor
  2710     03B5  083B               	movf	utoa@val+1,w
  2711     03B6  00B7               	movwf	___lwmod@dividend+1
  2712     03B7  083A               	movf	utoa@val,w
  2713     03B8  00B6               	movwf	___lwmod@dividend
  2714     03B9  120A  118A  2683  120A  118A  	fcall	___lwmod
  2715     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2716     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2717     03C0  0834               	movf	?___lwmod,w
  2718     03C1  00C1               	movwf	utoa@c
  2719     03C2                     l1885:
  2720     03C2  083D               	movf	utoa@base+1,w
  2721     03C3  00A1               	movwf	___lwdiv@divisor+1
  2722     03C4  083C               	movf	utoa@base,w
  2723     03C5  00A0               	movwf	___lwdiv@divisor
  2724     03C6  083B               	movf	utoa@val+1,w
  2725     03C7  00A3               	movwf	___lwdiv@dividend+1
  2726     03C8  083A               	movf	utoa@val,w
  2727     03C9  00A2               	movwf	___lwdiv@dividend
  2728     03CA  120A  118A  25F7  120A  118A  	fcall	___lwdiv
  2729     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2730     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2731     03D1  0821               	movf	?___lwdiv+1,w
  2732     03D2  00BB               	movwf	utoa@val+1
  2733     03D3  0820               	movf	?___lwdiv,w
  2734     03D4  00BA               	movwf	utoa@val
  2735     03D5                     l1887:
  2736     03D5  300A               	movlw	10
  2737     03D6  0241               	subwf	utoa@c,w
  2738     03D7  1C03               	skipc
  2739     03D8  2BDA               	goto	u1501
  2740     03D9  2BDB               	goto	u1500
  2741     03DA                     u1501:
  2742     03DA  2BDF               	goto	l729
  2743     03DB                     u1500:
  2744     03DB                     l1889:
  2745     03DB  3007               	movlw	7
  2746     03DC  00BE               	movwf	??_utoa
  2747     03DD  083E               	movf	??_utoa,w
  2748     03DE  07C1               	addwf	utoa@c,f
  2749     03DF                     l729:
  2750     03DF  3030               	movlw	48
  2751     03E0  00BE               	movwf	??_utoa
  2752     03E1  083E               	movf	??_utoa,w
  2753     03E2  07C1               	addwf	utoa@c,f
  2754     03E3                     l1891:
  2755     03E3  0842               	movf	utoa@buf,w
  2756     03E4  0084               	movwf	4
  2757     03E5  0841               	movf	utoa@c,w
  2758     03E6  1383               	bcf	3,7	;select IRP bank0
  2759     03E7  0080               	movwf	0
  2760     03E8                     l1893:
  2761     03E8  3001               	movlw	1
  2762     03E9  02C2               	subwf	utoa@buf,f
  2763     03EA                     l1895:
  2764     03EA  083A               	movf	utoa@val,w
  2765     03EB  043B               	iorwf	utoa@val+1,w
  2766     03EC  1D03               	btfss	3,2
  2767     03ED  2BEF               	goto	u1511
  2768     03EE  2BF0               	goto	u1510
  2769     03EF                     u1511:
  2770     03EF  2BB1               	goto	l1883
  2771     03F0                     u1510:
  2772     03F0                     l1897:
  2773                           
  2774                           ;	Return value of _utoa is never used
  2775     03F0  3001               	movlw	1
  2776     03F1  00BE               	movwf	??_utoa
  2777     03F2  083E               	movf	??_utoa,w
  2778     03F3  07C2               	addwf	utoa@buf,f
  2779     03F4                     l731:
  2780     03F4  0008               	return
  2781     03F5                     __end_of_utoa:
  2782                           
  2783                           	psect	text13
  2784     0683                     __ptext13:	
  2785 ;; *************** function ___lwmod *****************
  2786 ;; Defined at:
  2787 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  divisor         2   20[BANK0 ] unsigned int 
  2790 ;;  dividend        2   22[BANK0 ] unsigned int 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  counter         1   25[BANK0 ] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  2   20[BANK0 ] unsigned int 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       4       0       0       0
  2803 ;;      Locals:         0       1       0       0       0
  2804 ;;      Temps:          0       1       0       0       0
  2805 ;;      Totals:         0       6       0       0       0
  2806 ;;Total ram usage:        6 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 1
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_random_string
  2813 ;;		_utoa
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817     0683                     ___lwmod:	
  2818                           ;psect for function ___lwmod
  2819                           
  2820     0683                     l1773:	
  2821                           ;incstack = 0
  2822                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2823                           
  2824     0683  1283               	bcf	3,5	;RP0=0, select bank0
  2825     0684  1303               	bcf	3,6	;RP1=0, select bank0
  2826     0685  0834               	movf	___lwmod@divisor,w
  2827     0686  0435               	iorwf	___lwmod@divisor+1,w
  2828     0687  1903               	btfsc	3,2
  2829     0688  2E8A               	goto	u1311
  2830     0689  2E8B               	goto	u1310
  2831     068A                     u1311:
  2832     068A  2EBA               	goto	l1791
  2833     068B                     u1310:
  2834     068B                     l1775:
  2835     068B  01B9               	clrf	___lwmod@counter
  2836     068C  0AB9               	incf	___lwmod@counter,f
  2837     068D  2E99               	goto	l1781
  2838     068E                     l1777:
  2839     068E  3001               	movlw	1
  2840     068F                     u1325:
  2841     068F  1003               	clrc
  2842     0690  0DB4               	rlf	___lwmod@divisor,f
  2843     0691  0DB5               	rlf	___lwmod@divisor+1,f
  2844     0692  3EFF               	addlw	-1
  2845     0693  1D03               	skipz
  2846     0694  2E8F               	goto	u1325
  2847     0695                     l1779:
  2848     0695  3001               	movlw	1
  2849     0696  00B8               	movwf	??___lwmod
  2850     0697  0838               	movf	??___lwmod,w
  2851     0698  07B9               	addwf	___lwmod@counter,f
  2852     0699                     l1781:
  2853     0699  1FB5               	btfss	___lwmod@divisor+1,7
  2854     069A  2E9C               	goto	u1331
  2855     069B  2E9D               	goto	u1330
  2856     069C                     u1331:
  2857     069C  2E8E               	goto	l1777
  2858     069D                     u1330:
  2859     069D                     l1783:
  2860     069D  0835               	movf	___lwmod@divisor+1,w
  2861     069E  0237               	subwf	___lwmod@dividend+1,w
  2862     069F  1D03               	skipz
  2863     06A0  2EA3               	goto	u1345
  2864     06A1  0834               	movf	___lwmod@divisor,w
  2865     06A2  0236               	subwf	___lwmod@dividend,w
  2866     06A3                     u1345:
  2867     06A3  1C03               	skipc
  2868     06A4  2EA6               	goto	u1341
  2869     06A5  2EA7               	goto	u1340
  2870     06A6                     u1341:
  2871     06A6  2EAD               	goto	l1787
  2872     06A7                     u1340:
  2873     06A7                     l1785:
  2874     06A7  0834               	movf	___lwmod@divisor,w
  2875     06A8  02B6               	subwf	___lwmod@dividend,f
  2876     06A9  0835               	movf	___lwmod@divisor+1,w
  2877     06AA  1C03               	skipc
  2878     06AB  03B7               	decf	___lwmod@dividend+1,f
  2879     06AC  02B7               	subwf	___lwmod@dividend+1,f
  2880     06AD                     l1787:
  2881     06AD  3001               	movlw	1
  2882     06AE                     u1355:
  2883     06AE  1003               	clrc
  2884     06AF  0CB5               	rrf	___lwmod@divisor+1,f
  2885     06B0  0CB4               	rrf	___lwmod@divisor,f
  2886     06B1  3EFF               	addlw	-1
  2887     06B2  1D03               	skipz
  2888     06B3  2EAE               	goto	u1355
  2889     06B4                     l1789:
  2890     06B4  3001               	movlw	1
  2891     06B5  02B9               	subwf	___lwmod@counter,f
  2892     06B6  1D03               	btfss	3,2
  2893     06B7  2EB9               	goto	u1361
  2894     06B8  2EBA               	goto	u1360
  2895     06B9                     u1361:
  2896     06B9  2E9D               	goto	l1783
  2897     06BA                     u1360:
  2898     06BA                     l1791:
  2899     06BA  0837               	movf	___lwmod@dividend+1,w
  2900     06BB  00B5               	movwf	?___lwmod+1
  2901     06BC  0836               	movf	___lwmod@dividend,w
  2902     06BD  00B4               	movwf	?___lwmod
  2903     06BE                     l551:
  2904     06BE  0008               	return
  2905     06BF                     __end_of___lwmod:
  2906                           
  2907                           	psect	text14
  2908     05F7                     __ptext14:	
  2909 ;; *************** function ___lwdiv *****************
  2910 ;; Defined at:
  2911 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  divisor         2    0[BANK0 ] unsigned int 
  2914 ;;  dividend        2    2[BANK0 ] unsigned int 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  quotient        2    6[BANK0 ] unsigned int 
  2917 ;;  counter         1    5[BANK0 ] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  2    0[BANK0 ] unsigned int 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       4       0       0       0
  2928 ;;      Locals:         0       3       0       0       0
  2929 ;;      Temps:          0       1       0       0       0
  2930 ;;      Totals:         0       8       0       0       0
  2931 ;;Total ram usage:        8 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_utoa
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941     05F7                     ___lwdiv:	
  2942                           ;psect for function ___lwdiv
  2943                           
  2944     05F7                     l1747:	
  2945                           ;incstack = 0
  2946                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2947                           
  2948     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2949     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2950     05F9  01A6               	clrf	___lwdiv@quotient
  2951     05FA  01A7               	clrf	___lwdiv@quotient+1
  2952     05FB                     l1749:
  2953     05FB  0820               	movf	___lwdiv@divisor,w
  2954     05FC  0421               	iorwf	___lwdiv@divisor+1,w
  2955     05FD  1903               	btfsc	3,2
  2956     05FE  2E00               	goto	u1241
  2957     05FF  2E01               	goto	u1240
  2958     0600                     u1241:
  2959     0600  2E38               	goto	l1769
  2960     0601                     u1240:
  2961     0601                     l1751:
  2962     0601  01A5               	clrf	___lwdiv@counter
  2963     0602  0AA5               	incf	___lwdiv@counter,f
  2964     0603  2E0F               	goto	l1757
  2965     0604                     l1753:
  2966     0604  3001               	movlw	1
  2967     0605                     u1255:
  2968     0605  1003               	clrc
  2969     0606  0DA0               	rlf	___lwdiv@divisor,f
  2970     0607  0DA1               	rlf	___lwdiv@divisor+1,f
  2971     0608  3EFF               	addlw	-1
  2972     0609  1D03               	skipz
  2973     060A  2E05               	goto	u1255
  2974     060B                     l1755:
  2975     060B  3001               	movlw	1
  2976     060C  00A4               	movwf	??___lwdiv
  2977     060D  0824               	movf	??___lwdiv,w
  2978     060E  07A5               	addwf	___lwdiv@counter,f
  2979     060F                     l1757:
  2980     060F  1FA1               	btfss	___lwdiv@divisor+1,7
  2981     0610  2E12               	goto	u1261
  2982     0611  2E13               	goto	u1260
  2983     0612                     u1261:
  2984     0612  2E04               	goto	l1753
  2985     0613                     u1260:
  2986     0613                     l1759:
  2987     0613  3001               	movlw	1
  2988     0614                     u1275:
  2989     0614  1003               	clrc
  2990     0615  0DA6               	rlf	___lwdiv@quotient,f
  2991     0616  0DA7               	rlf	___lwdiv@quotient+1,f
  2992     0617  3EFF               	addlw	-1
  2993     0618  1D03               	skipz
  2994     0619  2E14               	goto	u1275
  2995     061A  0821               	movf	___lwdiv@divisor+1,w
  2996     061B  0223               	subwf	___lwdiv@dividend+1,w
  2997     061C  1D03               	skipz
  2998     061D  2E20               	goto	u1285
  2999     061E  0820               	movf	___lwdiv@divisor,w
  3000     061F  0222               	subwf	___lwdiv@dividend,w
  3001     0620                     u1285:
  3002     0620  1C03               	skipc
  3003     0621  2E23               	goto	u1281
  3004     0622  2E24               	goto	u1280
  3005     0623                     u1281:
  3006     0623  2E2B               	goto	l1765
  3007     0624                     u1280:
  3008     0624                     l1761:
  3009     0624  0820               	movf	___lwdiv@divisor,w
  3010     0625  02A2               	subwf	___lwdiv@dividend,f
  3011     0626  0821               	movf	___lwdiv@divisor+1,w
  3012     0627  1C03               	skipc
  3013     0628  03A3               	decf	___lwdiv@dividend+1,f
  3014     0629  02A3               	subwf	___lwdiv@dividend+1,f
  3015     062A                     l1763:
  3016     062A  1426               	bsf	___lwdiv@quotient,0
  3017     062B                     l1765:
  3018     062B  3001               	movlw	1
  3019     062C                     u1295:
  3020     062C  1003               	clrc
  3021     062D  0CA1               	rrf	___lwdiv@divisor+1,f
  3022     062E  0CA0               	rrf	___lwdiv@divisor,f
  3023     062F  3EFF               	addlw	-1
  3024     0630  1D03               	skipz
  3025     0631  2E2C               	goto	u1295
  3026     0632                     l1767:
  3027     0632  3001               	movlw	1
  3028     0633  02A5               	subwf	___lwdiv@counter,f
  3029     0634  1D03               	btfss	3,2
  3030     0635  2E37               	goto	u1301
  3031     0636  2E38               	goto	u1300
  3032     0637                     u1301:
  3033     0637  2E13               	goto	l1759
  3034     0638                     u1300:
  3035     0638                     l1769:
  3036     0638  0827               	movf	___lwdiv@quotient+1,w
  3037     0639  00A1               	movwf	?___lwdiv+1
  3038     063A  0826               	movf	___lwdiv@quotient,w
  3039     063B  00A0               	movwf	?___lwdiv
  3040     063C                     l541:
  3041     063C  0008               	return
  3042     063D                     __end_of___lwdiv:
  3043                           
  3044                           	psect	text15
  3045     07AE                     __ptext15:	
  3046 ;; *************** function _initKeyPad *****************
  3047 ;; Defined at:
  3048 ;;		line 381 in file "main.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0
  3064 ;;      Temps:          0       1       0       0       0
  3065 ;;      Totals:         0       1       0       0       0
  3066 ;;Total ram usage:        1 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076     07AE                     _initKeyPad:	
  3077                           ;psect for function _initKeyPad
  3078                           
  3079     07AE                     l1947:	
  3080                           ;incstack = 0
  3081                           ; Regs used in _initKeyPad: [wreg+status,2+status,0]
  3082                           
  3083                           
  3084                           ;main.c: 383:     TRISD |= 0x0f;
  3085     07AE  300F               	movlw	15
  3086     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  3087     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  3088     07B1  00A0               	movwf	??_initKeyPad
  3089     07B2  0820               	movf	??_initKeyPad,w
  3090     07B3  1683               	bsf	3,5	;RP0=1, select bank1
  3091     07B4  1303               	bcf	3,6	;RP1=0, select bank1
  3092     07B5  0488               	iorwf	8,f	;volatile
  3093                           
  3094                           ;main.c: 384:     TRISB &= ~0x07;
  3095     07B6  30F8               	movlw	248
  3096     07B7  1283               	bcf	3,5	;RP0=0, select bank0
  3097     07B8  1303               	bcf	3,6	;RP1=0, select bank0
  3098     07B9  00A0               	movwf	??_initKeyPad
  3099     07BA  0820               	movf	??_initKeyPad,w
  3100     07BB  1683               	bsf	3,5	;RP0=1, select bank1
  3101     07BC  1303               	bcf	3,6	;RP1=0, select bank1
  3102     07BD  0586               	andwf	6,f	;volatile
  3103     07BE                     l142:
  3104     07BE  0008               	return
  3105     07BF                     __end_of_initKeyPad:
  3106                           
  3107                           	psect	text16
  3108     063D                     __ptext16:	
  3109 ;; *************** function _UART_init *****************
  3110 ;; Defined at:
  3111 ;;		line 409 in file "main.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  baudrate        4   15[BANK0 ] long 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3125 ;;      Params:         0       4       0       0       0
  3126 ;;      Locals:         0       0       0       0       0
  3127 ;;      Temps:          0       4       0       0       0
  3128 ;;      Totals:         0       8       0       0       0
  3129 ;;Total ram usage:        8 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 2
  3132 ;; This function calls:
  3133 ;;		___aldiv
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139     063D                     _UART_init:	
  3140                           ;psect for function _UART_init
  3141                           
  3142     063D                     l1901:	
  3143                           ;incstack = 0
  3144                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  3145                           
  3146                           
  3147                           ;main.c: 409: void UART_init(long int baudrate);main.c: 410: {;main.c: 411:     TRISC &=
      +                           ~0x40;
  3148     063D  30BF               	movlw	191
  3149     063E  1283               	bcf	3,5	;RP0=0, select bank0
  3150     063F  1303               	bcf	3,6	;RP1=0, select bank0
  3151     0640  00B3               	movwf	??_UART_init
  3152     0641  0833               	movf	??_UART_init,w
  3153     0642  1683               	bsf	3,5	;RP0=1, select bank1
  3154     0643  1303               	bcf	3,6	;RP1=0, select bank1
  3155     0644  0587               	andwf	7,f	;volatile
  3156     0645                     l1903:
  3157                           
  3158                           ;main.c: 412:     TRISC |= 0x80;
  3159     0645  1787               	bsf	7,7	;volatile
  3160                           
  3161                           ;main.c: 413:     TXSTA |= 0x24;
  3162     0646  3024               	movlw	36
  3163     0647  1283               	bcf	3,5	;RP0=0, select bank0
  3164     0648  1303               	bcf	3,6	;RP1=0, select bank0
  3165     0649  00B3               	movwf	??_UART_init
  3166     064A  0833               	movf	??_UART_init,w
  3167     064B  1683               	bsf	3,5	;RP0=1, select bank1
  3168     064C  1303               	bcf	3,6	;RP1=0, select bank1
  3169     064D  0498               	iorwf	24,f	;volatile
  3170     064E                     l1905:
  3171                           
  3172                           ;main.c: 416:     RCSTA |= 0x80;
  3173     064E  1283               	bcf	3,5	;RP0=0, select bank0
  3174     064F  1303               	bcf	3,6	;RP1=0, select bank0
  3175     0650  1798               	bsf	24,7	;volatile
  3176     0651                     l1907:
  3177                           
  3178                           ;main.c: 417:     RCSTA |= 0x10;
  3179     0651  1618               	bsf	24,4	;volatile
  3180     0652                     l1909:
  3181                           
  3182                           ;main.c: 419:     SPBRG = (char) (20000000 / (long) (64UL * baudrate)) - 1;
  3183     0652  082F               	movf	UART_init@baudrate,w
  3184     0653  00B3               	movwf	??_UART_init
  3185     0654  0830               	movf	UART_init@baudrate+1,w
  3186     0655  00B4               	movwf	??_UART_init+1
  3187     0656  0831               	movf	UART_init@baudrate+2,w
  3188     0657  00B5               	movwf	??_UART_init+2
  3189     0658  0832               	movf	UART_init@baudrate+3,w
  3190     0659  00B6               	movwf	??_UART_init+3
  3191     065A  3006               	movlw	6
  3192     065B                     u1525:
  3193     065B  1003               	clrc
  3194     065C  0DB3               	rlf	??_UART_init,f
  3195     065D  0DB4               	rlf	??_UART_init+1,f
  3196     065E  0DB5               	rlf	??_UART_init+2,f
  3197     065F  0DB6               	rlf	??_UART_init+3,f
  3198     0660                     u1520:
  3199     0660  3EFF               	addlw	-1
  3200     0661  1D03               	skipz
  3201     0662  2E5B               	goto	u1525
  3202     0663  0836               	movf	??_UART_init+3,w
  3203     0664  00A3               	movwf	___aldiv@divisor+3
  3204     0665  0835               	movf	??_UART_init+2,w
  3205     0666  00A2               	movwf	___aldiv@divisor+2
  3206     0667  0834               	movf	??_UART_init+1,w
  3207     0668  00A1               	movwf	___aldiv@divisor+1
  3208     0669  0833               	movf	??_UART_init,w
  3209     066A  00A0               	movwf	___aldiv@divisor
  3210     066B  3001               	movlw	1
  3211     066C  00A7               	movwf	___aldiv@dividend+3
  3212     066D  3031               	movlw	49
  3213     066E  00A6               	movwf	___aldiv@dividend+2
  3214     066F  302D               	movlw	45
  3215     0670  00A5               	movwf	___aldiv@dividend+1
  3216     0671  3000               	movlw	0
  3217     0672  00A4               	movwf	___aldiv@dividend
  3218     0673  120A  118A  21F3  120A  118A  	fcall	___aldiv
  3219     0678  1283               	bcf	3,5	;RP0=0, select bank0
  3220     0679  1303               	bcf	3,6	;RP1=0, select bank0
  3221     067A  0820               	movf	?___aldiv,w
  3222     067B  3EFF               	addlw	255
  3223     067C  1683               	bsf	3,5	;RP0=1, select bank1
  3224     067D  1303               	bcf	3,6	;RP1=0, select bank1
  3225     067E  0099               	movwf	25	;volatile
  3226     067F                     l1911:
  3227                           
  3228                           ;main.c: 421:     INTCON |= 0x80;
  3229     067F  178B               	bsf	11,7	;volatile
  3230     0680                     l1913:
  3231                           
  3232                           ;main.c: 422:     INTCON |= 0x40;
  3233     0680  170B               	bsf	11,6	;volatile
  3234     0681                     l1915:
  3235                           
  3236                           ;main.c: 423:     PIE1 |= 0x20;
  3237     0681  168C               	bsf	12,5	;volatile
  3238     0682                     l154:
  3239     0682  0008               	return
  3240     0683                     __end_of_UART_init:
  3241                           
  3242                           	psect	text17
  3243     01F3                     __ptext17:	
  3244 ;; *************** function ___aldiv *****************
  3245 ;; Defined at:
  3246 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  divisor         4    0[BANK0 ] long 
  3249 ;;  dividend        4    4[BANK0 ] long 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  quotient        4   11[BANK0 ] long 
  3252 ;;  sign            1   10[BANK0 ] unsigned char 
  3253 ;;  counter         1    9[BANK0 ] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  4    0[BANK0 ] long 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3263 ;;      Params:         0       8       0       0       0
  3264 ;;      Locals:         0       6       0       0       0
  3265 ;;      Temps:          0       1       0       0       0
  3266 ;;      Totals:         0      15       0       0       0
  3267 ;;Total ram usage:       15 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; Hardware stack levels required when called: 1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_UART_init
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277     01F3                     ___aldiv:	
  3278                           ;psect for function ___aldiv
  3279                           
  3280     01F3                     l1831:	
  3281                           ;incstack = 0
  3282                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3283                           
  3284     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3285     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3286     01F5  01AA               	clrf	___aldiv@sign
  3287     01F6                     l1833:
  3288     01F6  1FA3               	btfss	___aldiv@divisor+3,7
  3289     01F7  29F9               	goto	u1391
  3290     01F8  29FA               	goto	u1390
  3291     01F9                     u1391:
  3292     01F9  2A07               	goto	l334
  3293     01FA                     u1390:
  3294     01FA                     l1835:
  3295     01FA  09A0               	comf	___aldiv@divisor,f
  3296     01FB  09A1               	comf	___aldiv@divisor+1,f
  3297     01FC  09A2               	comf	___aldiv@divisor+2,f
  3298     01FD  09A3               	comf	___aldiv@divisor+3,f
  3299     01FE  0AA0               	incf	___aldiv@divisor,f
  3300     01FF  1903               	skipnz
  3301     0200  0AA1               	incf	___aldiv@divisor+1,f
  3302     0201  1903               	skipnz
  3303     0202  0AA2               	incf	___aldiv@divisor+2,f
  3304     0203  1903               	skipnz
  3305     0204  0AA3               	incf	___aldiv@divisor+3,f
  3306     0205  01AA               	clrf	___aldiv@sign
  3307     0206  0AAA               	incf	___aldiv@sign,f
  3308     0207                     l334:
  3309     0207  1FA7               	btfss	___aldiv@dividend+3,7
  3310     0208  2A0A               	goto	u1401
  3311     0209  2A0B               	goto	u1400
  3312     020A                     u1401:
  3313     020A  2A1A               	goto	l1841
  3314     020B                     u1400:
  3315     020B                     l1837:
  3316     020B  09A4               	comf	___aldiv@dividend,f
  3317     020C  09A5               	comf	___aldiv@dividend+1,f
  3318     020D  09A6               	comf	___aldiv@dividend+2,f
  3319     020E  09A7               	comf	___aldiv@dividend+3,f
  3320     020F  0AA4               	incf	___aldiv@dividend,f
  3321     0210  1903               	skipnz
  3322     0211  0AA5               	incf	___aldiv@dividend+1,f
  3323     0212  1903               	skipnz
  3324     0213  0AA6               	incf	___aldiv@dividend+2,f
  3325     0214  1903               	skipnz
  3326     0215  0AA7               	incf	___aldiv@dividend+3,f
  3327     0216                     l1839:
  3328     0216  3001               	movlw	1
  3329     0217  00A8               	movwf	??___aldiv
  3330     0218  0828               	movf	??___aldiv,w
  3331     0219  06AA               	xorwf	___aldiv@sign,f
  3332     021A                     l1841:
  3333     021A  3000               	movlw	0
  3334     021B  00AE               	movwf	___aldiv@quotient+3
  3335     021C  3000               	movlw	0
  3336     021D  00AD               	movwf	___aldiv@quotient+2
  3337     021E  3000               	movlw	0
  3338     021F  00AC               	movwf	___aldiv@quotient+1
  3339     0220  3000               	movlw	0
  3340     0221  00AB               	movwf	___aldiv@quotient
  3341     0222                     l1843:
  3342     0222  0823               	movf	___aldiv@divisor+3,w
  3343     0223  0422               	iorwf	___aldiv@divisor+2,w
  3344     0224  0421               	iorwf	___aldiv@divisor+1,w
  3345     0225  0420               	iorwf	___aldiv@divisor,w
  3346     0226  1903               	skipnz
  3347     0227  2A29               	goto	u1411
  3348     0228  2A2A               	goto	u1410
  3349     0229                     u1411:
  3350     0229  2A77               	goto	l1863
  3351     022A                     u1410:
  3352     022A                     l1845:
  3353     022A  01A9               	clrf	___aldiv@counter
  3354     022B  0AA9               	incf	___aldiv@counter,f
  3355     022C  2A3A               	goto	l1849
  3356     022D                     l1847:
  3357     022D  3001               	movlw	1
  3358     022E  00A8               	movwf	??___aldiv
  3359     022F                     u1425:
  3360     022F  1003               	clrc
  3361     0230  0DA0               	rlf	___aldiv@divisor,f
  3362     0231  0DA1               	rlf	___aldiv@divisor+1,f
  3363     0232  0DA2               	rlf	___aldiv@divisor+2,f
  3364     0233  0DA3               	rlf	___aldiv@divisor+3,f
  3365     0234  0BA8               	decfsz	??___aldiv,f
  3366     0235  2A2F               	goto	u1425
  3367     0236  3001               	movlw	1
  3368     0237  00A8               	movwf	??___aldiv
  3369     0238  0828               	movf	??___aldiv,w
  3370     0239  07A9               	addwf	___aldiv@counter,f
  3371     023A                     l1849:
  3372     023A  1FA3               	btfss	___aldiv@divisor+3,7
  3373     023B  2A3D               	goto	u1431
  3374     023C  2A3E               	goto	u1430
  3375     023D                     u1431:
  3376     023D  2A2D               	goto	l1847
  3377     023E                     u1430:
  3378     023E                     l1851:
  3379     023E  3001               	movlw	1
  3380     023F  00A8               	movwf	??___aldiv
  3381     0240                     u1445:
  3382     0240  1003               	clrc
  3383     0241  0DAB               	rlf	___aldiv@quotient,f
  3384     0242  0DAC               	rlf	___aldiv@quotient+1,f
  3385     0243  0DAD               	rlf	___aldiv@quotient+2,f
  3386     0244  0DAE               	rlf	___aldiv@quotient+3,f
  3387     0245  0BA8               	decfsz	??___aldiv,f
  3388     0246  2A40               	goto	u1445
  3389     0247                     l1853:
  3390     0247  0823               	movf	___aldiv@divisor+3,w
  3391     0248  0227               	subwf	___aldiv@dividend+3,w
  3392     0249  1D03               	skipz
  3393     024A  2A55               	goto	u1455
  3394     024B  0822               	movf	___aldiv@divisor+2,w
  3395     024C  0226               	subwf	___aldiv@dividend+2,w
  3396     024D  1D03               	skipz
  3397     024E  2A55               	goto	u1455
  3398     024F  0821               	movf	___aldiv@divisor+1,w
  3399     0250  0225               	subwf	___aldiv@dividend+1,w
  3400     0251  1D03               	skipz
  3401     0252  2A55               	goto	u1455
  3402     0253  0820               	movf	___aldiv@divisor,w
  3403     0254  0224               	subwf	___aldiv@dividend,w
  3404     0255                     u1455:
  3405     0255  1C03               	skipc
  3406     0256  2A58               	goto	u1451
  3407     0257  2A59               	goto	u1450
  3408     0258                     u1451:
  3409     0258  2A68               	goto	l1859
  3410     0259                     u1450:
  3411     0259                     l1855:
  3412     0259  0820               	movf	___aldiv@divisor,w
  3413     025A  02A4               	subwf	___aldiv@dividend,f
  3414     025B  0821               	movf	___aldiv@divisor+1,w
  3415     025C  1C03               	skipc
  3416     025D  0F21               	incfsz	___aldiv@divisor+1,w
  3417     025E  02A5               	subwf	___aldiv@dividend+1,f
  3418     025F  0822               	movf	___aldiv@divisor+2,w
  3419     0260  1C03               	skipc
  3420     0261  0F22               	incfsz	___aldiv@divisor+2,w
  3421     0262  02A6               	subwf	___aldiv@dividend+2,f
  3422     0263  0823               	movf	___aldiv@divisor+3,w
  3423     0264  1C03               	skipc
  3424     0265  0F23               	incfsz	___aldiv@divisor+3,w
  3425     0266  02A7               	subwf	___aldiv@dividend+3,f
  3426     0267                     l1857:
  3427     0267  142B               	bsf	___aldiv@quotient,0
  3428     0268                     l1859:
  3429     0268  3001               	movlw	1
  3430     0269                     u1465:
  3431     0269  1003               	clrc
  3432     026A  0CA3               	rrf	___aldiv@divisor+3,f
  3433     026B  0CA2               	rrf	___aldiv@divisor+2,f
  3434     026C  0CA1               	rrf	___aldiv@divisor+1,f
  3435     026D  0CA0               	rrf	___aldiv@divisor,f
  3436     026E  3EFF               	addlw	-1
  3437     026F  1D03               	skipz
  3438     0270  2A69               	goto	u1465
  3439     0271                     l1861:
  3440     0271  3001               	movlw	1
  3441     0272  02A9               	subwf	___aldiv@counter,f
  3442     0273  1D03               	btfss	3,2
  3443     0274  2A76               	goto	u1471
  3444     0275  2A77               	goto	u1470
  3445     0276                     u1471:
  3446     0276  2A3E               	goto	l1851
  3447     0277                     u1470:
  3448     0277                     l1863:
  3449     0277  082A               	movf	___aldiv@sign,w
  3450     0278  1903               	btfsc	3,2
  3451     0279  2A7B               	goto	u1481
  3452     027A  2A7C               	goto	u1480
  3453     027B                     u1481:
  3454     027B  2A87               	goto	l1867
  3455     027C                     u1480:
  3456     027C                     l1865:
  3457     027C  09AB               	comf	___aldiv@quotient,f
  3458     027D  09AC               	comf	___aldiv@quotient+1,f
  3459     027E  09AD               	comf	___aldiv@quotient+2,f
  3460     027F  09AE               	comf	___aldiv@quotient+3,f
  3461     0280  0AAB               	incf	___aldiv@quotient,f
  3462     0281  1903               	skipnz
  3463     0282  0AAC               	incf	___aldiv@quotient+1,f
  3464     0283  1903               	skipnz
  3465     0284  0AAD               	incf	___aldiv@quotient+2,f
  3466     0285  1903               	skipnz
  3467     0286  0AAE               	incf	___aldiv@quotient+3,f
  3468     0287                     l1867:
  3469     0287  082E               	movf	___aldiv@quotient+3,w
  3470     0288  00A3               	movwf	?___aldiv+3
  3471     0289  082D               	movf	___aldiv@quotient+2,w
  3472     028A  00A2               	movwf	?___aldiv+2
  3473     028B  082C               	movf	___aldiv@quotient+1,w
  3474     028C  00A1               	movwf	?___aldiv+1
  3475     028D  082B               	movf	___aldiv@quotient,w
  3476     028E  00A0               	movwf	?___aldiv
  3477     028F                     l344:
  3478     028F  0008               	return
  3479     0290                     __end_of___aldiv:
  3480                           
  3481                           	psect	text18
  3482     0719                     __ptext18:	
  3483 ;; *************** function _UART_TxString *****************
  3484 ;; Defined at:
  3485 ;;		line 436 in file "main.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  str             2    2[BANK0 ] PTR const unsigned char 
  3488 ;;		 -> random_string@str(8), STR_3(8), 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  i               1    5[BANK0 ] unsigned char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3500 ;;      Params:         0       2       0       0       0
  3501 ;;      Locals:         0       1       0       0       0
  3502 ;;      Temps:          0       1       0       0       0
  3503 ;;      Totals:         0       4       0       0       0
  3504 ;;Total ram usage:        4 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 2
  3507 ;; This function calls:
  3508 ;;		_UART_TxChar
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514     0719                     _UART_TxString:	
  3515                           ;psect for function _UART_TxString
  3516                           
  3517     0719                     l2001:	
  3518                           ;incstack = 0
  3519                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3520                           
  3521                           
  3522                           ;main.c: 436: void UART_TxString(const char* str);main.c: 437: {;main.c: 438:     unsign
      +                          ed char i = 0;
  3523     0719  1283               	bcf	3,5	;RP0=0, select bank0
  3524     071A  1303               	bcf	3,6	;RP1=0, select bank0
  3525     071B  01A5               	clrf	UART_TxString@i
  3526                           
  3527                           ;main.c: 440:     while (str[i] != 0)
  3528     071C  2F34               	goto	l2007
  3529     071D                     l2003:
  3530                           
  3531                           ;main.c: 441:     {;main.c: 442:         UART_TxChar(str[i]);
  3532     071D  0825               	movf	UART_TxString@i,w
  3533     071E  0722               	addwf	UART_TxString@str,w
  3534     071F  0084               	movwf	4
  3535     0720  0823               	movf	UART_TxString@str+1,w
  3536     0721  1803               	skipnc
  3537     0722  0A23               	incf	UART_TxString@str+1,w
  3538     0723  00FF               	movwf	btemp+1
  3539     0724  120A  118A  2300  120A  118A  	fcall	stringtab
  3540     0729  120A  118A  27BF  120A  118A  	fcall	_UART_TxChar
  3541     072E                     l2005:
  3542                           
  3543                           ;main.c: 443:         i++;
  3544     072E  3001               	movlw	1
  3545     072F  1283               	bcf	3,5	;RP0=0, select bank0
  3546     0730  1303               	bcf	3,6	;RP1=0, select bank0
  3547     0731  00A4               	movwf	??_UART_TxString
  3548     0732  0824               	movf	??_UART_TxString,w
  3549     0733  07A5               	addwf	UART_TxString@i,f
  3550     0734                     l2007:
  3551                           
  3552                           ;main.c: 440:     while (str[i] != 0)
  3553     0734  0825               	movf	UART_TxString@i,w
  3554     0735  0722               	addwf	UART_TxString@str,w
  3555     0736  0084               	movwf	4
  3556     0737  0823               	movf	UART_TxString@str+1,w
  3557     0738  1803               	skipnc
  3558     0739  0A23               	incf	UART_TxString@str+1,w
  3559     073A  00FF               	movwf	btemp+1
  3560     073B  120A  118A  2300  120A  118A  	fcall	stringtab
  3561     0740  3A00               	xorlw	0
  3562     0741  1D03               	skipz
  3563     0742  2F44               	goto	u1551
  3564     0743  2F45               	goto	u1550
  3565     0744                     u1551:
  3566     0744  2F1D               	goto	l2003
  3567     0745                     u1550:
  3568     0745                     l166:
  3569     0745  0008               	return
  3570     0746                     __end_of_UART_TxString:
  3571                           
  3572                           	psect	text19
  3573     07BF                     __ptext19:	
  3574 ;; *************** function _UART_TxChar *****************
  3575 ;; Defined at:
  3576 ;;		line 426 in file "main.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  ch              1    wreg     unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  ch              1    1[BANK0 ] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       0       0       0
  3591 ;;      Locals:         0       1       0       0       0
  3592 ;;      Temps:          0       1       0       0       0
  3593 ;;      Totals:         0       2       0       0       0
  3594 ;;Total ram usage:        2 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_UART_TxString
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604     07BF                     _UART_TxChar:	
  3605                           ;psect for function _UART_TxChar
  3606                           
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _UART_TxChar: [wreg+status,2+status,0]
  3610                           ;UART_TxChar@ch stored from wreg
  3611     07BF  1283               	bcf	3,5	;RP0=0, select bank0
  3612     07C0  1303               	bcf	3,6	;RP1=0, select bank0
  3613     07C1  00A1               	movwf	UART_TxChar@ch
  3614     07C2                     l1825:
  3615     07C2                     l157:	
  3616                           ;main.c: 426: void UART_TxChar(char ch);main.c: 427: {;main.c: 428:     while (!(PIR1 & 
      +                          0x10));
  3617                           
  3618     07C2  1E0C               	btfss	12,4	;volatile
  3619     07C3  2FC5               	goto	u1381
  3620     07C4  2FC6               	goto	u1380
  3621     07C5                     u1381:
  3622     07C5  2FC2               	goto	l157
  3623     07C6                     u1380:
  3624     07C6                     l1827:
  3625                           
  3626                           ;main.c: 430:     PIR1 &= ~0x10;
  3627     07C6  30EF               	movlw	239
  3628     07C7  00A0               	movwf	??_UART_TxChar
  3629     07C8  0820               	movf	??_UART_TxChar,w
  3630     07C9  058C               	andwf	12,f	;volatile
  3631     07CA                     l1829:
  3632                           
  3633                           ;main.c: 432:     TXREG = ch;
  3634     07CA  0821               	movf	UART_TxChar@ch,w
  3635     07CB  0099               	movwf	25	;volatile
  3636     07CC                     l160:
  3637     07CC  0008               	return
  3638     07CD                     __end_of_UART_TxChar:
  3639                           
  3640                           	psect	text20
  3641     03F5                     __ptext20:	
  3642 ;; *************** function _ISR *****************
  3643 ;; Defined at:
  3644 ;;		line 472 in file "main.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0
  3660 ;;      Temps:          5       0       0       0       0
  3661 ;;      Totals:         5       0       0       0       0
  3662 ;;Total ram usage:        5 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		Interrupt level 1
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671     03F5                     _ISR:	
  3672                           ;psect for function _ISR
  3673                           
  3674     03F5                     i1l1697:
  3675                           
  3676                           ;main.c: 474:     if (RCIF)
  3677     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3678     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  3679     03F7  1E8C               	btfss	12,5	;volatile
  3680     03F8  2BFA               	goto	u114_21
  3681     03F9  2BFB               	goto	u114_20
  3682     03FA                     u114_21:
  3683     03FA  2C0E               	goto	i1l1709
  3684     03FB                     u114_20:
  3685     03FB                     i1l1699:
  3686                           
  3687                           ;main.c: 475:     {;main.c: 476:         dato[i++] = RCREG;
  3688     03FB  084D               	movf	_i,w
  3689     03FC  3EA0               	addlw	(low (_dato| 0))& (0+255)
  3690     03FD  0084               	movwf	4
  3691     03FE  081A               	movf	26,w	;volatile
  3692     03FF  1383               	bcf	3,7	;select IRP bank1
  3693     0400  0080               	movwf	0
  3694     0401                     i1l1701:
  3695     0401  3001               	movlw	1
  3696     0402  07CD               	addwf	_i,f
  3697     0403  1803               	skipnc
  3698     0404  0ACE               	incf	_i+1,f
  3699     0405  3000               	movlw	0
  3700     0406  07CE               	addwf	_i+1,f
  3701     0407                     i1l1703:
  3702                           
  3703                           ;main.c: 477:         dato[i] = '\0';
  3704     0407  084D               	movf	_i,w
  3705     0408  3EA0               	addlw	(low (_dato| 0))& (0+255)
  3706     0409  0084               	movwf	4
  3707     040A  0180               	clrf	0
  3708     040B                     i1l1705:
  3709                           
  3710                           ;main.c: 478:         received = 1;
  3711     040B  01D3               	clrf	_received
  3712     040C  0AD3               	incf	_received,f
  3713     040D                     i1l1707:
  3714                           
  3715                           ;main.c: 479:         RCIF = 0;
  3716     040D  128C               	bcf	12,5	;volatile
  3717     040E                     i1l1709:
  3718                           
  3719                           ;main.c: 482:     if (INTCON & 0x04)
  3720     040E  1D0B               	btfss	11,2	;volatile
  3721     040F  2C11               	goto	u115_21
  3722     0410  2C12               	goto	u115_20
  3723     0411                     u115_21:
  3724     0411  2C57               	goto	i1l183
  3725     0412                     u115_20:
  3726     0412                     i1l1711:
  3727                           
  3728                           ;main.c: 483:     {;main.c: 484:         INTCON &= ~0x04;
  3729     0412  30FB               	movlw	251
  3730     0413  00F0               	movwf	??_ISR
  3731     0414  0870               	movf	??_ISR,w
  3732     0415  058B               	andwf	11,f	;volatile
  3733     0416                     i1l1713:
  3734                           
  3735                           ;main.c: 485:         TMR0 = 6;
  3736     0416  3006               	movlw	6
  3737     0417  0081               	movwf	1	;volatile
  3738     0418                     i1l1715:
  3739                           
  3740                           ;main.c: 487:         if(code_generate_send)
  3741     0418  0852               	movf	_code_generate_send,w
  3742     0419  1903               	btfsc	3,2
  3743     041A  2C1C               	goto	u116_21
  3744     041B  2C1D               	goto	u116_20
  3745     041C                     u116_21:
  3746     041C  2C57               	goto	i1l183
  3747     041D                     u116_20:
  3748     041D                     i1l1717:
  3749                           
  3750                           ;main.c: 488:         {;main.c: 490:             countOn++;
  3751     041D  3001               	movlw	1
  3752     041E  07F7               	addwf	_countOn,f
  3753     041F  1803               	skipnc
  3754     0420  0AF8               	incf	_countOn+1,f
  3755     0421  3000               	movlw	0
  3756     0422  07F8               	addwf	_countOn+1,f
  3757                           
  3758                           ;main.c: 491:             countSec++;
  3759     0423  3001               	movlw	1
  3760     0424  07F5               	addwf	_countSec,f
  3761     0425  1803               	skipnc
  3762     0426  0AF6               	incf	_countSec+1,f
  3763     0427  3000               	movlw	0
  3764     0428  07F6               	addwf	_countSec+1,f
  3765     0429                     i1l1719:
  3766                           
  3767                           ;main.c: 494:             if (countSec > 250)
  3768     0429  0876               	movf	_countSec+1,w
  3769     042A  3A80               	xorlw	128
  3770     042B  00FF               	movwf	btemp+1
  3771     042C  3080               	movlw	128
  3772     042D  027F               	subwf	btemp+1,w
  3773     042E  1D03               	skipz
  3774     042F  2C32               	goto	u117_25
  3775     0430  30FB               	movlw	251
  3776     0431  0275               	subwf	_countSec,w
  3777     0432                     u117_25:
  3778     0432  1C03               	skipc
  3779     0433  2C35               	goto	u117_21
  3780     0434  2C36               	goto	u117_20
  3781     0435                     u117_21:
  3782     0435  2C40               	goto	i1l1725
  3783     0436                     u117_20:
  3784     0436                     i1l1721:
  3785                           
  3786                           ;main.c: 495:             {;main.c: 496:                 numSec--;
  3787     0436  30FF               	movlw	255
  3788     0437  1283               	bcf	3,5	;RP0=0, select bank0
  3789     0438  1303               	bcf	3,6	;RP1=0, select bank0
  3790     0439  07E4               	addwf	_numSec,f
  3791     043A  1803               	skipnc
  3792     043B  0AE5               	incf	_numSec+1,f
  3793     043C  30FF               	movlw	255
  3794     043D  07E5               	addwf	_numSec+1,f
  3795     043E                     i1l1723:
  3796                           
  3797                           ;main.c: 497:                 countSec = 0;
  3798     043E  01F5               	clrf	_countSec
  3799     043F  01F6               	clrf	_countSec+1
  3800     0440                     i1l1725:
  3801                           
  3802                           ;main.c: 501:             if (countOn >= 15000)
  3803     0440  0878               	movf	_countOn+1,w
  3804     0441  3A80               	xorlw	128
  3805     0442  00FF               	movwf	btemp+1
  3806     0443  30BA               	movlw	186
  3807     0444  027F               	subwf	btemp+1,w
  3808     0445  1D03               	skipz
  3809     0446  2C49               	goto	u118_25
  3810     0447  3098               	movlw	152
  3811     0448  0277               	subwf	_countOn,w
  3812     0449                     u118_25:
  3813     0449  1C03               	skipc
  3814     044A  2C4C               	goto	u118_21
  3815     044B  2C4D               	goto	u118_20
  3816     044C                     u118_21:
  3817     044C  2C57               	goto	i1l183
  3818     044D                     u118_20:
  3819     044D                     i1l1727:
  3820                           
  3821                           ;main.c: 502:             {;main.c: 503:                 stop_wait = 1;
  3822     044D  1283               	bcf	3,5	;RP0=0, select bank0
  3823     044E  1303               	bcf	3,6	;RP1=0, select bank0
  3824     044F  01D1               	clrf	_stop_wait
  3825     0450  0AD1               	incf	_stop_wait,f
  3826     0451                     i1l1729:
  3827                           
  3828                           ;main.c: 504:                 countOn = 0;
  3829     0451  01F7               	clrf	_countOn
  3830     0452  01F8               	clrf	_countOn+1
  3831     0453                     i1l1731:
  3832                           
  3833                           ;main.c: 505:                 numSec = 60;
  3834     0453  303C               	movlw	60
  3835     0454  00E4               	movwf	_numSec
  3836     0455  3000               	movlw	0
  3837     0456  00E5               	movwf	_numSec+1
  3838     0457                     i1l183:
  3839     0457  0874               	movf	??_ISR+4,w
  3840     0458  00FF               	movwf	btemp+1
  3841     0459  0873               	movf	??_ISR+3,w
  3842     045A  008A               	movwf	10
  3843     045B  0872               	movf	??_ISR+2,w
  3844     045C  0084               	movwf	4
  3845     045D  0E71               	swapf	??_ISR+1,w
  3846     045E  0083               	movwf	3
  3847     045F  0EFE               	swapf	btemp,f
  3848     0460  0E7E               	swapf	btemp,w
  3849     0461  0009               	retfie
  3850     0462                     __end_of_ISR:
  3851     007E                     btemp	set	126	;btemp
  3852     007E                     wtemp0	set	126
  3853                           
  3854                           	psect	intentry
  3855     0004                     __pintentry:	
  3856                           ;incstack = 0
  3857                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1]
  3858                           
  3859     0004                     interrupt_function:
  3860     007E                     saved_w	set	btemp
  3861     0004  00FE               	movwf	btemp
  3862     0005  0E03               	swapf	3,w
  3863     0006  00F1               	movwf	??_ISR+1
  3864     0007  0804               	movf	4,w
  3865     0008  00F2               	movwf	??_ISR+2
  3866     0009  080A               	movf	10,w
  3867     000A  00F3               	movwf	??_ISR+3
  3868     000B  087F               	movf	btemp+1,w
  3869     000C  00F4               	movwf	??_ISR+4
  3870     000D  120A  118A  2BF5   	ljmp	_ISR
  3871                           
  3872                           	psect	idloc
  3873                           
  3874                           ;Config register IDLOC0 @ 0x2000
  3875                           ;	unspecified, using default values
  3876     2000                     	org	8192
  3877     2000  3FFF               	dw	16383
  3878                           
  3879                           ;Config register IDLOC1 @ 0x2001
  3880                           ;	unspecified, using default values
  3881     2001                     	org	8193
  3882     2001  3FFF               	dw	16383
  3883                           
  3884                           ;Config register IDLOC2 @ 0x2002
  3885                           ;	unspecified, using default values
  3886     2002                     	org	8194
  3887     2002  3FFF               	dw	16383
  3888                           
  3889                           ;Config register IDLOC3 @ 0x2003
  3890                           ;	unspecified, using default values
  3891     2003                     	org	8195
  3892     2003  3FFF               	dw	16383
  3893                           
  3894                           	psect	config
  3895                           
  3896                           ;Config register CONFIG @ 0x2007
  3897                           ;	Oscillator Selection bits
  3898                           ;	FOSC = HS, HS oscillator
  3899                           ;	Watchdog Timer Enable bit
  3900                           ;	WDTE = OFF, WDT disabled
  3901                           ;	Power-up Timer Enable bit
  3902                           ;	PWRTE = ON, PWRT enabled
  3903                           ;	Brown-out Reset Enable bit
  3904                           ;	BOREN = ON, BOR enabled
  3905                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3906                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3907                           ;	Data EEPROM Memory Code Protection bit
  3908                           ;	CPD = OFF, Data EEPROM code protection off
  3909                           ;	Flash Program Memory Write Enable bits
  3910                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3911                           ;	In-Circuit Debugger Mode bit
  3912                           ;	DEBUG = 0x1, unprogrammed default
  3913                           ;	Flash Program Memory Code Protection bit
  3914                           ;	CP = OFF, Code protection off
  3915     2007                     	org	8199
  3916     2007  3F72               	dw	16242

Data Sizes:
    Strings     37
    Constant    82
    Data        6
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     45      70
    BANK1            80      0      50
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    parseData@dataParsed	PTR unsigned char  size(1) Largest target is 50
		 -> dataParsed(BANK3[50]), 

    parseData@data	PTR unsigned char  size(1) Largest target is 50
		 -> dato(BANK1[50]), 

    UART_TxString@str	PTR const unsigned char  size(2) Largest target is 8
		 -> random_string@str(BANK0[8]), STR_3(CODE[8]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 50
		 -> random_string@str(BANK0[8]), STR_5(CODE[11]), buff(BANK0[2]), dataParsed(BANK3[50]), 
		 -> STR_4(CODE[12]), STR_2(CODE[6]), STR_1(CODE[11]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    sp__random_string	PTR unsigned char  size(1) Largest target is 8
		 -> random_string@str(BANK0[8]), 

    main@code	PTR unsigned char  size(1) Largest target is 8
		 -> random_string@str(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_itoa
    _random_string->___lwmod
    _rand->___lmul
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd
    _itoa->_utoa
    _utoa->___lwmod
    ___lwmod->_rand
    _UART_init->___aldiv
    _UART_TxString->_UART_TxChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    6639
                                             41 BANK0      4     4      0
                      _UART_TxString
                          _UART_init
                         _initKeyPad
                               _itoa
                           _lcd_init
                           _lcd_send
                            _lcd_str
                          _parseData
                      _random_string
 ---------------------------------------------------------------------------------
 (1) _random_string                                        6     6      0    1162
                                             26 BANK0      6     6      0
                            ___lwmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     316
                                             13 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _parseData                                            9     8      1     513
                                              0 BANK0      9     8      1
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     791
                                              3 BANK0      4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send                                             4     3      1     692
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      31
                                              3 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2298
                                             35 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1849
                                             26 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                             20 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initKeyPad                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            8     4      4     746
                                             15 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        4     2      2     341
                                              2 BANK0      4     2      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TxString
     _UART_TxChar
   _UART_init
     ___aldiv
   _initKeyPad
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
         _rand (ARG)
           ___lmul
   _lcd_init
     _lcd_cmd
   _lcd_send
   _lcd_str
     _lcd_dat
   _parseData
   _random_string
     ___lwmod
     _rand
     _srand

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2D      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B3      12        0.0%
ABS                  0      0      B3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 31 17:13:08 2023

                           _i 004D                             pc 0002                            fsr 0004  
                         l130 04BD                           l115 01EF                           l107 00E4  
                         l124 078B                           l142 07BE                           l127 07AD  
                         l151 0516                           l160 07CC                           l136 06EB  
                         l154 0682                           l139 0718                           l157 07C2  
                         l173 0567                           l166 0745                           l334 0207  
                         l344 028F                           l169 0550                           l283 05AF  
                         l541 063C                           l551 06BE                           l731 03F4  
                         l723 0769                           l736 07D5                           l729 03DF  
                         l739 05F6                           _ISR 03F5         __end_of_random_string 0517  
                         fsr0 0004                           indf 0000                          ?_ISR 0070  
                        l2001 0719                          l2003 071D                          l2011 051F  
                        l2005 072E                          l2021 055B                          l2013 052A  
                        l2101 0108                          l2007 0734                          l2031 074D  
                        l2023 0561                          l2015 0535                          l2111 012D  
                        l2103 0111                          l2033 0752                          l2017 0544  
                        l2009 051A                          l2121 014D                          l2113 0138  
                        l2105 011C                          l2041 0059                          l2035 0756  
                        l2027 0749                          l2019 054A                          l2131 016A  
                        l2115 0143                          l2107 0120                          l2123 0156  
                        l2051 0077                          l2043 005C                          l2037 075B  
                        l2029 0749                          l2141 019A                          l2133 0171  
                        l2125 015A                          l2117 0146                          l2109 0126  
                        l2061 0098                          l2053 007C                          l2045 0062  
                        l2151 01BD                          l2143 01A8                          l2135 017C  
                        l2119 014A                          l2071 00A2                          l2127 0160  
                        l2063 009A                          l2055 0081                          l2047 0066  
                        l2161 01EA                          l2153 01C6                          l2145 01AC  
                        l2137 0185                          l2129 0165                          l2081 00B0  
                        l2073 00A5                          l2065 00A1                          l2057 008A  
                        l2049 006A                          l2163 01ED                          l2155 01D1  
                        l2147 01AD                          l2139 018F                          l2091 00E8  
                        l2083 00BD                          l2075 00AF                          l2059 0095  
                        l2157 01D8                          l2149 01AF                          l2093 00EE  
                        l2085 00C8                          l2159 01DF                          l2095 00F3  
                        l2087 00D7                          l1801 077B                          l2097 00F9  
                        l2089 00E2                          l1811 079D                          l1803 0788  
                        l2099 0100                          l1901 063D                          l1813 07AA  
                        l1805 078F                          l1741 0596                          l1733 0568  
                        l1821 05DF                          l1831 01F3                          l1911 067F  
                        l1903 0645                          l1751 0601                          l1807 0790  
                        l1743 05A7                          l1735 0572                          l1815 07CD  
                        l1825 07C2                          l1841 021A                          l1833 01F6  
                        l1913 0680                          l1905 064E                          l1761 0624  
                        l1753 0604                          l1809 0792                          l1921 0469  
                        l1737 0576                          l1817 05B0                          l1827 07C6  
                        l1851 023E                          l1843 0222                          l1835 01FA  
                        l1915 0681                          l1907 0651                          l1763 062A  
                        l1755 060B                          l1747 05F7                          l1931 0488  
                        l1923 046A                          l1739 058D                          l1819 05D1  
                        l1829 07CA                          l1861 0271                          l1853 0247  
                        l1845 022A                          l1837 020B                          l1909 0652  
                        l1765 062B                          l1757 060F                          l1749 05FB  
                        l1781 0699                          l1773 0683                          l1941 04AB  
                        l1933 048E                          l1925 0474                          l1917 0462  
                        l1855 0259                          l1847 022D                          l1863 0277  
                        l1839 0216                          l1767 0632                          l1759 0613  
                        l1783 069D                          l1775 068B                          l1791 06BA  
                        l1871 038A                          l1943 04B1                          l1935 0499  
                        l1927 0477                          l1919 0466                          l1951 06F2  
                        l1865 027C                          l1857 0267                          l1849 023A  
                        l1769 0638                          l1785 06A7                          l1777 068E  
                        l1881 03AF                          l1873 038E                          l1945 04B7  
                        l1937 049F                          l1929 047D                          l1961 06FE  
                        l1953 06F3                          l1867 0287                          l1859 0268  
                        l1947 07AE                          l1787 06AD                          l1779 0695  
                        l1891 03E3                          l1883 03B1                          l1875 03A1  
                        l1939 04A5                          l1963 0708                          l1955 06F4  
                        l1795 076D                          l1971 06C3                          l1789 06B4  
                        l1893 03E8                          l1885 03C2                          l1877 03A5  
                        l1965 070B                          l1957 06F7                          l1949 06EF  
                        l1797 076E                          l1973 06D4                          l1895 03EA  
                        l1887 03D5                          l1879 03AB                          l1967 0715  
                        l1959 06F9                          l1799 0770                          l1975 06DA  
                        l1991 0501                          l1897 03F0                          l1889 03DB  
                        l1969 06BF                          l1993 050E                          l1985 04D0  
                        l1977 04BE                          l1995 0514                          l1987 04EC  
                        l1979 04CC                          l1997 0515                          l1989 04FB  
                        STR_1 036E                          STR_2 0381                          STR_3 0379  
                        STR_4 0362                          STR_5 036E                          u1201 057F  
                        u1202 0586                          u1203 058D                          u1300 0638  
                        u1301 0637                          u1310 068B                          u1230 05A7  
                        u1311 068A                          u1231 05A6                          u1215 058F  
                        u1400 020B                          u1240 0601                          u1401 020A  
                        u1241 0600                          u1225 0597                          u1410 022A  
                        u1330 069D                          u1411 0229                          u1331 069C  
                        u1260 0613                          u1340 06A7                          u1500 03DB  
                        u1261 0612                          u1341 06A6                          u1325 068F  
                        u1501 03DA                          u1430 023E                          u1510 03F0  
                        u1190 0576                          u1431 023D                          u1255 0605  
                        u1511 03EF                          u1191 0575                          u1520 0660  
                        u1280 0624                          u1360 06BA                          u1600 00A1  
                        u1425 022F                          u1281 0623                          u1361 06B9  
                        u1345 06A3                          u1601 00A0                          u1450 0259  
                        u1530 06EB                          u1370 05EE                          u1610 00BD  
                        u1451 0258                          u1275 0614                          u1355 06AE  
                        u1531 06EA                          u1611 00BC                          u1380 07C6  
                        u1540 050E                          u1700 0165                          u1620 00D7  
                        u1381 07C5                          u1445 0240                          u1525 065B  
                        u1285 0620                          u1541 050D                          u1701 0164  
                        u1621 00D6                          u1550 0745                          u1470 0277  
                        u1390 01FA                          u1710 016A                          u1551 0744  
                        u1471 0276                          u1455 0255                          u1391 01F9  
                        u1295 062C                          u1375 05E9                          u1711 0169  
                        u1480 027C                          u1560 052A                          u1720 01D8  
                        u1640 00EE                          u1481 027B                          u1465 0269  
                        u1561 0529                          u1545 050A                          u1721 01D7  
                        u1641 00ED                          u1490 03AB                          u1570 0535  
                        u1650 00F3                          u1491 03AA                          u1571 0534  
                        u1651 00F2                          u1635 00DA                          u1580 055B  
                        u1660 00F9                          u1581 055A                          u1661 00F8  
                        u1590 074D                          u1670 0126                          u1591 074C  
                        u1807 0483                          u1671 0125                          _PIE1 008C  
                        u1680 0156                          u1817 0494                          u1681 0155  
                        u1737 00C3                          u1690 0160                          u1827 0799  
                        u1747 01A2                          u1691 015F                          u1837 07A6  
                        u1757 0777                          u1767 0784                          u1777 0704  
                        u1787 0711                          u1797 0470                          _RCIF 0065  
                        _PIR1 000C                          _TMR0 0001                          _dato 00A0  
                        _buff 005E                          _main 0059                          _keys 034F  
                        _rand 05B0                          _itoa 0746                          btemp 007E  
                        _utoa 0387                          start 0010                         ??_ISR 0070  
                lcd_send@dato 0023                  lcd_send@tipo 0020               __end_of___aldiv 0290  
                       ?_main 0070                         ?_rand 002D                         ?_itoa 0043  
                       ?_utoa 003A               __end_of___lwdiv 063D                         i1l183 0457  
             __end_of___lwmod 06BF                         _RCREG 001A                         _RCSTA 0018  
                       _SPBRG 0099                         _PORTB 0006                         _PORTD 0008  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019                         _TXSTA 0098  
             __end_of_colMask 0362           ___lmul@multiplicand 0024               __end_of_lcd_dat 078C  
             __end_of_lcd_cmd 07AE               __end_of_lcd_str 06EC                 parseData@data 0028  
                       _keyok 0054                         _randx 0060                         _srand 07CD  
                       pclath 000A               __end_of_rowMask 035F                         utoa@c 0041  
                       utoa@v 003F                         status 0003                         wtemp0 007E  
            random_string@str 0056               __initialization 0013                  __end_of_main 01F3  
                __end_of_keys 035B                  __end_of_rand 05F7                  __end_of_itoa 076A  
                __end_of_utoa 03F5                        ??_main 0049                        ??_rand 002F  
                      ??_itoa 0047                        ??_utoa 003E                        ?_srand 0020  
                      i1l1701 0401                        i1l1711 0412                        i1l1703 0407  
                      i1l1721 0436                        i1l1713 0416                        i1l1705 040B  
                      i1l1731 0453                        i1l1723 043E                        i1l1715 0418  
                      i1l1707 040D                        i1l1725 0440                        i1l1717 041D  
                      i1l1709 040E                        i1l1727 044D                        i1l1719 0429  
                      u114_20 03FB                        i1l1729 0451                        u114_21 03FA  
                      u115_20 0412                        u115_21 0411                        i1l1697 03F5  
                      i1l1699 03FB                        u116_20 041D                        u116_21 041C  
                      u117_20 0436                        u117_21 0435                        u117_25 0432  
                      u118_20 044D                        u118_21 044C                        u118_25 0449  
                      _INTCON 000B                  ?_UART_TxChar 0070              __end_of_lcd_init 04BE  
            __end_of_lcd_send 0719                        ___lmul 0568                     ??___aldiv 0028  
           __end_of_UART_init 0683                     ??___lwdiv 0024                     ??___lwmod 0038  
                      _numSec 0064                     ??_lcd_dat 0020                     ??_lcd_cmd 0020  
                   ??_lcd_str 0025                        saved_w 007E                        srand@x 0020  
     __end_of__initialization 0055         __end_of_UART_TxString 0746                __pcstackCOMMON 0070  
                __pidataBANK0 07DE                 __end_of_srand 07D6                       ??_srand 0075  
                  _dataParsed 0190                    __pbssBANK0 004D                    __pbssBANK1 00A0  
                  __pbssBANK3 0190                    __pmaintext 0059                       ?___lmul 0020  
                  __pintentry 0004                ___lmul@product 0029                     ?_lcd_init 0070  
                   ?_lcd_send 0020                    __stringtab 0300                    _initKeyPad 07AE  
                     ___aldiv 01F3                       ___lwdiv 05F7                       ___lwmod 0683  
                     _colMask 035F                       _colScan 0050                       __ptext1 04BE  
                     __ptext2 07CD                       __ptext3 05B0                       __ptext4 0568  
                     __ptext5 0517                       __ptext6 06BF                       __ptext7 076A  
                     __ptext8 06EC                       __ptext9 0462                       _lcd_dat 076A  
                     _lcd_cmd 078C                       _lcd_str 06BF                       _countOn 0077  
            ___aldiv@dividend 0024                    _keypressed 0055             __end_of_parseData 0568  
                     _rowMask 035B                       _rowScan 004F                       clrloop0 07D7  
                  ??_lcd_init 0023                    ??_lcd_send 0021          end_of_initialization 0055  
                     itoa@buf 0048                       itoa@val 0043                UART_TxString@i 0025  
            ___aldiv@quotient 002B                       utoa@buf 0042                       utoa@val 003A  
          random_string@index 003C                     _UART_init 063D                     _PORTEbits 0009  
               _random_string 04BE                     _TRISEbits 0089                    lcd_dat@val 0022  
                  lcd_cmd@val 0022                    lcd_str@str 0023                random_string@i 003E  
                 ?_initKeyPad 0070                __end_of___lmul 05B0                    ?_UART_init 002F  
              ?_random_string 0070           start_initialization 0013                   __end_of_ISR 0462  
                    ??___lmul 0028                   __pdataBANK0 0060                   __pbssCOMMON 0075  
                   ___latbits 0002                 __pcstackBANK0 0020                    parseData@i 0026  
                  parseData@j 0024              ___lwdiv@dividend 0022                      ?___aldiv 0020  
                    ?___lwdiv 0020                      ?___lwmod 0034                     __pstrings 0300  
                 ??_UART_init 0033                      ?_lcd_dat 0070               ??_random_string 003A  
                    ?_lcd_cmd 0070                      ?_lcd_str 0023                 UART_TxChar@ch 0021  
            ___lwdiv@quotient 0026                     _parseData 0517               ___aldiv@divisor 0020  
           interrupt_function 0004               ___aldiv@counter 0029                     clear_ram0 07D6  
               ??_UART_TxChar 0020                 _UART_TxString 0719  __end_ofrandom_string@charset 034F  
                 __stringbase 030F                     _stop_wait 0051             ___lmul@multiplier 0020  
                  ?_parseData 0020                ?_UART_TxString 0022                  ??_initKeyPad 0020  
         __end_of_UART_TxChar 07CD            __end_of__stringtab 0310           parseData@dataParsed 0020  
             ___lwdiv@divisor 0020               ___lwdiv@counter 0025                      __ptext10 078C  
                    __ptext11 0746                      __ptext20 03F5                      __ptext12 0387  
                    __ptext13 0683                      __ptext14 05F7                      __ptext15 07AE  
                    __ptext16 063D                      __ptext17 01F3                      __ptext18 0719  
                    __ptext19 07BF                      _lcd_init 0462              UART_TxString@str 0022  
                    _lcd_send 06EC            __end_of_initKeyPad 07BF                      _countSec 0075  
          _code_generate_send 0052                      _received 0053                      main@code 004C  
                    lcd_str@i 0026                      itoa@base 0045          random_string@charset 0310  
                    intlevel1 0000                   ??_parseData 0021             UART_init@baudrate 002F  
            ___lwmod@dividend 0036               ??_UART_TxString 0024                     stringcode 030A  
                 _UART_TxChar 07BF                      utoa@base 003C                    _OPTION_REG 0081  
             ___lwmod@divisor 0034               ___lwmod@counter 0039                      stringdir 030A  
                    stringtab 0300                  ___aldiv@sign 002A  
