

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 24 17:41:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0098                     	;# 
   182     0099                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     010C                     	;# 
   188     010D                     	;# 
   189     010E                     	;# 
   190     010F                     	;# 
   191     018C                     	;# 
   192     018D                     	;# 
   193                           
   194                           	psect	idataBANK0
   195     068D                     __pidataBANK0:
   196                           
   197                           ;initializer for _randx
   198     068D  3401               	retlw	1
   199     068E  3400               	retlw	0
   200     068F  3400               	retlw	0
   201     0690  3400               	retlw	0
   202                           
   203                           ;initializer for _numSec
   204     0691  343C               	retlw	60
   205     0692  3400               	retlw	0
   206                           
   207                           	psect	strings
   208     0232                     __pstrings:
   209     0232                     stringtab:
   210     0232                     __stringtab:
   211                           
   212                           ;	String table - string pointers are 1 byte each
   213     0232  1BFF               	btfsc	btemp+1,7
   214     0233  2A3C               	ljmp	stringcode
   215     0234  1383               	bcf	3,7
   216     0235  187F               	btfsc	btemp+1,0
   217     0236  1783               	bsf	3,7
   218     0237  0800               	movf	0,w
   219     0238  0A84               	incf	4,f
   220     0239  1903               	skipnz
   221     023A  0AFF               	incf	btemp+1,f
   222     023B  0008               	return
   223     023C                     stringcode:
   224     023C                     stringdir:
   225     023C  3002               	movlw	high stringdir
   226     023D  008A               	movwf	10
   227     023E  0804               	movf	4,w
   228     023F  0A84               	incf	4,f
   229     0240  0782               	addwf	2,f
   230     0241                     __stringbase:
   231     0241  3400               	retlw	0
   232     0242                     __end_of__stringtab:
   233     0242                     random_string@charset:
   234     0242  3461               	retlw	97
   235     0243  3462               	retlw	98
   236     0244  3463               	retlw	99
   237     0245  3464               	retlw	100
   238     0246  3465               	retlw	101
   239     0247  3466               	retlw	102
   240     0248  3467               	retlw	103
   241     0249  3468               	retlw	104
   242     024A  3469               	retlw	105
   243     024B  346A               	retlw	106
   244     024C  346B               	retlw	107
   245     024D  346C               	retlw	108
   246     024E  346D               	retlw	109
   247     024F  346E               	retlw	110
   248     0250  346F               	retlw	111
   249     0251  3470               	retlw	112
   250     0252  3471               	retlw	113
   251     0253  3472               	retlw	114
   252     0254  3473               	retlw	115
   253     0255  3474               	retlw	116
   254     0256  3475               	retlw	117
   255     0257  3476               	retlw	118
   256     0258  3477               	retlw	119
   257     0259  3478               	retlw	120
   258     025A  3479               	retlw	121
   259     025B  347A               	retlw	122
   260     025C  3441               	retlw	65
   261     025D  3442               	retlw	66
   262     025E  3443               	retlw	67
   263     025F  3444               	retlw	68
   264     0260  3445               	retlw	69
   265     0261  3446               	retlw	70
   266     0262  3447               	retlw	71
   267     0263  3448               	retlw	72
   268     0264  3449               	retlw	73
   269     0265  344A               	retlw	74
   270     0266  344B               	retlw	75
   271     0267  344C               	retlw	76
   272     0268  344D               	retlw	77
   273     0269  344E               	retlw	78
   274     026A  344F               	retlw	79
   275     026B  3450               	retlw	80
   276     026C  3451               	retlw	81
   277     026D  3452               	retlw	82
   278     026E  3453               	retlw	83
   279     026F  3454               	retlw	84
   280     0270  3455               	retlw	85
   281     0271  3456               	retlw	86
   282     0272  3457               	retlw	87
   283     0273  3458               	retlw	88
   284     0274  3459               	retlw	89
   285     0275  345A               	retlw	90
   286     0276  3430               	retlw	48
   287     0277  3431               	retlw	49
   288     0278  3432               	retlw	50
   289     0279  3433               	retlw	51
   290     027A  3434               	retlw	52
   291     027B  3435               	retlw	53
   292     027C  3436               	retlw	54
   293     027D  3437               	retlw	55
   294     027E  3438               	retlw	56
   295     027F  3439               	retlw	57
   296     0280  3400               	retlw	0
   297     0281                     __end_ofrandom_string@charset:
   298     0281                     _keys:
   299     0281  342A               	retlw	42
   300     0282  3407               	retlw	7
   301     0283  3404               	retlw	4
   302     0284  3401               	retlw	1
   303     0285  3400               	retlw	0
   304     0286  3408               	retlw	8
   305     0287  3405               	retlw	5
   306     0288  3402               	retlw	2
   307     0289  3423               	retlw	35
   308     028A  3409               	retlw	9
   309     028B  3406               	retlw	6
   310     028C  3403               	retlw	3
   311     028D                     __end_of_keys:
   312     028D                     _rowMask:
   313     028D  3401               	retlw	1
   314     028E  3402               	retlw	2
   315     028F  3404               	retlw	4
   316     0290  3408               	retlw	8
   317     0291                     __end_of_rowMask:
   318     0291                     _colMask:
   319     0291  34FE               	retlw	254
   320     0292  34FD               	retlw	253
   321     0293  34FB               	retlw	251
   322     0294                     __end_of_colMask:
   323     001A                     _RCREG	set	26
   324     0019                     _TXREG	set	25
   325     000C                     _PIR1	set	12
   326     0018                     _RCSTA	set	24
   327     0009                     _PORTEbits	set	9
   328     0008                     _PORTD	set	8
   329     0006                     _PORTB	set	6
   330     0001                     _TMR0	set	1
   331     000B                     _INTCON	set	11
   332     0065                     _RCIF	set	101
   333     008C                     _PIE1	set	140
   334     0099                     _SPBRG	set	153
   335     0098                     _TXSTA	set	152
   336     0087                     _TRISC	set	135
   337     0089                     _TRISEbits	set	137
   338     0089                     _TRISE	set	137
   339     0088                     _TRISD	set	136
   340     0081                     _OPTION_REG	set	129
   341     0086                     _TRISB	set	134
   342     0294                     STR_1:
   343     0294  3477               	retlw	119	;'w'
   344     0295  3461               	retlw	97	;'a'
   345     0296  3469               	retlw	105	;'i'
   346     0297  3474               	retlw	116	;'t'
   347     0298  3469               	retlw	105	;'i'
   348     0299  346E               	retlw	110	;'n'
   349     029A  3467               	retlw	103	;'g'
   350     029B  342E               	retlw	46	;'.'
   351     029C  342E               	retlw	46	;'.'
   352     029D  342E               	retlw	46	;'.'
   353     029E  3400               	retlw	0
   354     029F                     STR_3:
   355     029F  3477               	retlw	119	;'w'
   356     02A0  3461               	retlw	97	;'a'
   357     02A1  3469               	retlw	105	;'i'
   358     02A2  3474               	retlw	116	;'t'
   359     02A3  3469               	retlw	105	;'i'
   360     02A4  346E               	retlw	110	;'n'
   361     02A5  3467               	retlw	103	;'g'
   362     02A6  3400               	retlw	0
   363     02A7                     STR_2:
   364     02A7  3432               	retlw	50	;'2'
   365     02A8  3438               	retlw	56	;'8'
   366     02A9  3437               	retlw	55	;'7'
   367     02AA  3435               	retlw	53	;'5'
   368     02AB  3433               	retlw	51	;'3'
   369     02AC  3400               	retlw	0
   370                           
   371                           	psect	cinit
   372     0013                     start_initialization:	
   373                           ; #config settings
   374                           
   375     0013                     __initialization:
   376                           
   377                           ; Initialize objects allocated to BANK0
   378     0013  120A  118A  268D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   379     0018  00DD               	movwf	__pdataBANK0& (0+127)
   380     0019  120A  118A  268E  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   381     001E  00DE               	movwf	(__pdataBANK0+1)& (0+127)
   382     001F  120A  118A  268F  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   383     0024  00DF               	movwf	(__pdataBANK0+2)& (0+127)
   384     0025  120A  118A  2690  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   385     002A  00E0               	movwf	(__pdataBANK0+3)& (0+127)
   386     002B  120A  118A  2691  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   387     0030  00E1               	movwf	(__pdataBANK0+4)& (0+127)
   388     0031  120A  118A  2692  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   389     0036  00E2               	movwf	(__pdataBANK0+5)& (0+127)
   390                           
   391                           ; Clear objects allocated to BANK1
   392     0037  1383               	bcf	3,7	;select IRP bank0
   393     0038  30A0               	movlw	low __pbssBANK1
   394     0039  0084               	movwf	4
   395     003A  30D2               	movlw	low (__pbssBANK1+50)
   396     003B  120A  118A  2685  120A  118A  	fcall	clear_ram0
   397                           
   398                           ; Clear objects allocated to BANK0
   399     0040  304C               	movlw	low __pbssBANK0
   400     0041  0084               	movwf	4
   401     0042  305D               	movlw	low (__pbssBANK0+17)
   402     0043  120A  118A  2685  120A  118A  	fcall	clear_ram0
   403                           
   404                           ; Clear objects allocated to COMMON
   405     0048  01F5               	clrf	__pbssCOMMON& (0+127)
   406     0049  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   407     004A  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   408     004B  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   409     004C                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412     004C                     __end_of__initialization:
   413     004C  0183               	clrf	3
   414     004D  120A  118A  2850   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417     0075                     __pbssCOMMON:
   418     0075                     _countOn:
   419     0075                     	ds	2
   420     0077                     _i:
   421     0077                     	ds	2
   422                           
   423                           	psect	bssBANK0
   424     004C                     __pbssBANK0:
   425     004C                     _countSec:
   426     004C                     	ds	2
   427     004E                     _rowScan:
   428     004E                     	ds	1
   429     004F                     _colScan:
   430     004F                     	ds	1
   431     0050                     _stop_wait:
   432     0050                     	ds	1
   433     0051                     _code_generate_send:
   434     0051                     	ds	1
   435     0052                     _received:
   436     0052                     	ds	1
   437     0053                     _keyok:
   438     0053                     	ds	1
   439     0054                     _keypressed:
   440     0054                     	ds	1
   441     0055                     random_string@str:
   442     0055                     	ds	6
   443     005B                     _buff:
   444     005B                     	ds	2
   445                           
   446                           	psect	dataBANK0
   447     005D                     __pdataBANK0:
   448     005D                     _randx:
   449     005D                     	ds	4
   450     0061                     _numSec:
   451     0061                     	ds	2
   452                           
   453                           	psect	bssBANK1
   454     00A0                     __pbssBANK1:
   455     00A0                     _dato:
   456     00A0                     	ds	50
   457                           
   458                           	psect	clrtext
   459     0685                     clear_ram0:	
   460                           ;	Called with FSR containing the base address, and
   461                           ;	W with the last address+1
   462                           
   463     0685  0064               	clrwdt	;clear the watchdog before getting into this loop
   464     0686                     clrloop0:
   465     0686  0180               	clrf	0	;clear RAM location pointed to by FSR
   466     0687  0A84               	incf	4,f	;increment pointer
   467     0688  0604               	xorwf	4,w	;XOR with final address
   468     0689  1903               	btfsc	3,2	;have we reached the end yet?
   469     068A  3400               	retlw	0	;all done for this memory range, return
   470     068B  0604               	xorwf	4,w	;XOR again to restore value
   471     068C  2E86               	goto	clrloop0	;do the next byte
   472                           
   473                           	psect	cstackCOMMON
   474     0070                     __pcstackCOMMON:
   475     0070                     ?_lcd_init:
   476     0070                     ?_initKeyPad:	
   477                           ; 1 bytes @ 0x0
   478                           
   479     0070                     ?_random_string:	
   480                           ; 1 bytes @ 0x0
   481                           
   482     0070                     ?_UART_TxString:	
   483                           ; 1 bytes @ 0x0
   484                           
   485     0070                     ?_lcd_dat:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ?_lcd_cmd:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     ?_UART_TxChar:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ?_ISR:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ??_ISR:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_main:	
   501                           ; 1 bytes @ 0x0
   502                           
   503                           
   504                           ; 2 bytes @ 0x0
   505     0070                     	ds	5
   506                           
   507                           	psect	cstackBANK0
   508     0020                     __pcstackBANK0:
   509     0020                     ??_initKeyPad:
   510     0020                     ?_lcd_send:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0020                     ??_lcd_dat:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0020                     ??_lcd_cmd:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0020                     ??_UART_TxChar:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0020                     ?___lwdiv:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0020                     ?___lmul:	
   526                           ; 2 bytes @ 0x0
   527                           
   528     0020                     ?___aldiv:	
   529                           ; 4 bytes @ 0x0
   530                           
   531     0020                     lcd_send@tipo:	
   532                           ; 4 bytes @ 0x0
   533                           
   534     0020                     ___lwdiv@divisor:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0020                     ___lmul@multiplier:	
   538                           ; 2 bytes @ 0x0
   539                           
   540     0020                     ___aldiv@divisor:	
   541                           ; 4 bytes @ 0x0
   542                           
   543                           
   544                           ; 4 bytes @ 0x0
   545     0020                     	ds	1
   546     0021                     ??_lcd_send:
   547     0021                     UART_TxChar@ch:	
   548                           ; 1 bytes @ 0x1
   549                           
   550                           
   551                           ; 1 bytes @ 0x1
   552     0021                     	ds	1
   553     0022                     ??_UART_TxString:
   554     0022                     lcd_dat@val:	
   555                           ; 1 bytes @ 0x2
   556                           
   557     0022                     lcd_cmd@val:	
   558                           ; 1 bytes @ 0x2
   559                           
   560     0022                     ___lwdiv@dividend:	
   561                           ; 1 bytes @ 0x2
   562                           
   563                           
   564                           ; 2 bytes @ 0x2
   565     0022                     	ds	1
   566     0023                     ??_lcd_init:
   567     0023                     ?_lcd_str:	
   568                           ; 1 bytes @ 0x3
   569                           
   570     0023                     lcd_send@dato:	
   571                           ; 1 bytes @ 0x3
   572                           
   573     0023                     UART_TxString@str:	
   574                           ; 1 bytes @ 0x3
   575                           
   576     0023                     lcd_str@str:	
   577                           ; 1 bytes @ 0x3
   578                           
   579                           
   580                           ; 2 bytes @ 0x3
   581     0023                     	ds	1
   582     0024                     ??___lwdiv:
   583     0024                     UART_TxString@i:	
   584                           ; 1 bytes @ 0x4
   585                           
   586     0024                     ___lmul@multiplicand:	
   587                           ; 1 bytes @ 0x4
   588                           
   589     0024                     ___aldiv@dividend:	
   590                           ; 4 bytes @ 0x4
   591                           
   592                           
   593                           ; 4 bytes @ 0x4
   594     0024                     	ds	1
   595     0025                     ??_lcd_str:
   596     0025                     ___lwdiv@counter:	
   597                           ; 1 bytes @ 0x5
   598                           
   599                           
   600                           ; 1 bytes @ 0x5
   601     0025                     	ds	1
   602     0026                     lcd_str@i:
   603     0026                     ___lwdiv@quotient:	
   604                           ; 1 bytes @ 0x6
   605                           
   606                           
   607                           ; 2 bytes @ 0x6
   608     0026                     	ds	2
   609     0028                     ??___lmul:
   610     0028                     ??___aldiv:	
   611                           ; 1 bytes @ 0x8
   612                           
   613                           
   614                           ; 1 bytes @ 0x8
   615     0028                     	ds	1
   616     0029                     ___aldiv@counter:
   617     0029                     ___lmul@product:	
   618                           ; 1 bytes @ 0x9
   619                           
   620                           
   621                           ; 4 bytes @ 0x9
   622     0029                     	ds	1
   623     002A                     ___aldiv@sign:
   624                           
   625                           ; 1 bytes @ 0xA
   626     002A                     	ds	1
   627     002B                     ___aldiv@quotient:
   628                           
   629                           ; 4 bytes @ 0xB
   630     002B                     	ds	2
   631     002D                     ?_rand:
   632                           
   633                           ; 2 bytes @ 0xD
   634     002D                     	ds	2
   635     002F                     ?_UART_init:
   636     002F                     ??_rand:	
   637                           ; 1 bytes @ 0xF
   638                           
   639     002F                     UART_init@baudrate:	
   640                           ; 1 bytes @ 0xF
   641                           
   642                           
   643                           ; 4 bytes @ 0xF
   644     002F                     	ds	4
   645     0033                     ??_UART_init:
   646                           
   647                           ; 1 bytes @ 0x13
   648     0033                     	ds	1
   649     0034                     ?___lwmod:
   650     0034                     ___lwmod@divisor:	
   651                           ; 2 bytes @ 0x14
   652                           
   653                           
   654                           ; 2 bytes @ 0x14
   655     0034                     	ds	2
   656     0036                     ___lwmod@dividend:
   657                           
   658                           ; 2 bytes @ 0x16
   659     0036                     	ds	2
   660     0038                     ??___lwmod:
   661                           
   662                           ; 1 bytes @ 0x18
   663     0038                     	ds	1
   664     0039                     ___lwmod@counter:
   665                           
   666                           ; 1 bytes @ 0x19
   667     0039                     	ds	1
   668     003A                     ??_random_string:
   669     003A                     ?_utoa:	
   670                           ; 1 bytes @ 0x1A
   671                           
   672     003A                     utoa@val:	
   673                           ; 1 bytes @ 0x1A
   674                           
   675                           
   676                           ; 2 bytes @ 0x1A
   677     003A                     	ds	1
   678     003B                     random_string@index:
   679                           
   680                           ; 2 bytes @ 0x1B
   681     003B                     	ds	1
   682     003C                     utoa@base:
   683                           
   684                           ; 2 bytes @ 0x1C
   685     003C                     	ds	1
   686     003D                     random_string@i:
   687                           
   688                           ; 2 bytes @ 0x1D
   689     003D                     	ds	1
   690     003E                     ??_utoa:
   691                           
   692                           ; 1 bytes @ 0x1E
   693     003E                     	ds	1
   694     003F                     utoa@v:
   695                           
   696                           ; 2 bytes @ 0x1F
   697     003F                     	ds	2
   698     0041                     utoa@c:
   699                           
   700                           ; 1 bytes @ 0x21
   701     0041                     	ds	1
   702     0042                     utoa@buf:
   703                           
   704                           ; 1 bytes @ 0x22
   705     0042                     	ds	1
   706     0043                     ?_itoa:
   707     0043                     itoa@val:	
   708                           ; 1 bytes @ 0x23
   709                           
   710                           
   711                           ; 2 bytes @ 0x23
   712     0043                     	ds	2
   713     0045                     itoa@base:
   714                           
   715                           ; 2 bytes @ 0x25
   716     0045                     	ds	2
   717     0047                     ??_itoa:
   718                           
   719                           ; 1 bytes @ 0x27
   720     0047                     	ds	1
   721     0048                     itoa@buf:
   722                           
   723                           ; 1 bytes @ 0x28
   724     0048                     	ds	1
   725     0049                     ??_main:
   726                           
   727                           ; 1 bytes @ 0x29
   728     0049                     	ds	2
   729     004B                     main@code:
   730                           
   731                           ; 1 bytes @ 0x2B
   732     004B                     	ds	1
   733                           
   734                           	psect	maintext
   735     0050                     __pmaintext:	
   736 ;;
   737 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   738 ;;
   739 ;; *************** function _main *****************
   740 ;; Defined at:
   741 ;;		line 124 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  code            1   43[BANK0 ] PTR unsigned char 
   746 ;;		 -> random_string@str(6), 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  2   94[None  ] int 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : B00/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       1       0       0       0
   758 ;;      Temps:          0       2       0       0       0
   759 ;;      Totals:         0       3       0       0       0
   760 ;;Total ram usage:        3 bytes
   761 ;; Hardware stack levels required when called: 4
   762 ;; This function calls:
   763 ;;		_UART_TxString
   764 ;;		_UART_init
   765 ;;		_initKeyPad
   766 ;;		_itoa
   767 ;;		_lcd_init
   768 ;;		_lcd_send
   769 ;;		_lcd_str
   770 ;;		_random_string
   771 ;; This function is called by:
   772 ;;		Startup code after reset
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776     0050                     _main:	
   777                           ;psect for function _main
   778                           
   779     0050                     l1915:	
   780                           ;incstack = 0
   781                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   782                           
   783                           
   784                           ;main.c: 127:     TRISB = 0x00;
   785     0050  1683               	bsf	3,5	;RP0=1, select bank1
   786     0051  1303               	bcf	3,6	;RP1=0, select bank1
   787     0052  0186               	clrf	6	;volatile
   788     0053                     l1917:
   789                           
   790                           ;main.c: 128:     INTCON |= 0xA0;
   791     0053  30A0               	movlw	160
   792     0054  1283               	bcf	3,5	;RP0=0, select bank0
   793     0055  1303               	bcf	3,6	;RP1=0, select bank0
   794     0056  00C9               	movwf	??_main
   795     0057  0849               	movf	??_main,w
   796     0058  048B               	iorwf	11,f	;volatile
   797     0059                     l1919:
   798                           
   799                           ;main.c: 129:     OPTION_REG = 0x05;
   800     0059  3005               	movlw	5
   801     005A  1683               	bsf	3,5	;RP0=1, select bank1
   802     005B  1303               	bcf	3,6	;RP1=0, select bank1
   803     005C  0081               	movwf	1	;volatile
   804     005D                     l1921:
   805                           
   806                           ;main.c: 130:     TMR0 = 6;
   807     005D  3006               	movlw	6
   808     005E  1283               	bcf	3,5	;RP0=0, select bank0
   809     005F  1303               	bcf	3,6	;RP1=0, select bank0
   810     0060  0081               	movwf	1	;volatile
   811     0061                     l1923:
   812                           
   813                           ;main.c: 133:     UART_init(115200);
   814     0061  3000               	movlw	0
   815     0062  00B2               	movwf	UART_init@baudrate+3
   816     0063  3001               	movlw	1
   817     0064  00B1               	movwf	UART_init@baudrate+2
   818     0065  30C2               	movlw	194
   819     0066  00B0               	movwf	UART_init@baudrate+1
   820     0067  3000               	movlw	0
   821     0068  00AF               	movwf	UART_init@baudrate
   822     0069  120A  118A  2500  120A  118A  	fcall	_UART_init
   823     006E                     l1925:
   824                           
   825                           ;main.c: 134:     lcd_init();
   826     006E  120A  118A  2388  120A  118A  	fcall	_lcd_init
   827     0073                     l1927:
   828                           
   829                           ;main.c: 135:     initKeyPad();
   830     0073  120A  118A  2666  120A  118A  	fcall	_initKeyPad
   831     0078                     l1929:
   832                           
   833                           ;main.c: 137:     lcd_send(0x01, 0);
   834     0078  1283               	bcf	3,5	;RP0=0, select bank0
   835     0079  1303               	bcf	3,6	;RP1=0, select bank0
   836     007A  01A0               	clrf	lcd_send@tipo
   837     007B  3001               	movlw	1
   838     007C  120A  118A  25AF  120A  118A  	fcall	_lcd_send
   839     0081                     l1931:
   840                           
   841                           ;main.c: 138:     lcd_str("waiting...");
   842     0081  3053               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   843     0082  1283               	bcf	3,5	;RP0=0, select bank0
   844     0083  1303               	bcf	3,6	;RP1=0, select bank0
   845     0084  00A3               	movwf	lcd_str@str
   846     0085  3080               	movlw	128
   847     0086  00A4               	movwf	lcd_str@str+1
   848     0087  120A  118A  2582  120A  118A  	fcall	_lcd_str
   849     008C                     l1933:
   850                           
   851                           ;main.c: 142:     {;main.c: 143:         TRISB = 0x00;
   852     008C  1683               	bsf	3,5	;RP0=1, select bank1
   853     008D  1303               	bcf	3,6	;RP1=0, select bank1
   854     008E  0186               	clrf	6	;volatile
   855     008F                     l1935:
   856                           
   857                           ;main.c: 144:         TRISD = 0x0F;
   858     008F  300F               	movlw	15
   859     0090  0088               	movwf	8	;volatile
   860     0091                     l1937:
   861                           
   862                           ;main.c: 148:         for (colScan = 0; colScan < 3; colScan++)
   863     0091  1283               	bcf	3,5	;RP0=0, select bank0
   864     0092  1303               	bcf	3,6	;RP1=0, select bank0
   865     0093  01CF               	clrf	_colScan
   866     0094                     l1943:
   867                           
   868                           ;main.c: 149:         {;main.c: 151:             PORTB = PORTB | 0x07;
   869     0094  0806               	movf	6,w	;volatile
   870     0095  3807               	iorlw	7
   871     0096  0086               	movwf	6	;volatile
   872     0097                     l1945:
   873                           
   874                           ;main.c: 152:             PORTB = PORTB & colMask[colScan];
   875     0097  084F               	movf	_colScan,w
   876     0098  3E50               	addlw	low ((_colMask-__stringbase)| (0+32768))
   877     0099  0084               	movwf	4
   878     009A  120A  118A  223C  120A  118A  	fcall	stringdir
   879     009F  0506               	andwf	6,w	;volatile
   880     00A0  0086               	movwf	6	;volatile
   881     00A1                     l1947:
   882                           
   883                           ;main.c: 154:             for (rowScan = 0; rowScan < 4; rowScan++)
   884     00A1  01CE               	clrf	_rowScan
   885     00A2                     l1953:
   886                           
   887                           ;main.c: 155:             {;main.c: 156:                 if (!(PORTD & rowMask[rowScan])
      +                          )
   888     00A2  084E               	movf	_rowScan,w
   889     00A3  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   890     00A4  0084               	movwf	4
   891     00A5  120A  118A  223C  120A  118A  	fcall	stringdir
   892     00AA  0508               	andwf	8,w	;volatile
   893     00AB  1D03               	btfss	3,2
   894     00AC  28AE               	goto	u1491
   895     00AD  28AF               	goto	u1490
   896     00AE                     u1491:
   897     00AE  28D6               	goto	l100
   898     00AF                     u1490:
   899     00AF                     l1955:
   900                           
   901                           ;main.c: 157:                 {;main.c: 158:                     _delay((unsigned long)(
      +                          (5)*(20000000/4000.0)));
   902     00AF  3021               	movlw	33
   903     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   904     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   905     00B2  00CA               	movwf	??_main+1
   906     00B3  3075               	movlw	117
   907     00B4  00C9               	movwf	??_main
   908     00B5                     u1617:
   909     00B5  0BC9               	decfsz	??_main,f
   910     00B6  28B5               	goto	u1617
   911     00B7  0BCA               	decfsz	??_main+1,f
   912     00B8  28B5               	goto	u1617
   913     00B9  28BA               	nop2
   914     00BA                     l1957:
   915                           
   916                           ;main.c: 160:                     if (!(PORTD & rowMask[rowScan]))
   917     00BA  1283               	bcf	3,5	;RP0=0, select bank0
   918     00BB  1303               	bcf	3,6	;RP1=0, select bank0
   919     00BC  084E               	movf	_rowScan,w
   920     00BD  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   921     00BE  0084               	movwf	4
   922     00BF  120A  118A  223C  120A  118A  	fcall	stringdir
   923     00C4  0508               	andwf	8,w	;volatile
   924     00C5  1D03               	btfss	3,2
   925     00C6  28C8               	goto	u1501
   926     00C7  28C9               	goto	u1500
   927     00C8                     u1501:
   928     00C8  28D6               	goto	l100
   929     00C9                     u1500:
   930     00C9                     l1959:
   931                           
   932                           ;main.c: 161:                     {;main.c: 163:                         keypressed = ro
      +                          wScan + (4 * colScan);
   933     00C9  084F               	movf	_colScan,w
   934     00CA  00C9               	movwf	??_main
   935     00CB  3002               	movlw	2
   936     00CC                     u1515:
   937     00CC  1003               	clrc
   938     00CD  0DC9               	rlf	??_main,f
   939     00CE  3EFF               	addlw	-1
   940     00CF  1D03               	skipz
   941     00D0  28CC               	goto	u1515
   942     00D1  084E               	movf	_rowScan,w
   943     00D2  0749               	addwf	??_main,w
   944     00D3  00D4               	movwf	_keypressed
   945     00D4                     l1961:
   946                           
   947                           ;main.c: 164:                         keyok = 1;
   948     00D4  01D3               	clrf	_keyok
   949     00D5  0AD3               	incf	_keyok,f
   950     00D6                     l100:	
   951                           ;main.c: 166:                 }
   952                           
   953                           
   954                           ;main.c: 167:             }
   955     00D6  3001               	movlw	1
   956     00D7  00C9               	movwf	??_main
   957     00D8  0849               	movf	??_main,w
   958     00D9  07CE               	addwf	_rowScan,f
   959     00DA                     l1963:
   960     00DA  3004               	movlw	4
   961     00DB  024E               	subwf	_rowScan,w
   962     00DC  1C03               	skipc
   963     00DD  28DF               	goto	u1521
   964     00DE  28E0               	goto	u1520
   965     00DF                     u1521:
   966     00DF  28A2               	goto	l1953
   967     00E0                     u1520:
   968     00E0                     l1965:
   969                           
   970                           ;main.c: 169:             if (keyok)
   971     00E0  0853               	movf	_keyok,w
   972     00E1  1903               	btfsc	3,2
   973     00E2  28E4               	goto	u1531
   974     00E3  28E5               	goto	u1530
   975     00E4                     u1531:
   976     00E4  293A               	goto	l1993
   977     00E5                     u1530:
   978     00E5                     l1967:
   979                           
   980                           ;main.c: 170:             {;main.c: 172:                 if(keypressed == 8)
   981     00E5  3008               	movlw	8
   982     00E6  0654               	xorwf	_keypressed,w
   983     00E7  1D03               	btfss	3,2
   984     00E8  28EA               	goto	u1541
   985     00E9  28EB               	goto	u1540
   986     00EA                     u1541:
   987     00EA  290F               	goto	l1979
   988     00EB                     u1540:
   989     00EB                     l1969:
   990                           
   991                           ;main.c: 173:                 {;main.c: 175:                     lcd_send(0x01, 0);
   992     00EB  01A0               	clrf	lcd_send@tipo
   993     00EC  3001               	movlw	1
   994     00ED  120A  118A  25AF  120A  118A  	fcall	_lcd_send
   995     00F2                     l1971:
   996                           
   997                           ;main.c: 177:                     char* code = random_string();
   998     00F2  120A  118A  242C  120A  118A  	fcall	_random_string
   999     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1000     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1001     00F9  00CB               	movwf	main@code
  1002     00FA                     l1973:
  1003                           
  1004                           ;main.c: 178:                     lcd_str(code);
  1005     00FA  084B               	movf	main@code,w
  1006     00FB  00A3               	movwf	lcd_str@str
  1007     00FC  3000               	movlw	0
  1008     00FD  00A4               	movwf	lcd_str@str+1
  1009     00FE  120A  118A  2582  120A  118A  	fcall	_lcd_str
  1010     0103                     l1975:
  1011                           
  1012                           ;main.c: 181:                     UART_TxString(code);
  1013     0103  1283               	bcf	3,5	;RP0=0, select bank0
  1014     0104  1303               	bcf	3,6	;RP1=0, select bank0
  1015     0105  084B               	movf	main@code,w
  1016     0106  120A  118A  2644  120A  118A  	fcall	_UART_TxString
  1017     010B                     l1977:
  1018                           
  1019                           ;main.c: 184:                     code_generate_send = 1;
  1020     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1021     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1022     010D  01D1               	clrf	_code_generate_send
  1023     010E  0AD1               	incf	_code_generate_send,f
  1024     010F                     l1979:
  1025                           
  1026                           ;main.c: 188:                 if (keypressed == 7)
  1027     010F  3007               	movlw	7
  1028     0110  0654               	xorwf	_keypressed,w
  1029     0111  1D03               	btfss	3,2
  1030     0112  2914               	goto	u1551
  1031     0113  2915               	goto	u1550
  1032     0114                     u1551:
  1033     0114  2927               	goto	l1985
  1034     0115                     u1550:
  1035     0115                     l1981:
  1036                           
  1037                           ;main.c: 189:                 {;main.c: 190:                     lcd_send(0x01, 0);
  1038     0115  01A0               	clrf	lcd_send@tipo
  1039     0116  3001               	movlw	1
  1040     0117  120A  118A  25AF  120A  118A  	fcall	_lcd_send
  1041     011C                     l1983:
  1042                           
  1043                           ;main.c: 191:                     lcd_str("28753");
  1044     011C  3066               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1045     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1046     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1047     011F  00A3               	movwf	lcd_str@str
  1048     0120  3080               	movlw	128
  1049     0121  00A4               	movwf	lcd_str@str+1
  1050     0122  120A  118A  2582  120A  118A  	fcall	_lcd_str
  1051     0127                     l1985:
  1052                           
  1053                           ;main.c: 194:                 keyok = 0;
  1054     0127  1283               	bcf	3,5	;RP0=0, select bank0
  1055     0128  1303               	bcf	3,6	;RP1=0, select bank0
  1056     0129  01D3               	clrf	_keyok
  1057     012A                     l1987:
  1058                           
  1059                           ;main.c: 197:                 PORTD = PORTD | 0x0F;
  1060     012A  0808               	movf	8,w	;volatile
  1061     012B  380F               	iorlw	15
  1062     012C  0088               	movwf	8	;volatile
  1063                           
  1064                           ;main.c: 198:                 while ((PORTD & 0x0F) != 0x0F)
  1065     012D  2931               	goto	l1991
  1066     012E                     l1989:
  1067                           
  1068                           ;main.c: 199:                 {;main.c: 200:                     PORTD = PORTD | 0x0F;
  1069     012E  0808               	movf	8,w	;volatile
  1070     012F  380F               	iorlw	15
  1071     0130  0088               	movwf	8	;volatile
  1072     0131                     l1991:	
  1073                           ;main.c: 201:                     continue;
  1074                           
  1075                           
  1076                           ;main.c: 198:                 while ((PORTD & 0x0F) != 0x0F)
  1077     0131  300F               	movlw	15
  1078     0132  0508               	andwf	8,w	;volatile
  1079     0133  00C9               	movwf	??_main
  1080     0134  300F               	movlw	15
  1081     0135  0649               	xorwf	??_main,w
  1082     0136  1D03               	btfss	3,2
  1083     0137  2939               	goto	u1561
  1084     0138  293A               	goto	u1560
  1085     0139                     u1561:
  1086     0139  292E               	goto	l1989
  1087     013A                     u1560:
  1088     013A                     l1993:
  1089                           
  1090                           ;main.c: 207:         }
  1091     013A  3001               	movlw	1
  1092     013B  00C9               	movwf	??_main
  1093     013C  0849               	movf	??_main,w
  1094     013D  07CF               	addwf	_colScan,f
  1095     013E                     l1995:
  1096     013E  3003               	movlw	3
  1097     013F  024F               	subwf	_colScan,w
  1098     0140  1C03               	skipc
  1099     0141  2943               	goto	u1571
  1100     0142  2944               	goto	u1570
  1101     0143                     u1571:
  1102     0143  2894               	goto	l1943
  1103     0144                     u1570:
  1104     0144                     l1997:
  1105                           
  1106                           ;main.c: 209:         if(code_generate_send)
  1107     0144  0851               	movf	_code_generate_send,w
  1108     0145  1903               	btfsc	3,2
  1109     0146  2948               	goto	u1581
  1110     0147  2949               	goto	u1580
  1111     0148                     u1581:
  1112     0148  288C               	goto	l1933
  1113     0149                     u1580:
  1114     0149                     l1999:
  1115                           
  1116                           ;main.c: 210:         {;main.c: 211:             if(received)
  1117     0149  0852               	movf	_received,w
  1118     014A  1903               	btfsc	3,2
  1119     014B  294D               	goto	u1591
  1120     014C  294E               	goto	u1590
  1121     014D                     u1591:
  1122     014D  2951               	goto	l2003
  1123     014E                     u1590:
  1124     014E                     l2001:
  1125                           
  1126                           ;main.c: 212:             {;main.c: 241:                 code_generate_send = 0;
  1127     014E  01D1               	clrf	_code_generate_send
  1128                           
  1129                           ;main.c: 242:                 received = 0;
  1130     014F  01D2               	clrf	_received
  1131                           
  1132                           ;main.c: 243:             }
  1133     0150  288C               	goto	l1933
  1134     0151                     l2003:
  1135                           
  1136                           ;main.c: 245:             {;main.c: 246:                 itoa(buff, numSec, 10);
  1137     0151  0862               	movf	_numSec+1,w
  1138     0152  00C4               	movwf	itoa@val+1
  1139     0153  0861               	movf	_numSec,w
  1140     0154  00C3               	movwf	itoa@val
  1141     0155  300A               	movlw	10
  1142     0156  00C5               	movwf	itoa@base
  1143     0157  3000               	movlw	0
  1144     0158  00C6               	movwf	itoa@base+1
  1145     0159  305B               	movlw	(low (_buff| 0))& (0+255)
  1146     015A  120A  118A  25DC  120A  118A  	fcall	_itoa
  1147     015F                     l2005:
  1148                           
  1149                           ;main.c: 247:                 lcd_send(0xC0, 0);
  1150     015F  1283               	bcf	3,5	;RP0=0, select bank0
  1151     0160  1303               	bcf	3,6	;RP1=0, select bank0
  1152     0161  01A0               	clrf	lcd_send@tipo
  1153     0162  30C0               	movlw	192
  1154     0163  120A  118A  25AF  120A  118A  	fcall	_lcd_send
  1155     0168                     l2007:
  1156                           
  1157                           ;main.c: 248:                 lcd_str(buff);
  1158     0168  305B               	movlw	(low (_buff| 0))& (0+255)
  1159     0169  1283               	bcf	3,5	;RP0=0, select bank0
  1160     016A  1303               	bcf	3,6	;RP1=0, select bank0
  1161     016B  00A3               	movwf	lcd_str@str
  1162     016C  3000               	movlw	0
  1163     016D  00A4               	movwf	lcd_str@str+1
  1164     016E  120A  118A  2582  120A  118A  	fcall	_lcd_str
  1165     0173                     l2009:
  1166                           
  1167                           ;main.c: 250:                 if(stop_wait)
  1168     0173  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0174  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0175  0850               	movf	_stop_wait,w
  1171     0176  1903               	btfsc	3,2
  1172     0177  2979               	goto	u1601
  1173     0178  297A               	goto	u1600
  1174     0179                     u1601:
  1175     0179  2991               	goto	l108
  1176     017A                     u1600:
  1177     017A                     l2011:
  1178                           
  1179                           ;main.c: 251:                 {;main.c: 252:                     lcd_send(0x01, 0);
  1180     017A  01A0               	clrf	lcd_send@tipo
  1181     017B  3001               	movlw	1
  1182     017C  120A  118A  25AF  120A  118A  	fcall	_lcd_send
  1183     0181                     l2013:
  1184                           
  1185                           ;main.c: 253:                     lcd_str("waiting");
  1186     0181  305E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1187     0182  1283               	bcf	3,5	;RP0=0, select bank0
  1188     0183  1303               	bcf	3,6	;RP1=0, select bank0
  1189     0184  00A3               	movwf	lcd_str@str
  1190     0185  3080               	movlw	128
  1191     0186  00A4               	movwf	lcd_str@str+1
  1192     0187  120A  118A  2582  120A  118A  	fcall	_lcd_str
  1193     018C                     l2015:
  1194                           
  1195                           ;main.c: 254:                     stop_wait = 0;
  1196     018C  1283               	bcf	3,5	;RP0=0, select bank0
  1197     018D  1303               	bcf	3,6	;RP1=0, select bank0
  1198     018E  01D0               	clrf	_stop_wait
  1199     018F                     l2017:
  1200                           
  1201                           ;main.c: 255:                     code_generate_send = 0;
  1202     018F  01D1               	clrf	_code_generate_send
  1203     0190  288C               	goto	l1933
  1204     0191                     l108:	
  1205                           ;main.c: 258:         }
  1206                           
  1207     0191  288C               	goto	l1933
  1208     0192  120A  118A  2810   	ljmp	start
  1209     0195                     __end_of_main:
  1210                           
  1211                           	psect	text1
  1212     042C                     __ptext1:	
  1213 ;; *************** function _random_string *****************
  1214 ;; Defined at:
  1215 ;;		line 355 in file "main.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  index           2   27[BANK0 ] int 
  1220 ;;  i               2   29[BANK0 ] int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      PTR unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         0       4       0       0       0
  1232 ;;      Temps:          0       1       0       0       0
  1233 ;;      Totals:         0       5       0       0       0
  1234 ;;Total ram usage:        5 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 3
  1237 ;; This function calls:
  1238 ;;		___lwmod
  1239 ;;		_rand
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245     042C                     _random_string:	
  1246                           ;psect for function _random_string
  1247                           
  1248     042C                     l1873:	
  1249                           ;incstack = 0
  1250                           ; Regs used in _random_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1251                           
  1252                           
  1253                           ;main.c: 356:     static char str[6];;main.c: 357:     const char charset[] = "abcdefghi
      +                          jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";;main.c: 362:     for (int i = 0;
      +                           i < 5; i++) {
  1254     042C  1283               	bcf	3,5	;RP0=0, select bank0
  1255     042D  1303               	bcf	3,6	;RP1=0, select bank0
  1256     042E  01BD               	clrf	random_string@i
  1257     042F  01BE               	clrf	random_string@i+1
  1258     0430                     l1879:
  1259                           
  1260                           ;main.c: 363:         int index = rand() % (sizeof(charset) - 1);
  1261     0430  303E               	movlw	62
  1262     0431  1283               	bcf	3,5	;RP0=0, select bank0
  1263     0432  1303               	bcf	3,6	;RP1=0, select bank0
  1264     0433  00B4               	movwf	___lwmod@divisor
  1265     0434  3000               	movlw	0
  1266     0435  00B5               	movwf	___lwmod@divisor+1
  1267     0436  120A  118A  2473  120A  118A  	fcall	_rand
  1268     043B  1283               	bcf	3,5	;RP0=0, select bank0
  1269     043C  1303               	bcf	3,6	;RP1=0, select bank0
  1270     043D  082E               	movf	?_rand+1,w
  1271     043E  00B7               	movwf	___lwmod@dividend+1
  1272     043F  082D               	movf	?_rand,w
  1273     0440  00B6               	movwf	___lwmod@dividend
  1274     0441  120A  118A  2546  120A  118A  	fcall	___lwmod
  1275     0446  1283               	bcf	3,5	;RP0=0, select bank0
  1276     0447  1303               	bcf	3,6	;RP1=0, select bank0
  1277     0448  0835               	movf	?___lwmod+1,w
  1278     0449  00BC               	movwf	random_string@index+1
  1279     044A  0834               	movf	?___lwmod,w
  1280     044B  00BB               	movwf	random_string@index
  1281     044C                     l1881:
  1282                           
  1283                           ;main.c: 364:         str[i] = charset[index];
  1284     044C  083B               	movf	random_string@index,w
  1285     044D  3E01               	addlw	low ((random_string@charset-__stringbase)| (0+32768))
  1286     044E  0084               	movwf	4
  1287     044F  120A  118A  223C  120A  118A  	fcall	stringdir
  1288     0454  00BA               	movwf	??_random_string
  1289     0455  083D               	movf	random_string@i,w
  1290     0456  3E55               	addlw	(low (random_string@str| 0))& (0+255)
  1291     0457  0084               	movwf	4
  1292     0458  083A               	movf	??_random_string,w
  1293     0459  1383               	bcf	3,7	;select IRP bank0
  1294     045A  0080               	movwf	0
  1295     045B                     l1883:
  1296                           
  1297                           ;main.c: 365:     }
  1298     045B  3001               	movlw	1
  1299     045C  07BD               	addwf	random_string@i,f
  1300     045D  1803               	skipnc
  1301     045E  0ABE               	incf	random_string@i+1,f
  1302     045F  3000               	movlw	0
  1303     0460  07BE               	addwf	random_string@i+1,f
  1304     0461                     l1885:
  1305     0461  083E               	movf	random_string@i+1,w
  1306     0462  3A80               	xorlw	128
  1307     0463  00FF               	movwf	btemp+1
  1308     0464  3080               	movlw	128
  1309     0465  027F               	subwf	btemp+1,w
  1310     0466  1D03               	skipz
  1311     0467  2C6A               	goto	u1465
  1312     0468  3005               	movlw	5
  1313     0469  023D               	subwf	random_string@i,w
  1314     046A                     u1465:
  1315     046A  1C03               	skipc
  1316     046B  2C6D               	goto	u1461
  1317     046C  2C6E               	goto	u1460
  1318     046D                     u1461:
  1319     046D  2C30               	goto	l1879
  1320     046E                     u1460:
  1321     046E                     l1887:
  1322                           
  1323                           ;main.c: 367:     str[5] = '\0';
  1324     046E  1283               	bcf	3,5	;RP0=0, select bank0
  1325     046F  1303               	bcf	3,6	;RP1=0, select bank0
  1326     0470  01DA               	clrf	random_string@str+5
  1327     0471                     l1889:
  1328                           
  1329                           ;main.c: 369:     return str;
  1330     0471  3055               	movlw	(low (random_string@str| 0))& (0+255)
  1331     0472                     l144:
  1332     0472  0008               	return
  1333     0473                     __end_of_random_string:
  1334                           
  1335                           	psect	text2
  1336     0473                     __ptext2:	
  1337 ;; *************** function _rand *****************
  1338 ;; Defined at:
  1339 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2   13[BANK0 ] int 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0, pclath, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       2       0       0       0
  1354 ;;      Locals:         0       0       0       0       0
  1355 ;;      Temps:          0       5       0       0       0
  1356 ;;      Totals:         0       7       0       0       0
  1357 ;;Total ram usage:        7 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 2
  1360 ;; This function calls:
  1361 ;;		___lmul
  1362 ;; This function is called by:
  1363 ;;		_random_string
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367     0473                     _rand:	
  1368                           ;psect for function _rand
  1369                           
  1370     0473                     l1713:	
  1371                           ;incstack = 0
  1372                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1373                           
  1374     0473  1283               	bcf	3,5	;RP0=0, select bank0
  1375     0474  1303               	bcf	3,6	;RP1=0, select bank0
  1376     0475  0860               	movf	_randx+3,w
  1377     0476  00A3               	movwf	___lmul@multiplier+3
  1378     0477  085F               	movf	_randx+2,w
  1379     0478  00A2               	movwf	___lmul@multiplier+2
  1380     0479  085E               	movf	_randx+1,w
  1381     047A  00A1               	movwf	___lmul@multiplier+1
  1382     047B  085D               	movf	_randx,w
  1383     047C  00A0               	movwf	___lmul@multiplier
  1384     047D  3041               	movlw	65
  1385     047E  00A7               	movwf	___lmul@multiplicand+3
  1386     047F  30C6               	movlw	198
  1387     0480  00A6               	movwf	___lmul@multiplicand+2
  1388     0481  304E               	movlw	78
  1389     0482  00A5               	movwf	___lmul@multiplicand+1
  1390     0483  306D               	movlw	109
  1391     0484  00A4               	movwf	___lmul@multiplicand
  1392     0485  120A  118A  23E4  120A  118A  	fcall	___lmul
  1393     048A  1283               	bcf	3,5	;RP0=0, select bank0
  1394     048B  1303               	bcf	3,6	;RP1=0, select bank0
  1395     048C  0823               	movf	?___lmul+3,w
  1396     048D  00E0               	movwf	_randx+3
  1397     048E  0822               	movf	?___lmul+2,w
  1398     048F  00DF               	movwf	_randx+2
  1399     0490  0821               	movf	?___lmul+1,w
  1400     0491  00DE               	movwf	_randx+1
  1401     0492  0820               	movf	?___lmul,w
  1402     0493  00DD               	movwf	_randx
  1403     0494                     l1715:
  1404     0494  3039               	movlw	57
  1405     0495  07DD               	addwf	_randx,f
  1406     0496  3030               	movlw	48
  1407     0497  1803               	skipnc
  1408     0498  3031               	movlw	49
  1409     0499  07DE               	addwf	_randx+1,f
  1410     049A  3000               	movlw	0
  1411     049B  1803               	skipnc
  1412     049C  3001               	movlw	1
  1413     049D  07DF               	addwf	_randx+2,f
  1414     049E  3000               	movlw	0
  1415     049F  1803               	skipnc
  1416     04A0  3001               	movlw	1
  1417     04A1  07E0               	addwf	_randx+3,f
  1418     04A2                     l1717:
  1419     04A2  085D               	movf	_randx,w
  1420     04A3  00AF               	movwf	??_rand
  1421     04A4  085E               	movf	_randx+1,w
  1422     04A5  00B0               	movwf	??_rand+1
  1423     04A6  085F               	movf	_randx+2,w
  1424     04A7  00B1               	movwf	??_rand+2
  1425     04A8  0860               	movf	_randx+3,w
  1426     04A9  00B2               	movwf	??_rand+3
  1427     04AA  3010               	movlw	16
  1428     04AB  00B3               	movwf	??_rand+4
  1429     04AC                     u1295:
  1430     04AC  0D32               	rlf	??_rand+3,w
  1431     04AD  0CB2               	rrf	??_rand+3,f
  1432     04AE  0CB1               	rrf	??_rand+2,f
  1433     04AF  0CB0               	rrf	??_rand+1,f
  1434     04B0  0CAF               	rrf	??_rand,f
  1435     04B1                     u1290:
  1436     04B1  0BB3               	decfsz	??_rand+4,f
  1437     04B2  2CAC               	goto	u1295
  1438     04B3  30FF               	movlw	255
  1439     04B4  052F               	andwf	??_rand,w
  1440     04B5  00AD               	movwf	?_rand
  1441     04B6  307F               	movlw	127
  1442     04B7  0530               	andwf	??_rand+1,w
  1443     04B8  00AE               	movwf	?_rand+1
  1444     04B9                     l725:
  1445     04B9  0008               	return
  1446     04BA                     __end_of_rand:
  1447                           
  1448                           	psect	text3
  1449     03E4                     __ptext3:	
  1450 ;; *************** function ___lmul *****************
  1451 ;; Defined at:
  1452 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1455 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  product         4    9[BANK0 ] unsigned long 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  4    0[BANK0 ] unsigned long 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       8       0       0       0
  1468 ;;      Locals:         0       4       0       0       0
  1469 ;;      Temps:          0       1       0       0       0
  1470 ;;      Totals:         0      13       0       0       0
  1471 ;;Total ram usage:       13 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_rand
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481     03E4                     ___lmul:	
  1482                           ;psect for function ___lmul
  1483                           
  1484     03E4                     l1631:	
  1485                           ;incstack = 0
  1486                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1487                           
  1488     03E4  3000               	movlw	0
  1489     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1490     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1491     03E7  00AC               	movwf	___lmul@product+3
  1492     03E8  3000               	movlw	0
  1493     03E9  00AB               	movwf	___lmul@product+2
  1494     03EA  3000               	movlw	0
  1495     03EB  00AA               	movwf	___lmul@product+1
  1496     03EC  3000               	movlw	0
  1497     03ED  00A9               	movwf	___lmul@product
  1498     03EE                     l1633:
  1499     03EE  1C20               	btfss	___lmul@multiplier,0
  1500     03EF  2BF1               	goto	u1111
  1501     03F0  2BF2               	goto	u1110
  1502     03F1                     u1111:
  1503     03F1  2C09               	goto	l1637
  1504     03F2                     u1110:
  1505     03F2                     l1635:
  1506     03F2  0824               	movf	___lmul@multiplicand,w
  1507     03F3  07A9               	addwf	___lmul@product,f
  1508     03F4  0825               	movf	___lmul@multiplicand+1,w
  1509     03F5  1103               	clrz
  1510     03F6  1803               	skipnc
  1511     03F7  3E01               	addlw	1
  1512     03F8  1903               	skipnz
  1513     03F9  2BFB               	goto	u1121
  1514     03FA  07AA               	addwf	___lmul@product+1,f
  1515     03FB                     u1121:
  1516     03FB  0826               	movf	___lmul@multiplicand+2,w
  1517     03FC  1103               	clrz
  1518     03FD  1803               	skipnc
  1519     03FE  3E01               	addlw	1
  1520     03FF  1903               	skipnz
  1521     0400  2C02               	goto	u1122
  1522     0401  07AB               	addwf	___lmul@product+2,f
  1523     0402                     u1122:
  1524     0402  0827               	movf	___lmul@multiplicand+3,w
  1525     0403  1103               	clrz
  1526     0404  1803               	skipnc
  1527     0405  3E01               	addlw	1
  1528     0406  1903               	skipnz
  1529     0407  2C09               	goto	u1123
  1530     0408  07AC               	addwf	___lmul@product+3,f
  1531     0409                     u1123:
  1532     0409                     l1637:
  1533     0409  3001               	movlw	1
  1534     040A  00A8               	movwf	??___lmul
  1535     040B                     u1135:
  1536     040B  1003               	clrc
  1537     040C  0DA4               	rlf	___lmul@multiplicand,f
  1538     040D  0DA5               	rlf	___lmul@multiplicand+1,f
  1539     040E  0DA6               	rlf	___lmul@multiplicand+2,f
  1540     040F  0DA7               	rlf	___lmul@multiplicand+3,f
  1541     0410  0BA8               	decfsz	??___lmul,f
  1542     0411  2C0B               	goto	u1135
  1543     0412                     l1639:
  1544     0412  3001               	movlw	1
  1545     0413                     u1145:
  1546     0413  1003               	clrc
  1547     0414  0CA3               	rrf	___lmul@multiplier+3,f
  1548     0415  0CA2               	rrf	___lmul@multiplier+2,f
  1549     0416  0CA1               	rrf	___lmul@multiplier+1,f
  1550     0417  0CA0               	rrf	___lmul@multiplier,f
  1551     0418  3EFF               	addlw	-1
  1552     0419  1D03               	skipz
  1553     041A  2C13               	goto	u1145
  1554     041B  0823               	movf	___lmul@multiplier+3,w
  1555     041C  0422               	iorwf	___lmul@multiplier+2,w
  1556     041D  0421               	iorwf	___lmul@multiplier+1,w
  1557     041E  0420               	iorwf	___lmul@multiplier,w
  1558     041F  1D03               	skipz
  1559     0420  2C22               	goto	u1151
  1560     0421  2C23               	goto	u1150
  1561     0422                     u1151:
  1562     0422  2BEE               	goto	l1633
  1563     0423                     u1150:
  1564     0423                     l1641:
  1565     0423  082C               	movf	___lmul@product+3,w
  1566     0424  00A3               	movwf	?___lmul+3
  1567     0425  082B               	movf	___lmul@product+2,w
  1568     0426  00A2               	movwf	?___lmul+2
  1569     0427  082A               	movf	___lmul@product+1,w
  1570     0428  00A1               	movwf	?___lmul+1
  1571     0429  0829               	movf	___lmul@product,w
  1572     042A  00A0               	movwf	?___lmul
  1573     042B                     l269:
  1574     042B  0008               	return
  1575     042C                     __end_of___lmul:
  1576                           
  1577                           	psect	text4
  1578     0582                     __ptext4:	
  1579 ;; *************** function _lcd_str *****************
  1580 ;; Defined at:
  1581 ;;		line 316 in file "main.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  str             2    3[BANK0 ] PTR const unsigned char 
  1584 ;;		 -> random_string@str(6), STR_3(8), buff(2), STR_2(6), 
  1585 ;;		 -> STR_1(11), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  i               1    6[BANK0 ] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       2       0       0       0
  1598 ;;      Locals:         0       1       0       0       0
  1599 ;;      Temps:          0       1       0       0       0
  1600 ;;      Totals:         0       4       0       0       0
  1601 ;;Total ram usage:        4 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 2
  1604 ;; This function calls:
  1605 ;;		_lcd_dat
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611     0582                     _lcd_str:	
  1612                           ;psect for function _lcd_str
  1613                           
  1614     0582                     l1865:	
  1615                           ;incstack = 0
  1616                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1617                           
  1618                           
  1619                           ;main.c: 316: void lcd_str(const char* str);main.c: 317: {;main.c: 318:     unsigned cha
      +                          r i = 0;
  1620     0582  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0583  1303               	bcf	3,6	;RP1=0, select bank0
  1622     0584  01A6               	clrf	lcd_str@i
  1623                           
  1624                           ;main.c: 320:     while (str[i] != 0)
  1625     0585  2D9D               	goto	l1871
  1626     0586                     l1867:
  1627                           
  1628                           ;main.c: 321:     {;main.c: 322:         lcd_dat(str[i]);
  1629     0586  0826               	movf	lcd_str@i,w
  1630     0587  0723               	addwf	lcd_str@str,w
  1631     0588  0084               	movwf	4
  1632     0589  0824               	movf	lcd_str@str+1,w
  1633     058A  1803               	skipnc
  1634     058B  0A24               	incf	lcd_str@str+1,w
  1635     058C  00FF               	movwf	btemp+1
  1636     058D  120A  118A  2232  120A  118A  	fcall	stringtab
  1637     0592  120A  118A  2600  120A  118A  	fcall	_lcd_dat
  1638     0597                     l1869:
  1639                           
  1640                           ;main.c: 323:         i++;
  1641     0597  3001               	movlw	1
  1642     0598  1283               	bcf	3,5	;RP0=0, select bank0
  1643     0599  1303               	bcf	3,6	;RP1=0, select bank0
  1644     059A  00A5               	movwf	??_lcd_str
  1645     059B  0825               	movf	??_lcd_str,w
  1646     059C  07A6               	addwf	lcd_str@i,f
  1647     059D                     l1871:
  1648                           
  1649                           ;main.c: 320:     while (str[i] != 0)
  1650     059D  0826               	movf	lcd_str@i,w
  1651     059E  0723               	addwf	lcd_str@str,w
  1652     059F  0084               	movwf	4
  1653     05A0  0824               	movf	lcd_str@str+1,w
  1654     05A1  1803               	skipnc
  1655     05A2  0A24               	incf	lcd_str@str+1,w
  1656     05A3  00FF               	movwf	btemp+1
  1657     05A4  120A  118A  2232  120A  118A  	fcall	stringtab
  1658     05A9  3A00               	xorlw	0
  1659     05AA  1D03               	skipz
  1660     05AB  2DAD               	goto	u1451
  1661     05AC  2DAE               	goto	u1450
  1662     05AD                     u1451:
  1663     05AD  2D86               	goto	l1867
  1664     05AE                     u1450:
  1665     05AE                     l129:
  1666     05AE  0008               	return
  1667     05AF                     __end_of_lcd_str:
  1668                           
  1669                           	psect	text5
  1670     0600                     __ptext5:	
  1671 ;; *************** function _lcd_dat *****************
  1672 ;; Defined at:
  1673 ;;		line 269 in file "main.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  val             1    wreg     unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  val             1    2[BANK0 ] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       0       0       0       0
  1688 ;;      Locals:         0       1       0       0       0
  1689 ;;      Temps:          0       2       0       0       0
  1690 ;;      Totals:         0       3       0       0       0
  1691 ;;Total ram usage:        3 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_lcd_str
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701     0600                     _lcd_dat:	
  1702                           ;psect for function _lcd_dat
  1703                           
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in _lcd_dat: [wreg]
  1707                           ;lcd_dat@val stored from wreg
  1708     0600  1283               	bcf	3,5	;RP0=0, select bank0
  1709     0601  1303               	bcf	3,6	;RP1=0, select bank0
  1710     0602  00A2               	movwf	lcd_dat@val
  1711     0603                     l1693:
  1712                           
  1713                           ;main.c: 269: void lcd_dat(unsigned char val);main.c: 270: {;main.c: 271:     PORTEbits.
      +                          RE1 = 1;
  1714     0603  1489               	bsf	9,1	;volatile
  1715     0604                     l1695:
  1716                           
  1717                           ;main.c: 273:     PORTD = val;
  1718     0604  0822               	movf	lcd_dat@val,w
  1719     0605  0088               	movwf	8	;volatile
  1720     0606                     l1697:
  1721                           
  1722                           ;main.c: 274:     PORTEbits.RE2 = 1;
  1723     0606  1509               	bsf	9,2	;volatile
  1724                           
  1725                           ;main.c: 275:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1726     0607  3014               	movlw	20
  1727     0608  1283               	bcf	3,5	;RP0=0, select bank0
  1728     0609  1303               	bcf	3,6	;RP1=0, select bank0
  1729     060A  00A1               	movwf	??_lcd_dat+1
  1730     060B  3079               	movlw	121
  1731     060C  00A0               	movwf	??_lcd_dat
  1732     060D                     u1627:
  1733     060D  0BA0               	decfsz	??_lcd_dat,f
  1734     060E  2E0D               	goto	u1627
  1735     060F  0BA1               	decfsz	??_lcd_dat+1,f
  1736     0610  2E0D               	goto	u1627
  1737     0611                     l1699:
  1738                           
  1739                           ;main.c: 276:     PORTEbits.RE1 = 0;
  1740     0611  1283               	bcf	3,5	;RP0=0, select bank0
  1741     0612  1303               	bcf	3,6	;RP1=0, select bank0
  1742     0613  1089               	bcf	9,1	;volatile
  1743                           
  1744                           ;main.c: 277:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1745     0614  3014               	movlw	20
  1746     0615  1283               	bcf	3,5	;RP0=0, select bank0
  1747     0616  1303               	bcf	3,6	;RP1=0, select bank0
  1748     0617  00A1               	movwf	??_lcd_dat+1
  1749     0618  3079               	movlw	121
  1750     0619  00A0               	movwf	??_lcd_dat
  1751     061A                     u1637:
  1752     061A  0BA0               	decfsz	??_lcd_dat,f
  1753     061B  2E1A               	goto	u1637
  1754     061C  0BA1               	decfsz	??_lcd_dat+1,f
  1755     061D  2E1A               	goto	u1637
  1756     061E                     l1701:
  1757                           
  1758                           ;main.c: 279:     PORTEbits.RE1 = 1;
  1759     061E  1283               	bcf	3,5	;RP0=0, select bank0
  1760     061F  1303               	bcf	3,6	;RP1=0, select bank0
  1761     0620  1489               	bsf	9,1	;volatile
  1762     0621                     l117:
  1763     0621  0008               	return
  1764     0622                     __end_of_lcd_dat:
  1765                           
  1766                           	psect	text6
  1767     05AF                     __ptext6:	
  1768 ;; *************** function _lcd_send *****************
  1769 ;; Defined at:
  1770 ;;		line 328 in file "main.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  dato            1    wreg     unsigned char 
  1773 ;;  tipo            1    0[BANK0 ] unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  dato            1    3[BANK0 ] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       1       0       0       0
  1786 ;;      Locals:         0       1       0       0       0
  1787 ;;      Temps:          0       2       0       0       0
  1788 ;;      Totals:         0       4       0       0       0
  1789 ;;Total ram usage:        4 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799     05AF                     _lcd_send:	
  1800                           ;psect for function _lcd_send
  1801                           
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _lcd_send: [wreg+status,2+status,0]
  1805                           ;lcd_send@dato stored from wreg
  1806     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1807     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1808     05B1  00A3               	movwf	lcd_send@dato
  1809     05B2                     l1845:
  1810                           
  1811                           ;main.c: 328: void lcd_send(char dato, char tipo);main.c: 329: {;main.c: 332:     TRISD 
      +                          = 0x00;
  1812     05B2  1683               	bsf	3,5	;RP0=1, select bank1
  1813     05B3  1303               	bcf	3,6	;RP1=0, select bank1
  1814     05B4  0188               	clrf	8	;volatile
  1815     05B5                     l1847:
  1816                           
  1817                           ;main.c: 333:     TRISEbits.TRISE1 = 0;
  1818     05B5  1089               	bcf	9,1	;volatile
  1819     05B6                     l1849:
  1820                           
  1821                           ;main.c: 334:     TRISEbits.TRISE2 = 0;
  1822     05B6  1109               	bcf	9,2	;volatile
  1823     05B7                     l1851:
  1824                           
  1825                           ;main.c: 336:     PORTEbits.RE1 = 1;
  1826     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1827     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1828     05B9  1489               	bsf	9,1	;volatile
  1829     05BA                     l1853:
  1830                           
  1831                           ;main.c: 337:     PORTD = dato;
  1832     05BA  0823               	movf	lcd_send@dato,w
  1833     05BB  0088               	movwf	8	;volatile
  1834     05BC                     l1855:
  1835                           
  1836                           ;main.c: 338:     PORTEbits.RE2 = tipo;
  1837     05BC  0C20               	rrf	lcd_send@tipo,w
  1838     05BD  1C03               	skipc
  1839     05BE  1109               	bcf	9,2	;volatile
  1840     05BF  1803               	skipnc
  1841     05C0  1509               	bsf	9,2	;volatile
  1842     05C1                     l1857:
  1843                           
  1844                           ;main.c: 339:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1845     05C1  3014               	movlw	20
  1846     05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1847     05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1848     05C4  00A2               	movwf	??_lcd_send+1
  1849     05C5  3079               	movlw	121
  1850     05C6  00A1               	movwf	??_lcd_send
  1851     05C7                     u1647:
  1852     05C7  0BA1               	decfsz	??_lcd_send,f
  1853     05C8  2DC7               	goto	u1647
  1854     05C9  0BA2               	decfsz	??_lcd_send+1,f
  1855     05CA  2DC7               	goto	u1647
  1856     05CB                     l1859:
  1857                           
  1858                           ;main.c: 340:     PORTEbits.RE1 = 0;
  1859     05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1860     05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1861     05CD  1089               	bcf	9,1	;volatile
  1862     05CE                     l1861:
  1863                           
  1864                           ;main.c: 341:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1865     05CE  3014               	movlw	20
  1866     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1867     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1868     05D1  00A2               	movwf	??_lcd_send+1
  1869     05D2  3079               	movlw	121
  1870     05D3  00A1               	movwf	??_lcd_send
  1871     05D4                     u1657:
  1872     05D4  0BA1               	decfsz	??_lcd_send,f
  1873     05D5  2DD4               	goto	u1657
  1874     05D6  0BA2               	decfsz	??_lcd_send+1,f
  1875     05D7  2DD4               	goto	u1657
  1876     05D8                     l1863:
  1877                           
  1878                           ;main.c: 342:     PORTEbits.RE1 = 1;
  1879     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1880     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1881     05DA  1489               	bsf	9,1	;volatile
  1882     05DB                     l132:
  1883     05DB  0008               	return
  1884     05DC                     __end_of_lcd_send:
  1885                           
  1886                           	psect	text7
  1887     0388                     __ptext7:	
  1888 ;; *************** function _lcd_init *****************
  1889 ;; Defined at:
  1890 ;;		line 295 in file "main.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0
  1906 ;;      Temps:          0       2       0       0       0
  1907 ;;      Totals:         0       2       0       0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 2
  1911 ;; This function calls:
  1912 ;;		_lcd_cmd
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918     0388                     _lcd_init:	
  1919                           ;psect for function _lcd_init
  1920                           
  1921     0388                     l1813:	
  1922                           ;incstack = 0
  1923                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1924                           
  1925                           
  1926                           ;main.c: 297:     TRISD = 0x00;
  1927     0388  1683               	bsf	3,5	;RP0=1, select bank1
  1928     0389  1303               	bcf	3,6	;RP1=0, select bank1
  1929     038A  0188               	clrf	8	;volatile
  1930                           
  1931                           ;main.c: 298:     TRISE = 0x00;
  1932     038B  0189               	clrf	9	;volatile
  1933     038C                     l1815:
  1934                           
  1935                           ;main.c: 299:     PORTEbits.RE1 = 0;
  1936     038C  1283               	bcf	3,5	;RP0=0, select bank0
  1937     038D  1303               	bcf	3,6	;RP1=0, select bank0
  1938     038E  1089               	bcf	9,1	;volatile
  1939     038F                     l1817:
  1940                           
  1941                           ;main.c: 300:     PORTEbits.RE2 = 0;
  1942     038F  1109               	bcf	9,2	;volatile
  1943     0390                     l1819:
  1944                           
  1945                           ;main.c: 301:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1946     0390  3082               	movlw	130
  1947     0391  1283               	bcf	3,5	;RP0=0, select bank0
  1948     0392  1303               	bcf	3,6	;RP1=0, select bank0
  1949     0393  00A4               	movwf	??_lcd_init+1
  1950     0394  30DD               	movlw	221
  1951     0395  00A3               	movwf	??_lcd_init
  1952     0396                     u1667:
  1953     0396  0BA3               	decfsz	??_lcd_init,f
  1954     0397  2B96               	goto	u1667
  1955     0398  0BA4               	decfsz	??_lcd_init+1,f
  1956     0399  2B96               	goto	u1667
  1957     039A                     l1821:
  1958                           
  1959                           ;main.c: 302:     PORTEbits.RE1 = 1;
  1960     039A  1283               	bcf	3,5	;RP0=0, select bank0
  1961     039B  1303               	bcf	3,6	;RP1=0, select bank0
  1962     039C  1489               	bsf	9,1	;volatile
  1963     039D                     l1823:
  1964                           
  1965                           ;main.c: 304:     lcd_cmd(0x38);
  1966     039D  3038               	movlw	56
  1967     039E  120A  118A  2622  120A  118A  	fcall	_lcd_cmd
  1968     03A3                     l1825:
  1969                           
  1970                           ;main.c: 305:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1971     03A3  3021               	movlw	33
  1972     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1973     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1974     03A6  00A4               	movwf	??_lcd_init+1
  1975     03A7  3075               	movlw	117
  1976     03A8  00A3               	movwf	??_lcd_init
  1977     03A9                     u1677:
  1978     03A9  0BA3               	decfsz	??_lcd_init,f
  1979     03AA  2BA9               	goto	u1677
  1980     03AB  0BA4               	decfsz	??_lcd_init+1,f
  1981     03AC  2BA9               	goto	u1677
  1982     03AD  2BAE               	nop2
  1983     03AE                     l1827:
  1984                           
  1985                           ;main.c: 306:     lcd_cmd(0x38);
  1986     03AE  3038               	movlw	56
  1987     03AF  120A  118A  2622  120A  118A  	fcall	_lcd_cmd
  1988     03B4                     l1829:
  1989                           
  1990                           ;main.c: 307:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1991     03B4  3007               	movlw	7
  1992     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1993     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1994     03B7  00A4               	movwf	??_lcd_init+1
  1995     03B8  307C               	movlw	124
  1996     03B9  00A3               	movwf	??_lcd_init
  1997     03BA                     u1687:
  1998     03BA  0BA3               	decfsz	??_lcd_init,f
  1999     03BB  2BBA               	goto	u1687
  2000     03BC  0BA4               	decfsz	??_lcd_init+1,f
  2001     03BD  2BBA               	goto	u1687
  2002     03BE  0000               	nop
  2003     03BF                     l1831:
  2004                           
  2005                           ;main.c: 308:     lcd_cmd(0x38);
  2006     03BF  3038               	movlw	56
  2007     03C0  120A  118A  2622  120A  118A  	fcall	_lcd_cmd
  2008     03C5                     l1833:
  2009                           
  2010                           ;main.c: 309:     lcd_cmd(0x08);
  2011     03C5  3008               	movlw	8
  2012     03C6  120A  118A  2622  120A  118A  	fcall	_lcd_cmd
  2013     03CB                     l1835:
  2014                           
  2015                           ;main.c: 310:     lcd_cmd(0x0F);
  2016     03CB  300F               	movlw	15
  2017     03CC  120A  118A  2622  120A  118A  	fcall	_lcd_cmd
  2018     03D1                     l1837:
  2019                           
  2020                           ;main.c: 311:     lcd_cmd(0x01);
  2021     03D1  3001               	movlw	1
  2022     03D2  120A  118A  2622  120A  118A  	fcall	_lcd_cmd
  2023     03D7                     l1839:
  2024                           
  2025                           ;main.c: 312:     lcd_cmd(0b00001100);
  2026     03D7  300C               	movlw	12
  2027     03D8  120A  118A  2622  120A  118A  	fcall	_lcd_cmd
  2028     03DD                     l1841:
  2029                           
  2030                           ;main.c: 313:     lcd_cmd(0x80);
  2031     03DD  3080               	movlw	128
  2032     03DE  120A  118A  2622  120A  118A  	fcall	_lcd_cmd
  2033     03E3                     l123:
  2034     03E3  0008               	return
  2035     03E4                     __end_of_lcd_init:
  2036                           
  2037                           	psect	text8
  2038     0622                     __ptext8:	
  2039 ;; *************** function _lcd_cmd *****************
  2040 ;; Defined at:
  2041 ;;		line 282 in file "main.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  val             1    wreg     unsigned char 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  val             1    2[BANK0 ] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         0       0       0       0       0
  2056 ;;      Locals:         0       1       0       0       0
  2057 ;;      Temps:          0       2       0       0       0
  2058 ;;      Totals:         0       3       0       0       0
  2059 ;;Total ram usage:        3 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 1
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_lcd_init
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069     0622                     _lcd_cmd:	
  2070                           ;psect for function _lcd_cmd
  2071                           
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _lcd_cmd: [wreg]
  2075                           ;lcd_cmd@val stored from wreg
  2076     0622  1283               	bcf	3,5	;RP0=0, select bank0
  2077     0623  1303               	bcf	3,6	;RP1=0, select bank0
  2078     0624  00A2               	movwf	lcd_cmd@val
  2079     0625                     l1703:
  2080                           
  2081                           ;main.c: 282: void lcd_cmd(unsigned char val);main.c: 283: {;main.c: 284:     PORTEbits.
      +                          RE1 = 1;
  2082     0625  1489               	bsf	9,1	;volatile
  2083     0626                     l1705:
  2084                           
  2085                           ;main.c: 286:     PORTD = val;
  2086     0626  0822               	movf	lcd_cmd@val,w
  2087     0627  0088               	movwf	8	;volatile
  2088     0628                     l1707:
  2089                           
  2090                           ;main.c: 287:     PORTEbits.RE2 = 0;
  2091     0628  1109               	bcf	9,2	;volatile
  2092                           
  2093                           ;main.c: 288:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2094     0629  3014               	movlw	20
  2095     062A  1283               	bcf	3,5	;RP0=0, select bank0
  2096     062B  1303               	bcf	3,6	;RP1=0, select bank0
  2097     062C  00A1               	movwf	??_lcd_cmd+1
  2098     062D  3079               	movlw	121
  2099     062E  00A0               	movwf	??_lcd_cmd
  2100     062F                     u1697:
  2101     062F  0BA0               	decfsz	??_lcd_cmd,f
  2102     0630  2E2F               	goto	u1697
  2103     0631  0BA1               	decfsz	??_lcd_cmd+1,f
  2104     0632  2E2F               	goto	u1697
  2105     0633                     l1709:
  2106                           
  2107                           ;main.c: 289:     PORTEbits.RE1 = 0;
  2108     0633  1283               	bcf	3,5	;RP0=0, select bank0
  2109     0634  1303               	bcf	3,6	;RP1=0, select bank0
  2110     0635  1089               	bcf	9,1	;volatile
  2111                           
  2112                           ;main.c: 290:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2113     0636  3014               	movlw	20
  2114     0637  1283               	bcf	3,5	;RP0=0, select bank0
  2115     0638  1303               	bcf	3,6	;RP1=0, select bank0
  2116     0639  00A1               	movwf	??_lcd_cmd+1
  2117     063A  3079               	movlw	121
  2118     063B  00A0               	movwf	??_lcd_cmd
  2119     063C                     u1707:
  2120     063C  0BA0               	decfsz	??_lcd_cmd,f
  2121     063D  2E3C               	goto	u1707
  2122     063E  0BA1               	decfsz	??_lcd_cmd+1,f
  2123     063F  2E3C               	goto	u1707
  2124     0640                     l1711:
  2125                           
  2126                           ;main.c: 292:     PORTEbits.RE1 = 1;
  2127     0640  1283               	bcf	3,5	;RP0=0, select bank0
  2128     0641  1303               	bcf	3,6	;RP1=0, select bank0
  2129     0642  1489               	bsf	9,1	;volatile
  2130     0643                     l120:
  2131     0643  0008               	return
  2132     0644                     __end_of_lcd_cmd:
  2133                           
  2134                           	psect	text9
  2135     05DC                     __ptext9:	
  2136 ;; *************** function _itoa *****************
  2137 ;; Defined at:
  2138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  buf             1    wreg     PTR unsigned char 
  2141 ;;		 -> buff(2), 
  2142 ;;  val             2   35[BANK0 ] int 
  2143 ;;  base            2   37[BANK0 ] int 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  buf             1   40[BANK0 ] PTR unsigned char 
  2146 ;;		 -> buff(2), 
  2147 ;;  cp              1    0        PTR unsigned char 
  2148 ;;		 -> buff(2), 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      PTR unsigned char 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2158 ;;      Params:         0       4       0       0       0
  2159 ;;      Locals:         0       1       0       0       0
  2160 ;;      Temps:          0       1       0       0       0
  2161 ;;      Totals:         0       6       0       0       0
  2162 ;;Total ram usage:        6 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 3
  2165 ;; This function calls:
  2166 ;;		_utoa
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172     05DC                     _itoa:	
  2173                           ;psect for function _itoa
  2174                           
  2175                           
  2176                           ;incstack = 0
  2177                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2178                           ;itoa@buf stored from wreg
  2179     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2180     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2181     05DE  00C8               	movwf	itoa@buf
  2182     05DF                     l1901:
  2183     05DF                     l1903:
  2184     05DF  1FC4               	btfss	itoa@val+1,7
  2185     05E0  2DE2               	goto	u1481
  2186     05E1  2DE3               	goto	u1480
  2187     05E2                     u1481:
  2188     05E2  2DF1               	goto	l1911
  2189     05E3                     u1480:
  2190     05E3                     l1905:
  2191     05E3  0848               	movf	itoa@buf,w
  2192     05E4  0084               	movwf	4
  2193     05E5  302D               	movlw	45
  2194     05E6  1383               	bcf	3,7	;select IRP bank0
  2195     05E7  0080               	movwf	0
  2196     05E8                     l1907:
  2197     05E8  3001               	movlw	1
  2198     05E9  00C7               	movwf	??_itoa
  2199     05EA  0847               	movf	??_itoa,w
  2200     05EB  07C8               	addwf	itoa@buf,f
  2201     05EC                     l1909:
  2202     05EC  09C3               	comf	itoa@val,f
  2203     05ED  09C4               	comf	itoa@val+1,f
  2204     05EE  0AC3               	incf	itoa@val,f
  2205     05EF  1903               	skipnz
  2206     05F0  0AC4               	incf	itoa@val+1,f
  2207     05F1                     l1911:
  2208     05F1  0844               	movf	itoa@val+1,w
  2209     05F2  00BB               	movwf	utoa@val+1
  2210     05F3  0843               	movf	itoa@val,w
  2211     05F4  00BA               	movwf	utoa@val
  2212     05F5  0846               	movf	itoa@base+1,w
  2213     05F6  00BD               	movwf	utoa@base+1
  2214     05F7  0845               	movf	itoa@base,w
  2215     05F8  00BC               	movwf	utoa@base
  2216     05F9  0848               	movf	itoa@buf,w
  2217     05FA  120A  118A  22AD  120A  118A  	fcall	_utoa
  2218     05FF                     l709:
  2219     05FF  0008               	return
  2220     0600                     __end_of_itoa:
  2221                           
  2222                           	psect	text10
  2223     02AD                     __ptext10:	
  2224 ;; *************** function _utoa *****************
  2225 ;; Defined at:
  2226 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  buf             1    wreg     PTR unsigned char 
  2229 ;;		 -> buff(2), 
  2230 ;;  val             2   26[BANK0 ] unsigned int 
  2231 ;;  base            2   28[BANK0 ] int 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  buf             1   34[BANK0 ] PTR unsigned char 
  2234 ;;		 -> buff(2), 
  2235 ;;  v               2   31[BANK0 ] unsigned int 
  2236 ;;  c               1   33[BANK0 ] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      PTR unsigned char 
  2239 ;; Registers used:
  2240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         0       4       0       0       0
  2247 ;;      Locals:         0       4       0       0       0
  2248 ;;      Temps:          0       1       0       0       0
  2249 ;;      Totals:         0       9       0       0       0
  2250 ;;Total ram usage:        9 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 2
  2253 ;; This function calls:
  2254 ;;		___lwdiv
  2255 ;;		___lwmod
  2256 ;; This function is called by:
  2257 ;;		_itoa
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261     02AD                     _utoa:	
  2262                           ;psect for function _utoa
  2263                           
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2267                           ;utoa@buf stored from wreg
  2268     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2269     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2270     02AF  00C2               	movwf	utoa@buf
  2271     02B0                     l1767:
  2272     02B0  083B               	movf	utoa@val+1,w
  2273     02B1  00C0               	movwf	utoa@v+1
  2274     02B2  083A               	movf	utoa@val,w
  2275     02B3  00BF               	movwf	utoa@v
  2276     02B4                     l1769:
  2277     02B4  083D               	movf	utoa@base+1,w
  2278     02B5  00A1               	movwf	___lwdiv@divisor+1
  2279     02B6  083C               	movf	utoa@base,w
  2280     02B7  00A0               	movwf	___lwdiv@divisor
  2281     02B8  0840               	movf	utoa@v+1,w
  2282     02B9  00A3               	movwf	___lwdiv@dividend+1
  2283     02BA  083F               	movf	utoa@v,w
  2284     02BB  00A2               	movwf	___lwdiv@dividend
  2285     02BC  120A  118A  24BA  120A  118A  	fcall	___lwdiv
  2286     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2287     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2288     02C3  0821               	movf	?___lwdiv+1,w
  2289     02C4  00C0               	movwf	utoa@v+1
  2290     02C5  0820               	movf	?___lwdiv,w
  2291     02C6  00BF               	movwf	utoa@v
  2292     02C7                     l1771:
  2293     02C7  3001               	movlw	1
  2294     02C8  00BE               	movwf	??_utoa
  2295     02C9  083E               	movf	??_utoa,w
  2296     02CA  07C2               	addwf	utoa@buf,f
  2297     02CB                     l1773:
  2298     02CB  083F               	movf	utoa@v,w
  2299     02CC  0440               	iorwf	utoa@v+1,w
  2300     02CD  1D03               	btfss	3,2
  2301     02CE  2AD0               	goto	u1411
  2302     02CF  2AD1               	goto	u1410
  2303     02D0                     u1411:
  2304     02D0  2AB4               	goto	l1769
  2305     02D1                     u1410:
  2306     02D1                     l1775:
  2307     02D1  0842               	movf	utoa@buf,w
  2308     02D2  0084               	movwf	4
  2309     02D3  1383               	bcf	3,7	;select IRP bank0
  2310     02D4  0180               	clrf	0
  2311     02D5                     l1777:
  2312     02D5  3001               	movlw	1
  2313     02D6  02C2               	subwf	utoa@buf,f
  2314     02D7                     l1779:
  2315     02D7  083D               	movf	utoa@base+1,w
  2316     02D8  00B5               	movwf	___lwmod@divisor+1
  2317     02D9  083C               	movf	utoa@base,w
  2318     02DA  00B4               	movwf	___lwmod@divisor
  2319     02DB  083B               	movf	utoa@val+1,w
  2320     02DC  00B7               	movwf	___lwmod@dividend+1
  2321     02DD  083A               	movf	utoa@val,w
  2322     02DE  00B6               	movwf	___lwmod@dividend
  2323     02DF  120A  118A  2546  120A  118A  	fcall	___lwmod
  2324     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2325     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2326     02E6  0834               	movf	?___lwmod,w
  2327     02E7  00C1               	movwf	utoa@c
  2328     02E8                     l1781:
  2329     02E8  083D               	movf	utoa@base+1,w
  2330     02E9  00A1               	movwf	___lwdiv@divisor+1
  2331     02EA  083C               	movf	utoa@base,w
  2332     02EB  00A0               	movwf	___lwdiv@divisor
  2333     02EC  083B               	movf	utoa@val+1,w
  2334     02ED  00A3               	movwf	___lwdiv@dividend+1
  2335     02EE  083A               	movf	utoa@val,w
  2336     02EF  00A2               	movwf	___lwdiv@dividend
  2337     02F0  120A  118A  24BA  120A  118A  	fcall	___lwdiv
  2338     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2339     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2340     02F7  0821               	movf	?___lwdiv+1,w
  2341     02F8  00BB               	movwf	utoa@val+1
  2342     02F9  0820               	movf	?___lwdiv,w
  2343     02FA  00BA               	movwf	utoa@val
  2344     02FB                     l1783:
  2345     02FB  300A               	movlw	10
  2346     02FC  0241               	subwf	utoa@c,w
  2347     02FD  1C03               	skipc
  2348     02FE  2B00               	goto	u1421
  2349     02FF  2B01               	goto	u1420
  2350     0300                     u1421:
  2351     0300  2B05               	goto	l715
  2352     0301                     u1420:
  2353     0301                     l1785:
  2354     0301  3007               	movlw	7
  2355     0302  00BE               	movwf	??_utoa
  2356     0303  083E               	movf	??_utoa,w
  2357     0304  07C1               	addwf	utoa@c,f
  2358     0305                     l715:
  2359     0305  3030               	movlw	48
  2360     0306  00BE               	movwf	??_utoa
  2361     0307  083E               	movf	??_utoa,w
  2362     0308  07C1               	addwf	utoa@c,f
  2363     0309                     l1787:
  2364     0309  0842               	movf	utoa@buf,w
  2365     030A  0084               	movwf	4
  2366     030B  0841               	movf	utoa@c,w
  2367     030C  1383               	bcf	3,7	;select IRP bank0
  2368     030D  0080               	movwf	0
  2369     030E                     l1789:
  2370     030E  3001               	movlw	1
  2371     030F  02C2               	subwf	utoa@buf,f
  2372     0310                     l1791:
  2373     0310  083A               	movf	utoa@val,w
  2374     0311  043B               	iorwf	utoa@val+1,w
  2375     0312  1D03               	btfss	3,2
  2376     0313  2B15               	goto	u1431
  2377     0314  2B16               	goto	u1430
  2378     0315                     u1431:
  2379     0315  2AD7               	goto	l1779
  2380     0316                     u1430:
  2381     0316                     l1793:
  2382                           
  2383                           ;	Return value of _utoa is never used
  2384     0316  3001               	movlw	1
  2385     0317  00BE               	movwf	??_utoa
  2386     0318  083E               	movf	??_utoa,w
  2387     0319  07C2               	addwf	utoa@buf,f
  2388     031A                     l717:
  2389     031A  0008               	return
  2390     031B                     __end_of_utoa:
  2391                           
  2392                           	psect	text11
  2393     0546                     __ptext11:	
  2394 ;; *************** function ___lwmod *****************
  2395 ;; Defined at:
  2396 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  divisor         2   20[BANK0 ] unsigned int 
  2399 ;;  dividend        2   22[BANK0 ] unsigned int 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  counter         1   25[BANK0 ] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  2   20[BANK0 ] unsigned int 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       4       0       0       0
  2412 ;;      Locals:         0       1       0       0       0
  2413 ;;      Temps:          0       1       0       0       0
  2414 ;;      Totals:         0       6       0       0       0
  2415 ;;Total ram usage:        6 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 1
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_random_string
  2422 ;;		_utoa
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426     0546                     ___lwmod:	
  2427                           ;psect for function ___lwmod
  2428                           
  2429     0546                     l1671:	
  2430                           ;incstack = 0
  2431                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2432                           
  2433     0546  1283               	bcf	3,5	;RP0=0, select bank0
  2434     0547  1303               	bcf	3,6	;RP1=0, select bank0
  2435     0548  0834               	movf	___lwmod@divisor,w
  2436     0549  0435               	iorwf	___lwmod@divisor+1,w
  2437     054A  1903               	btfsc	3,2
  2438     054B  2D4D               	goto	u1231
  2439     054C  2D4E               	goto	u1230
  2440     054D                     u1231:
  2441     054D  2D7D               	goto	l1689
  2442     054E                     u1230:
  2443     054E                     l1673:
  2444     054E  01B9               	clrf	___lwmod@counter
  2445     054F  0AB9               	incf	___lwmod@counter,f
  2446     0550  2D5C               	goto	l1679
  2447     0551                     l1675:
  2448     0551  3001               	movlw	1
  2449     0552                     u1245:
  2450     0552  1003               	clrc
  2451     0553  0DB4               	rlf	___lwmod@divisor,f
  2452     0554  0DB5               	rlf	___lwmod@divisor+1,f
  2453     0555  3EFF               	addlw	-1
  2454     0556  1D03               	skipz
  2455     0557  2D52               	goto	u1245
  2456     0558                     l1677:
  2457     0558  3001               	movlw	1
  2458     0559  00B8               	movwf	??___lwmod
  2459     055A  0838               	movf	??___lwmod,w
  2460     055B  07B9               	addwf	___lwmod@counter,f
  2461     055C                     l1679:
  2462     055C  1FB5               	btfss	___lwmod@divisor+1,7
  2463     055D  2D5F               	goto	u1251
  2464     055E  2D60               	goto	u1250
  2465     055F                     u1251:
  2466     055F  2D51               	goto	l1675
  2467     0560                     u1250:
  2468     0560                     l1681:
  2469     0560  0835               	movf	___lwmod@divisor+1,w
  2470     0561  0237               	subwf	___lwmod@dividend+1,w
  2471     0562  1D03               	skipz
  2472     0563  2D66               	goto	u1265
  2473     0564  0834               	movf	___lwmod@divisor,w
  2474     0565  0236               	subwf	___lwmod@dividend,w
  2475     0566                     u1265:
  2476     0566  1C03               	skipc
  2477     0567  2D69               	goto	u1261
  2478     0568  2D6A               	goto	u1260
  2479     0569                     u1261:
  2480     0569  2D70               	goto	l1685
  2481     056A                     u1260:
  2482     056A                     l1683:
  2483     056A  0834               	movf	___lwmod@divisor,w
  2484     056B  02B6               	subwf	___lwmod@dividend,f
  2485     056C  0835               	movf	___lwmod@divisor+1,w
  2486     056D  1C03               	skipc
  2487     056E  03B7               	decf	___lwmod@dividend+1,f
  2488     056F  02B7               	subwf	___lwmod@dividend+1,f
  2489     0570                     l1685:
  2490     0570  3001               	movlw	1
  2491     0571                     u1275:
  2492     0571  1003               	clrc
  2493     0572  0CB5               	rrf	___lwmod@divisor+1,f
  2494     0573  0CB4               	rrf	___lwmod@divisor,f
  2495     0574  3EFF               	addlw	-1
  2496     0575  1D03               	skipz
  2497     0576  2D71               	goto	u1275
  2498     0577                     l1687:
  2499     0577  3001               	movlw	1
  2500     0578  02B9               	subwf	___lwmod@counter,f
  2501     0579  1D03               	btfss	3,2
  2502     057A  2D7C               	goto	u1281
  2503     057B  2D7D               	goto	u1280
  2504     057C                     u1281:
  2505     057C  2D60               	goto	l1681
  2506     057D                     u1280:
  2507     057D                     l1689:
  2508     057D  0837               	movf	___lwmod@dividend+1,w
  2509     057E  00B5               	movwf	?___lwmod+1
  2510     057F  0836               	movf	___lwmod@dividend,w
  2511     0580  00B4               	movwf	?___lwmod
  2512     0581                     l537:
  2513     0581  0008               	return
  2514     0582                     __end_of___lwmod:
  2515                           
  2516                           	psect	text12
  2517     04BA                     __ptext12:	
  2518 ;; *************** function ___lwdiv *****************
  2519 ;; Defined at:
  2520 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  divisor         2    0[BANK0 ] unsigned int 
  2523 ;;  dividend        2    2[BANK0 ] unsigned int 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  quotient        2    6[BANK0 ] unsigned int 
  2526 ;;  counter         1    5[BANK0 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    0[BANK0 ] unsigned int 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       4       0       0       0
  2537 ;;      Locals:         0       3       0       0       0
  2538 ;;      Temps:          0       1       0       0       0
  2539 ;;      Totals:         0       8       0       0       0
  2540 ;;Total ram usage:        8 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_utoa
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550     04BA                     ___lwdiv:	
  2551                           ;psect for function ___lwdiv
  2552                           
  2553     04BA                     l1645:	
  2554                           ;incstack = 0
  2555                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2556                           
  2557     04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2558     04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2559     04BC  01A6               	clrf	___lwdiv@quotient
  2560     04BD  01A7               	clrf	___lwdiv@quotient+1
  2561     04BE                     l1647:
  2562     04BE  0820               	movf	___lwdiv@divisor,w
  2563     04BF  0421               	iorwf	___lwdiv@divisor+1,w
  2564     04C0  1903               	btfsc	3,2
  2565     04C1  2CC3               	goto	u1161
  2566     04C2  2CC4               	goto	u1160
  2567     04C3                     u1161:
  2568     04C3  2CFB               	goto	l1667
  2569     04C4                     u1160:
  2570     04C4                     l1649:
  2571     04C4  01A5               	clrf	___lwdiv@counter
  2572     04C5  0AA5               	incf	___lwdiv@counter,f
  2573     04C6  2CD2               	goto	l1655
  2574     04C7                     l1651:
  2575     04C7  3001               	movlw	1
  2576     04C8                     u1175:
  2577     04C8  1003               	clrc
  2578     04C9  0DA0               	rlf	___lwdiv@divisor,f
  2579     04CA  0DA1               	rlf	___lwdiv@divisor+1,f
  2580     04CB  3EFF               	addlw	-1
  2581     04CC  1D03               	skipz
  2582     04CD  2CC8               	goto	u1175
  2583     04CE                     l1653:
  2584     04CE  3001               	movlw	1
  2585     04CF  00A4               	movwf	??___lwdiv
  2586     04D0  0824               	movf	??___lwdiv,w
  2587     04D1  07A5               	addwf	___lwdiv@counter,f
  2588     04D2                     l1655:
  2589     04D2  1FA1               	btfss	___lwdiv@divisor+1,7
  2590     04D3  2CD5               	goto	u1181
  2591     04D4  2CD6               	goto	u1180
  2592     04D5                     u1181:
  2593     04D5  2CC7               	goto	l1651
  2594     04D6                     u1180:
  2595     04D6                     l1657:
  2596     04D6  3001               	movlw	1
  2597     04D7                     u1195:
  2598     04D7  1003               	clrc
  2599     04D8  0DA6               	rlf	___lwdiv@quotient,f
  2600     04D9  0DA7               	rlf	___lwdiv@quotient+1,f
  2601     04DA  3EFF               	addlw	-1
  2602     04DB  1D03               	skipz
  2603     04DC  2CD7               	goto	u1195
  2604     04DD  0821               	movf	___lwdiv@divisor+1,w
  2605     04DE  0223               	subwf	___lwdiv@dividend+1,w
  2606     04DF  1D03               	skipz
  2607     04E0  2CE3               	goto	u1205
  2608     04E1  0820               	movf	___lwdiv@divisor,w
  2609     04E2  0222               	subwf	___lwdiv@dividend,w
  2610     04E3                     u1205:
  2611     04E3  1C03               	skipc
  2612     04E4  2CE6               	goto	u1201
  2613     04E5  2CE7               	goto	u1200
  2614     04E6                     u1201:
  2615     04E6  2CEE               	goto	l1663
  2616     04E7                     u1200:
  2617     04E7                     l1659:
  2618     04E7  0820               	movf	___lwdiv@divisor,w
  2619     04E8  02A2               	subwf	___lwdiv@dividend,f
  2620     04E9  0821               	movf	___lwdiv@divisor+1,w
  2621     04EA  1C03               	skipc
  2622     04EB  03A3               	decf	___lwdiv@dividend+1,f
  2623     04EC  02A3               	subwf	___lwdiv@dividend+1,f
  2624     04ED                     l1661:
  2625     04ED  1426               	bsf	___lwdiv@quotient,0
  2626     04EE                     l1663:
  2627     04EE  3001               	movlw	1
  2628     04EF                     u1215:
  2629     04EF  1003               	clrc
  2630     04F0  0CA1               	rrf	___lwdiv@divisor+1,f
  2631     04F1  0CA0               	rrf	___lwdiv@divisor,f
  2632     04F2  3EFF               	addlw	-1
  2633     04F3  1D03               	skipz
  2634     04F4  2CEF               	goto	u1215
  2635     04F5                     l1665:
  2636     04F5  3001               	movlw	1
  2637     04F6  02A5               	subwf	___lwdiv@counter,f
  2638     04F7  1D03               	btfss	3,2
  2639     04F8  2CFA               	goto	u1221
  2640     04F9  2CFB               	goto	u1220
  2641     04FA                     u1221:
  2642     04FA  2CD6               	goto	l1657
  2643     04FB                     u1220:
  2644     04FB                     l1667:
  2645     04FB  0827               	movf	___lwdiv@quotient+1,w
  2646     04FC  00A1               	movwf	?___lwdiv+1
  2647     04FD  0826               	movf	___lwdiv@quotient,w
  2648     04FE  00A0               	movwf	?___lwdiv
  2649     04FF                     l527:
  2650     04FF  0008               	return
  2651     0500                     __end_of___lwdiv:
  2652                           
  2653                           	psect	text13
  2654     0666                     __ptext13:	
  2655 ;; *************** function _initKeyPad *****************
  2656 ;; Defined at:
  2657 ;;		line 347 in file "main.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2671 ;;      Params:         0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0
  2673 ;;      Temps:          0       1       0       0       0
  2674 ;;      Totals:         0       1       0       0       0
  2675 ;;Total ram usage:        1 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685     0666                     _initKeyPad:	
  2686                           ;psect for function _initKeyPad
  2687                           
  2688     0666                     l1843:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _initKeyPad: [wreg+status,2+status,0]
  2691                           
  2692                           
  2693                           ;main.c: 349:     TRISD |= 0x0f;
  2694     0666  300F               	movlw	15
  2695     0667  1283               	bcf	3,5	;RP0=0, select bank0
  2696     0668  1303               	bcf	3,6	;RP1=0, select bank0
  2697     0669  00A0               	movwf	??_initKeyPad
  2698     066A  0820               	movf	??_initKeyPad,w
  2699     066B  1683               	bsf	3,5	;RP0=1, select bank1
  2700     066C  1303               	bcf	3,6	;RP1=0, select bank1
  2701     066D  0488               	iorwf	8,f	;volatile
  2702                           
  2703                           ;main.c: 350:     TRISB &= ~0x07;
  2704     066E  30F8               	movlw	248
  2705     066F  1283               	bcf	3,5	;RP0=0, select bank0
  2706     0670  1303               	bcf	3,6	;RP1=0, select bank0
  2707     0671  00A0               	movwf	??_initKeyPad
  2708     0672  0820               	movf	??_initKeyPad,w
  2709     0673  1683               	bsf	3,5	;RP0=1, select bank1
  2710     0674  1303               	bcf	3,6	;RP1=0, select bank1
  2711     0675  0586               	andwf	6,f	;volatile
  2712     0676                     l135:
  2713     0676  0008               	return
  2714     0677                     __end_of_initKeyPad:
  2715                           
  2716                           	psect	text14
  2717     0500                     __ptext14:	
  2718 ;; *************** function _UART_init *****************
  2719 ;; Defined at:
  2720 ;;		line 373 in file "main.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  baudrate        4   15[BANK0 ] long 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         0       4       0       0       0
  2735 ;;      Locals:         0       0       0       0       0
  2736 ;;      Temps:          0       4       0       0       0
  2737 ;;      Totals:         0       8       0       0       0
  2738 ;;Total ram usage:        8 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 2
  2741 ;; This function calls:
  2742 ;;		___aldiv
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748     0500                     _UART_init:	
  2749                           ;psect for function _UART_init
  2750                           
  2751     0500                     l1797:	
  2752                           ;incstack = 0
  2753                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  2754                           
  2755                           
  2756                           ;main.c: 373: void UART_init(long int baudrate);main.c: 374: {;main.c: 375:     TRISC &=
      +                           ~0x40;
  2757     0500  30BF               	movlw	191
  2758     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2759     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2760     0503  00B3               	movwf	??_UART_init
  2761     0504  0833               	movf	??_UART_init,w
  2762     0505  1683               	bsf	3,5	;RP0=1, select bank1
  2763     0506  1303               	bcf	3,6	;RP1=0, select bank1
  2764     0507  0587               	andwf	7,f	;volatile
  2765     0508                     l1799:
  2766                           
  2767                           ;main.c: 376:     TRISC |= 0x80;
  2768     0508  1787               	bsf	7,7	;volatile
  2769                           
  2770                           ;main.c: 377:     TXSTA |= 0x24;
  2771     0509  3024               	movlw	36
  2772     050A  1283               	bcf	3,5	;RP0=0, select bank0
  2773     050B  1303               	bcf	3,6	;RP1=0, select bank0
  2774     050C  00B3               	movwf	??_UART_init
  2775     050D  0833               	movf	??_UART_init,w
  2776     050E  1683               	bsf	3,5	;RP0=1, select bank1
  2777     050F  1303               	bcf	3,6	;RP1=0, select bank1
  2778     0510  0498               	iorwf	24,f	;volatile
  2779     0511                     l1801:
  2780                           
  2781                           ;main.c: 380:     RCSTA |= 0x80;
  2782     0511  1283               	bcf	3,5	;RP0=0, select bank0
  2783     0512  1303               	bcf	3,6	;RP1=0, select bank0
  2784     0513  1798               	bsf	24,7	;volatile
  2785     0514                     l1803:
  2786                           
  2787                           ;main.c: 381:     RCSTA |= 0x10;
  2788     0514  1618               	bsf	24,4	;volatile
  2789     0515                     l1805:
  2790                           
  2791                           ;main.c: 383:     SPBRG = (char) (20000000 / (long) (64UL * baudrate)) - 1;
  2792     0515  082F               	movf	UART_init@baudrate,w
  2793     0516  00B3               	movwf	??_UART_init
  2794     0517  0830               	movf	UART_init@baudrate+1,w
  2795     0518  00B4               	movwf	??_UART_init+1
  2796     0519  0831               	movf	UART_init@baudrate+2,w
  2797     051A  00B5               	movwf	??_UART_init+2
  2798     051B  0832               	movf	UART_init@baudrate+3,w
  2799     051C  00B6               	movwf	??_UART_init+3
  2800     051D  3006               	movlw	6
  2801     051E                     u1445:
  2802     051E  1003               	clrc
  2803     051F  0DB3               	rlf	??_UART_init,f
  2804     0520  0DB4               	rlf	??_UART_init+1,f
  2805     0521  0DB5               	rlf	??_UART_init+2,f
  2806     0522  0DB6               	rlf	??_UART_init+3,f
  2807     0523                     u1440:
  2808     0523  3EFF               	addlw	-1
  2809     0524  1D03               	skipz
  2810     0525  2D1E               	goto	u1445
  2811     0526  0836               	movf	??_UART_init+3,w
  2812     0527  00A3               	movwf	___aldiv@divisor+3
  2813     0528  0835               	movf	??_UART_init+2,w
  2814     0529  00A2               	movwf	___aldiv@divisor+2
  2815     052A  0834               	movf	??_UART_init+1,w
  2816     052B  00A1               	movwf	___aldiv@divisor+1
  2817     052C  0833               	movf	??_UART_init,w
  2818     052D  00A0               	movwf	___aldiv@divisor
  2819     052E  3001               	movlw	1
  2820     052F  00A7               	movwf	___aldiv@dividend+3
  2821     0530  3031               	movlw	49
  2822     0531  00A6               	movwf	___aldiv@dividend+2
  2823     0532  302D               	movlw	45
  2824     0533  00A5               	movwf	___aldiv@dividend+1
  2825     0534  3000               	movlw	0
  2826     0535  00A4               	movwf	___aldiv@dividend
  2827     0536  120A  118A  2195  120A  118A  	fcall	___aldiv
  2828     053B  1283               	bcf	3,5	;RP0=0, select bank0
  2829     053C  1303               	bcf	3,6	;RP1=0, select bank0
  2830     053D  0820               	movf	?___aldiv,w
  2831     053E  3EFF               	addlw	255
  2832     053F  1683               	bsf	3,5	;RP0=1, select bank1
  2833     0540  1303               	bcf	3,6	;RP1=0, select bank1
  2834     0541  0099               	movwf	25	;volatile
  2835     0542                     l1807:
  2836                           
  2837                           ;main.c: 385:     INTCON |= 0x80;
  2838     0542  178B               	bsf	11,7	;volatile
  2839     0543                     l1809:
  2840                           
  2841                           ;main.c: 386:     INTCON |= 0x40;
  2842     0543  170B               	bsf	11,6	;volatile
  2843     0544                     l1811:
  2844                           
  2845                           ;main.c: 387:     PIE1 |= 0x20;
  2846     0544  168C               	bsf	12,5	;volatile
  2847     0545                     l147:
  2848     0545  0008               	return
  2849     0546                     __end_of_UART_init:
  2850                           
  2851                           	psect	text15
  2852     0195                     __ptext15:	
  2853 ;; *************** function ___aldiv *****************
  2854 ;; Defined at:
  2855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  divisor         4    0[BANK0 ] long 
  2858 ;;  dividend        4    4[BANK0 ] long 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  quotient        4   11[BANK0 ] long 
  2861 ;;  sign            1   10[BANK0 ] unsigned char 
  2862 ;;  counter         1    9[BANK0 ] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  4    0[BANK0 ] long 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         0       8       0       0       0
  2873 ;;      Locals:         0       6       0       0       0
  2874 ;;      Temps:          0       1       0       0       0
  2875 ;;      Totals:         0      15       0       0       0
  2876 ;;Total ram usage:       15 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 1
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_UART_init
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886     0195                     ___aldiv:	
  2887                           ;psect for function ___aldiv
  2888                           
  2889     0195                     l1727:	
  2890                           ;incstack = 0
  2891                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2892                           
  2893     0195  1283               	bcf	3,5	;RP0=0, select bank0
  2894     0196  1303               	bcf	3,6	;RP1=0, select bank0
  2895     0197  01AA               	clrf	___aldiv@sign
  2896     0198                     l1729:
  2897     0198  1FA3               	btfss	___aldiv@divisor+3,7
  2898     0199  299B               	goto	u1311
  2899     019A  299C               	goto	u1310
  2900     019B                     u1311:
  2901     019B  29A9               	goto	l320
  2902     019C                     u1310:
  2903     019C                     l1731:
  2904     019C  09A0               	comf	___aldiv@divisor,f
  2905     019D  09A1               	comf	___aldiv@divisor+1,f
  2906     019E  09A2               	comf	___aldiv@divisor+2,f
  2907     019F  09A3               	comf	___aldiv@divisor+3,f
  2908     01A0  0AA0               	incf	___aldiv@divisor,f
  2909     01A1  1903               	skipnz
  2910     01A2  0AA1               	incf	___aldiv@divisor+1,f
  2911     01A3  1903               	skipnz
  2912     01A4  0AA2               	incf	___aldiv@divisor+2,f
  2913     01A5  1903               	skipnz
  2914     01A6  0AA3               	incf	___aldiv@divisor+3,f
  2915     01A7  01AA               	clrf	___aldiv@sign
  2916     01A8  0AAA               	incf	___aldiv@sign,f
  2917     01A9                     l320:
  2918     01A9  1FA7               	btfss	___aldiv@dividend+3,7
  2919     01AA  29AC               	goto	u1321
  2920     01AB  29AD               	goto	u1320
  2921     01AC                     u1321:
  2922     01AC  29BC               	goto	l1737
  2923     01AD                     u1320:
  2924     01AD                     l1733:
  2925     01AD  09A4               	comf	___aldiv@dividend,f
  2926     01AE  09A5               	comf	___aldiv@dividend+1,f
  2927     01AF  09A6               	comf	___aldiv@dividend+2,f
  2928     01B0  09A7               	comf	___aldiv@dividend+3,f
  2929     01B1  0AA4               	incf	___aldiv@dividend,f
  2930     01B2  1903               	skipnz
  2931     01B3  0AA5               	incf	___aldiv@dividend+1,f
  2932     01B4  1903               	skipnz
  2933     01B5  0AA6               	incf	___aldiv@dividend+2,f
  2934     01B6  1903               	skipnz
  2935     01B7  0AA7               	incf	___aldiv@dividend+3,f
  2936     01B8                     l1735:
  2937     01B8  3001               	movlw	1
  2938     01B9  00A8               	movwf	??___aldiv
  2939     01BA  0828               	movf	??___aldiv,w
  2940     01BB  06AA               	xorwf	___aldiv@sign,f
  2941     01BC                     l1737:
  2942     01BC  3000               	movlw	0
  2943     01BD  00AE               	movwf	___aldiv@quotient+3
  2944     01BE  3000               	movlw	0
  2945     01BF  00AD               	movwf	___aldiv@quotient+2
  2946     01C0  3000               	movlw	0
  2947     01C1  00AC               	movwf	___aldiv@quotient+1
  2948     01C2  3000               	movlw	0
  2949     01C3  00AB               	movwf	___aldiv@quotient
  2950     01C4                     l1739:
  2951     01C4  0823               	movf	___aldiv@divisor+3,w
  2952     01C5  0422               	iorwf	___aldiv@divisor+2,w
  2953     01C6  0421               	iorwf	___aldiv@divisor+1,w
  2954     01C7  0420               	iorwf	___aldiv@divisor,w
  2955     01C8  1903               	skipnz
  2956     01C9  29CB               	goto	u1331
  2957     01CA  29CC               	goto	u1330
  2958     01CB                     u1331:
  2959     01CB  2A19               	goto	l1759
  2960     01CC                     u1330:
  2961     01CC                     l1741:
  2962     01CC  01A9               	clrf	___aldiv@counter
  2963     01CD  0AA9               	incf	___aldiv@counter,f
  2964     01CE  29DC               	goto	l1745
  2965     01CF                     l1743:
  2966     01CF  3001               	movlw	1
  2967     01D0  00A8               	movwf	??___aldiv
  2968     01D1                     u1345:
  2969     01D1  1003               	clrc
  2970     01D2  0DA0               	rlf	___aldiv@divisor,f
  2971     01D3  0DA1               	rlf	___aldiv@divisor+1,f
  2972     01D4  0DA2               	rlf	___aldiv@divisor+2,f
  2973     01D5  0DA3               	rlf	___aldiv@divisor+3,f
  2974     01D6  0BA8               	decfsz	??___aldiv,f
  2975     01D7  29D1               	goto	u1345
  2976     01D8  3001               	movlw	1
  2977     01D9  00A8               	movwf	??___aldiv
  2978     01DA  0828               	movf	??___aldiv,w
  2979     01DB  07A9               	addwf	___aldiv@counter,f
  2980     01DC                     l1745:
  2981     01DC  1FA3               	btfss	___aldiv@divisor+3,7
  2982     01DD  29DF               	goto	u1351
  2983     01DE  29E0               	goto	u1350
  2984     01DF                     u1351:
  2985     01DF  29CF               	goto	l1743
  2986     01E0                     u1350:
  2987     01E0                     l1747:
  2988     01E0  3001               	movlw	1
  2989     01E1  00A8               	movwf	??___aldiv
  2990     01E2                     u1365:
  2991     01E2  1003               	clrc
  2992     01E3  0DAB               	rlf	___aldiv@quotient,f
  2993     01E4  0DAC               	rlf	___aldiv@quotient+1,f
  2994     01E5  0DAD               	rlf	___aldiv@quotient+2,f
  2995     01E6  0DAE               	rlf	___aldiv@quotient+3,f
  2996     01E7  0BA8               	decfsz	??___aldiv,f
  2997     01E8  29E2               	goto	u1365
  2998     01E9                     l1749:
  2999     01E9  0823               	movf	___aldiv@divisor+3,w
  3000     01EA  0227               	subwf	___aldiv@dividend+3,w
  3001     01EB  1D03               	skipz
  3002     01EC  29F7               	goto	u1375
  3003     01ED  0822               	movf	___aldiv@divisor+2,w
  3004     01EE  0226               	subwf	___aldiv@dividend+2,w
  3005     01EF  1D03               	skipz
  3006     01F0  29F7               	goto	u1375
  3007     01F1  0821               	movf	___aldiv@divisor+1,w
  3008     01F2  0225               	subwf	___aldiv@dividend+1,w
  3009     01F3  1D03               	skipz
  3010     01F4  29F7               	goto	u1375
  3011     01F5  0820               	movf	___aldiv@divisor,w
  3012     01F6  0224               	subwf	___aldiv@dividend,w
  3013     01F7                     u1375:
  3014     01F7  1C03               	skipc
  3015     01F8  29FA               	goto	u1371
  3016     01F9  29FB               	goto	u1370
  3017     01FA                     u1371:
  3018     01FA  2A0A               	goto	l1755
  3019     01FB                     u1370:
  3020     01FB                     l1751:
  3021     01FB  0820               	movf	___aldiv@divisor,w
  3022     01FC  02A4               	subwf	___aldiv@dividend,f
  3023     01FD  0821               	movf	___aldiv@divisor+1,w
  3024     01FE  1C03               	skipc
  3025     01FF  0F21               	incfsz	___aldiv@divisor+1,w
  3026     0200  02A5               	subwf	___aldiv@dividend+1,f
  3027     0201  0822               	movf	___aldiv@divisor+2,w
  3028     0202  1C03               	skipc
  3029     0203  0F22               	incfsz	___aldiv@divisor+2,w
  3030     0204  02A6               	subwf	___aldiv@dividend+2,f
  3031     0205  0823               	movf	___aldiv@divisor+3,w
  3032     0206  1C03               	skipc
  3033     0207  0F23               	incfsz	___aldiv@divisor+3,w
  3034     0208  02A7               	subwf	___aldiv@dividend+3,f
  3035     0209                     l1753:
  3036     0209  142B               	bsf	___aldiv@quotient,0
  3037     020A                     l1755:
  3038     020A  3001               	movlw	1
  3039     020B                     u1385:
  3040     020B  1003               	clrc
  3041     020C  0CA3               	rrf	___aldiv@divisor+3,f
  3042     020D  0CA2               	rrf	___aldiv@divisor+2,f
  3043     020E  0CA1               	rrf	___aldiv@divisor+1,f
  3044     020F  0CA0               	rrf	___aldiv@divisor,f
  3045     0210  3EFF               	addlw	-1
  3046     0211  1D03               	skipz
  3047     0212  2A0B               	goto	u1385
  3048     0213                     l1757:
  3049     0213  3001               	movlw	1
  3050     0214  02A9               	subwf	___aldiv@counter,f
  3051     0215  1D03               	btfss	3,2
  3052     0216  2A18               	goto	u1391
  3053     0217  2A19               	goto	u1390
  3054     0218                     u1391:
  3055     0218  29E0               	goto	l1747
  3056     0219                     u1390:
  3057     0219                     l1759:
  3058     0219  082A               	movf	___aldiv@sign,w
  3059     021A  1903               	btfsc	3,2
  3060     021B  2A1D               	goto	u1401
  3061     021C  2A1E               	goto	u1400
  3062     021D                     u1401:
  3063     021D  2A29               	goto	l1763
  3064     021E                     u1400:
  3065     021E                     l1761:
  3066     021E  09AB               	comf	___aldiv@quotient,f
  3067     021F  09AC               	comf	___aldiv@quotient+1,f
  3068     0220  09AD               	comf	___aldiv@quotient+2,f
  3069     0221  09AE               	comf	___aldiv@quotient+3,f
  3070     0222  0AAB               	incf	___aldiv@quotient,f
  3071     0223  1903               	skipnz
  3072     0224  0AAC               	incf	___aldiv@quotient+1,f
  3073     0225  1903               	skipnz
  3074     0226  0AAD               	incf	___aldiv@quotient+2,f
  3075     0227  1903               	skipnz
  3076     0228  0AAE               	incf	___aldiv@quotient+3,f
  3077     0229                     l1763:
  3078     0229  082E               	movf	___aldiv@quotient+3,w
  3079     022A  00A3               	movwf	?___aldiv+3
  3080     022B  082D               	movf	___aldiv@quotient+2,w
  3081     022C  00A2               	movwf	?___aldiv+2
  3082     022D  082C               	movf	___aldiv@quotient+1,w
  3083     022E  00A1               	movwf	?___aldiv+1
  3084     022F  082B               	movf	___aldiv@quotient,w
  3085     0230  00A0               	movwf	?___aldiv
  3086     0231                     l330:
  3087     0231  0008               	return
  3088     0232                     __end_of___aldiv:
  3089                           
  3090                           	psect	text16
  3091     0644                     __ptext16:	
  3092 ;; *************** function _UART_TxString *****************
  3093 ;; Defined at:
  3094 ;;		line 400 in file "main.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  str             1    wreg     PTR const unsigned char 
  3097 ;;		 -> random_string@str(6), 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  str             1    3[BANK0 ] PTR const unsigned char 
  3100 ;;		 -> random_string@str(6), 
  3101 ;;  i               1    4[BANK0 ] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3111 ;;      Params:         0       0       0       0       0
  3112 ;;      Locals:         0       2       0       0       0
  3113 ;;      Temps:          0       1       0       0       0
  3114 ;;      Totals:         0       3       0       0       0
  3115 ;;Total ram usage:        3 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 2
  3118 ;; This function calls:
  3119 ;;		_UART_TxChar
  3120 ;; This function is called by:
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125     0644                     _UART_TxString:	
  3126                           ;psect for function _UART_TxString
  3127                           
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3131                           ;UART_TxString@str stored from wreg
  3132     0644  1283               	bcf	3,5	;RP0=0, select bank0
  3133     0645  1303               	bcf	3,6	;RP1=0, select bank0
  3134     0646  00A3               	movwf	UART_TxString@str
  3135     0647                     l1893:
  3136                           
  3137                           ;main.c: 400: void UART_TxString(const char* str);main.c: 401: {;main.c: 402:     unsign
      +                          ed char i = 0;
  3138     0647  01A4               	clrf	UART_TxString@i
  3139                           
  3140                           ;main.c: 404:     while (str[i] != 0)
  3141     0648  2E5A               	goto	l1899
  3142     0649                     l1895:
  3143                           
  3144                           ;main.c: 405:     {;main.c: 406:         UART_TxChar(str[i]);
  3145     0649  0824               	movf	UART_TxString@i,w
  3146     064A  0723               	addwf	UART_TxString@str,w
  3147     064B  00A2               	movwf	??_UART_TxString
  3148     064C  0822               	movf	??_UART_TxString,w
  3149     064D  0084               	movwf	4
  3150     064E  0800               	movf	0,w
  3151     064F  120A  118A  2677  120A  118A  	fcall	_UART_TxChar
  3152     0654                     l1897:
  3153                           
  3154                           ;main.c: 407:         i++;
  3155     0654  3001               	movlw	1
  3156     0655  1283               	bcf	3,5	;RP0=0, select bank0
  3157     0656  1303               	bcf	3,6	;RP1=0, select bank0
  3158     0657  00A2               	movwf	??_UART_TxString
  3159     0658  0822               	movf	??_UART_TxString,w
  3160     0659  07A4               	addwf	UART_TxString@i,f
  3161     065A                     l1899:
  3162                           
  3163                           ;main.c: 404:     while (str[i] != 0)
  3164     065A  0824               	movf	UART_TxString@i,w
  3165     065B  0723               	addwf	UART_TxString@str,w
  3166     065C  00A2               	movwf	??_UART_TxString
  3167     065D  0822               	movf	??_UART_TxString,w
  3168     065E  0084               	movwf	4
  3169     065F  1383               	bcf	3,7	;select IRP bank0
  3170     0660  0800               	movf	0,w
  3171     0661  1D03               	btfss	3,2
  3172     0662  2E64               	goto	u1471
  3173     0663  2E65               	goto	u1470
  3174     0664                     u1471:
  3175     0664  2E49               	goto	l1895
  3176     0665                     u1470:
  3177     0665                     l159:
  3178     0665  0008               	return
  3179     0666                     __end_of_UART_TxString:
  3180                           
  3181                           	psect	text17
  3182     0677                     __ptext17:	
  3183 ;; *************** function _UART_TxChar *****************
  3184 ;; Defined at:
  3185 ;;		line 390 in file "main.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  ch              1    wreg     unsigned char 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  ch              1    1[BANK0 ] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       0       0       0       0
  3200 ;;      Locals:         0       1       0       0       0
  3201 ;;      Temps:          0       1       0       0       0
  3202 ;;      Totals:         0       2       0       0       0
  3203 ;;Total ram usage:        2 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; Hardware stack levels required when called: 1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_UART_TxString
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213     0677                     _UART_TxChar:	
  3214                           ;psect for function _UART_TxChar
  3215                           
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _UART_TxChar: [wreg+status,2+status,0]
  3219                           ;UART_TxChar@ch stored from wreg
  3220     0677  1283               	bcf	3,5	;RP0=0, select bank0
  3221     0678  1303               	bcf	3,6	;RP1=0, select bank0
  3222     0679  00A1               	movwf	UART_TxChar@ch
  3223     067A                     l1721:
  3224     067A                     l150:	
  3225                           ;main.c: 390: void UART_TxChar(char ch);main.c: 391: {;main.c: 392:     while (!(PIR1 & 
      +                          0x10));
  3226                           
  3227     067A  1E0C               	btfss	12,4	;volatile
  3228     067B  2E7D               	goto	u1301
  3229     067C  2E7E               	goto	u1300
  3230     067D                     u1301:
  3231     067D  2E7A               	goto	l150
  3232     067E                     u1300:
  3233     067E                     l1723:
  3234                           
  3235                           ;main.c: 394:     PIR1 &= ~0x10;
  3236     067E  30EF               	movlw	239
  3237     067F  00A0               	movwf	??_UART_TxChar
  3238     0680  0820               	movf	??_UART_TxChar,w
  3239     0681  058C               	andwf	12,f	;volatile
  3240     0682                     l1725:
  3241                           
  3242                           ;main.c: 396:     TXREG = ch;
  3243     0682  0821               	movf	UART_TxChar@ch,w
  3244     0683  0099               	movwf	25	;volatile
  3245     0684                     l153:
  3246     0684  0008               	return
  3247     0685                     __end_of_UART_TxChar:
  3248                           
  3249                           	psect	text18
  3250     031B                     __ptext18:	
  3251 ;; *************** function _ISR *****************
  3252 ;; Defined at:
  3253 ;;		line 414 in file "main.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0
  3269 ;;      Temps:          5       0       0       0       0
  3270 ;;      Totals:         5       0       0       0       0
  3271 ;;Total ram usage:        5 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		Interrupt level 1
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280     031B                     _ISR:	
  3281                           ;psect for function _ISR
  3282                           
  3283     031B                     i1l1595:
  3284                           
  3285                           ;main.c: 416:     if (RCIF)
  3286     031B  1283               	bcf	3,5	;RP0=0, select bank0
  3287     031C  1303               	bcf	3,6	;RP1=0, select bank0
  3288     031D  1E8C               	btfss	12,5	;volatile
  3289     031E  2B20               	goto	u106_21
  3290     031F  2B21               	goto	u106_20
  3291     0320                     u106_21:
  3292     0320  2B34               	goto	i1l1607
  3293     0321                     u106_20:
  3294     0321                     i1l1597:
  3295                           
  3296                           ;main.c: 417:     {;main.c: 418:         dato[i++] = RCREG;
  3297     0321  0877               	movf	_i,w
  3298     0322  3EA0               	addlw	(low (_dato| 0))& (0+255)
  3299     0323  0084               	movwf	4
  3300     0324  081A               	movf	26,w	;volatile
  3301     0325  1383               	bcf	3,7	;select IRP bank1
  3302     0326  0080               	movwf	0
  3303     0327                     i1l1599:
  3304     0327  3001               	movlw	1
  3305     0328  07F7               	addwf	_i,f
  3306     0329  1803               	skipnc
  3307     032A  0AF8               	incf	_i+1,f
  3308     032B  3000               	movlw	0
  3309     032C  07F8               	addwf	_i+1,f
  3310     032D                     i1l1601:
  3311                           
  3312                           ;main.c: 419:         dato[i] = '\0';
  3313     032D  0877               	movf	_i,w
  3314     032E  3EA0               	addlw	(low (_dato| 0))& (0+255)
  3315     032F  0084               	movwf	4
  3316     0330  0180               	clrf	0
  3317     0331                     i1l1603:
  3318                           
  3319                           ;main.c: 420:         received = 1;
  3320     0331  01D2               	clrf	_received
  3321     0332  0AD2               	incf	_received,f
  3322     0333                     i1l1605:
  3323                           
  3324                           ;main.c: 421:         RCIF = 0;
  3325     0333  128C               	bcf	12,5	;volatile
  3326     0334                     i1l1607:
  3327                           
  3328                           ;main.c: 424:     if (INTCON & 0x04)
  3329     0334  1D0B               	btfss	11,2	;volatile
  3330     0335  2B37               	goto	u107_21
  3331     0336  2B38               	goto	u107_20
  3332     0337                     u107_21:
  3333     0337  2B7D               	goto	i1l169
  3334     0338                     u107_20:
  3335     0338                     i1l1609:
  3336                           
  3337                           ;main.c: 425:     {;main.c: 426:         INTCON &= ~0x04;
  3338     0338  30FB               	movlw	251
  3339     0339  00F0               	movwf	??_ISR
  3340     033A  0870               	movf	??_ISR,w
  3341     033B  058B               	andwf	11,f	;volatile
  3342     033C                     i1l1611:
  3343                           
  3344                           ;main.c: 427:         TMR0 = 6;
  3345     033C  3006               	movlw	6
  3346     033D  0081               	movwf	1	;volatile
  3347     033E                     i1l1613:
  3348                           
  3349                           ;main.c: 429:         if(code_generate_send)
  3350     033E  0851               	movf	_code_generate_send,w
  3351     033F  1903               	btfsc	3,2
  3352     0340  2B42               	goto	u108_21
  3353     0341  2B43               	goto	u108_20
  3354     0342                     u108_21:
  3355     0342  2B7D               	goto	i1l169
  3356     0343                     u108_20:
  3357     0343                     i1l1615:
  3358                           
  3359                           ;main.c: 430:         {;main.c: 432:             countOn++;
  3360     0343  3001               	movlw	1
  3361     0344  07F5               	addwf	_countOn,f
  3362     0345  1803               	skipnc
  3363     0346  0AF6               	incf	_countOn+1,f
  3364     0347  3000               	movlw	0
  3365     0348  07F6               	addwf	_countOn+1,f
  3366                           
  3367                           ;main.c: 433:             countSec++;
  3368     0349  3001               	movlw	1
  3369     034A  07CC               	addwf	_countSec,f
  3370     034B  1803               	skipnc
  3371     034C  0ACD               	incf	_countSec+1,f
  3372     034D  3000               	movlw	0
  3373     034E  07CD               	addwf	_countSec+1,f
  3374     034F                     i1l1617:
  3375                           
  3376                           ;main.c: 436:             if (countSec > 250)
  3377     034F  084D               	movf	_countSec+1,w
  3378     0350  3A80               	xorlw	128
  3379     0351  00FF               	movwf	btemp+1
  3380     0352  3080               	movlw	128
  3381     0353  027F               	subwf	btemp+1,w
  3382     0354  1D03               	skipz
  3383     0355  2B58               	goto	u109_25
  3384     0356  30FB               	movlw	251
  3385     0357  024C               	subwf	_countSec,w
  3386     0358                     u109_25:
  3387     0358  1C03               	skipc
  3388     0359  2B5B               	goto	u109_21
  3389     035A  2B5C               	goto	u109_20
  3390     035B                     u109_21:
  3391     035B  2B66               	goto	i1l1623
  3392     035C                     u109_20:
  3393     035C                     i1l1619:
  3394                           
  3395                           ;main.c: 437:             {;main.c: 438:                 numSec--;
  3396     035C  30FF               	movlw	255
  3397     035D  1283               	bcf	3,5	;RP0=0, select bank0
  3398     035E  1303               	bcf	3,6	;RP1=0, select bank0
  3399     035F  07E1               	addwf	_numSec,f
  3400     0360  1803               	skipnc
  3401     0361  0AE2               	incf	_numSec+1,f
  3402     0362  30FF               	movlw	255
  3403     0363  07E2               	addwf	_numSec+1,f
  3404     0364                     i1l1621:
  3405                           
  3406                           ;main.c: 439:                 countSec = 0;
  3407     0364  01CC               	clrf	_countSec
  3408     0365  01CD               	clrf	_countSec+1
  3409     0366                     i1l1623:
  3410                           
  3411                           ;main.c: 443:             if (countOn >= 15000)
  3412     0366  0876               	movf	_countOn+1,w
  3413     0367  3A80               	xorlw	128
  3414     0368  00FF               	movwf	btemp+1
  3415     0369  30BA               	movlw	186
  3416     036A  027F               	subwf	btemp+1,w
  3417     036B  1D03               	skipz
  3418     036C  2B6F               	goto	u110_25
  3419     036D  3098               	movlw	152
  3420     036E  0275               	subwf	_countOn,w
  3421     036F                     u110_25:
  3422     036F  1C03               	skipc
  3423     0370  2B72               	goto	u110_21
  3424     0371  2B73               	goto	u110_20
  3425     0372                     u110_21:
  3426     0372  2B7D               	goto	i1l169
  3427     0373                     u110_20:
  3428     0373                     i1l1625:
  3429                           
  3430                           ;main.c: 444:             {;main.c: 445:                 stop_wait = 1;
  3431     0373  1283               	bcf	3,5	;RP0=0, select bank0
  3432     0374  1303               	bcf	3,6	;RP1=0, select bank0
  3433     0375  01D0               	clrf	_stop_wait
  3434     0376  0AD0               	incf	_stop_wait,f
  3435     0377                     i1l1627:
  3436                           
  3437                           ;main.c: 446:                 countOn = 0;
  3438     0377  01F5               	clrf	_countOn
  3439     0378  01F6               	clrf	_countOn+1
  3440     0379                     i1l1629:
  3441                           
  3442                           ;main.c: 447:                 numSec = 60;
  3443     0379  303C               	movlw	60
  3444     037A  00E1               	movwf	_numSec
  3445     037B  3000               	movlw	0
  3446     037C  00E2               	movwf	_numSec+1
  3447     037D                     i1l169:
  3448     037D  0874               	movf	??_ISR+4,w
  3449     037E  00FF               	movwf	btemp+1
  3450     037F  0873               	movf	??_ISR+3,w
  3451     0380  008A               	movwf	10
  3452     0381  0872               	movf	??_ISR+2,w
  3453     0382  0084               	movwf	4
  3454     0383  0E71               	swapf	??_ISR+1,w
  3455     0384  0083               	movwf	3
  3456     0385  0EFE               	swapf	btemp,f
  3457     0386  0E7E               	swapf	btemp,w
  3458     0387  0009               	retfie
  3459     0388                     __end_of_ISR:
  3460     007E                     btemp	set	126	;btemp
  3461     007E                     wtemp0	set	126
  3462                           
  3463                           	psect	intentry
  3464     0004                     __pintentry:	
  3465                           ;incstack = 0
  3466                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1]
  3467                           
  3468     0004                     interrupt_function:
  3469     007E                     saved_w	set	btemp
  3470     0004  00FE               	movwf	btemp
  3471     0005  0E03               	swapf	3,w
  3472     0006  00F1               	movwf	??_ISR+1
  3473     0007  0804               	movf	4,w
  3474     0008  00F2               	movwf	??_ISR+2
  3475     0009  080A               	movf	10,w
  3476     000A  00F3               	movwf	??_ISR+3
  3477     000B  087F               	movf	btemp+1,w
  3478     000C  00F4               	movwf	??_ISR+4
  3479     000D  120A  118A  2B1B   	ljmp	_ISR
  3480                           
  3481                           	psect	idloc
  3482                           
  3483                           ;Config register IDLOC0 @ 0x2000
  3484                           ;	unspecified, using default values
  3485     2000                     	org	8192
  3486     2000  3FFF               	dw	16383
  3487                           
  3488                           ;Config register IDLOC1 @ 0x2001
  3489                           ;	unspecified, using default values
  3490     2001                     	org	8193
  3491     2001  3FFF               	dw	16383
  3492                           
  3493                           ;Config register IDLOC2 @ 0x2002
  3494                           ;	unspecified, using default values
  3495     2002                     	org	8194
  3496     2002  3FFF               	dw	16383
  3497                           
  3498                           ;Config register IDLOC3 @ 0x2003
  3499                           ;	unspecified, using default values
  3500     2003                     	org	8195
  3501     2003  3FFF               	dw	16383
  3502                           
  3503                           	psect	config
  3504                           
  3505                           ;Config register CONFIG @ 0x2007
  3506                           ;	Oscillator Selection bits
  3507                           ;	FOSC = HS, HS oscillator
  3508                           ;	Watchdog Timer Enable bit
  3509                           ;	WDTE = OFF, WDT disabled
  3510                           ;	Power-up Timer Enable bit
  3511                           ;	PWRTE = ON, PWRT enabled
  3512                           ;	Brown-out Reset Enable bit
  3513                           ;	BOREN = ON, BOR enabled
  3514                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3515                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3516                           ;	Data EEPROM Memory Code Protection bit
  3517                           ;	CPD = OFF, Data EEPROM code protection off
  3518                           ;	Flash Program Memory Write Enable bits
  3519                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3520                           ;	In-Circuit Debugger Mode bit
  3521                           ;	DEBUG = 0x1, unprogrammed default
  3522                           ;	Flash Program Memory Code Protection bit
  3523                           ;	CP = OFF, Code protection off
  3524     2007                     	org	8199
  3525     2007  3F72               	dw	16242

Data Sizes:
    Strings     25
    Constant    82
    Data        6
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     44      67
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    UART_TxString@str	PTR const unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 11
		 -> random_string@str(BANK0[6]), STR_3(CODE[8]), buff(BANK0[2]), STR_2(CODE[6]), 
		 -> STR_1(CODE[11]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    sp__random_string	PTR unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 

    main@code	PTR unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_itoa
    _random_string->___lwmod
    _rand->___lmul
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd
    _itoa->_utoa
    _utoa->___lwmod
    ___lwmod->_rand
    _UART_init->___aldiv
    _UART_TxString->_UART_TxChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5501
                                             41 BANK0      3     3      0
                      _UART_TxString
                          _UART_init
                         _initKeyPad
                               _itoa
                           _lcd_init
                           _lcd_send
                            _lcd_str
                      _random_string
 ---------------------------------------------------------------------------------
 (1) _random_string                                        5     5      0    1041
                                             26 BANK0      5     5      0
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     316
                                             13 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     611
                                              3 BANK0      4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send                                             4     3      1     512
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      31
                                              3 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2298
                                             35 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1849
                                             26 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                             20 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initKeyPad                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            8     4      4     746
                                             15 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        3     3      0     197
                                              2 BANK0      3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TxString
     _UART_TxChar
   _UART_init
     ___aldiv
   _initKeyPad
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
         _rand (ARG)
           ___lmul
   _lcd_init
     _lcd_cmd
   _lcd_send
   _lcd_str
     _lcd_dat
   _random_string
     ___lwmod
     _rand

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7E      12        0.0%
ABS                  0      0      7E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 24 17:41:42 2023

                           _i 0077                             pc 0002                            fsr 0004  
                         l100 00D6                           l120 0643                           l123 03E3  
                         l132 05DB                           l108 0191                           l117 0621  
                         l150 067A                           l135 0676                           l320 01A9  
                         l144 0472                           l153 0684                           l129 05AE  
                         l330 0231                           l147 0545                           l159 0665  
                         l269 042B                           l527 04FF                           l537 0581  
                         l715 0305                           l717 031A                           l709 05FF  
                         l725 04B9                           _ISR 031B         __end_of_random_string 0473  
                         fsr0 0004                           indf 0000                          ?_ISR 0070  
                        l2001 014E                          l2011 017A                          l2003 0151  
                        l2013 0181                          l2005 015F                          l2015 018C  
                        l2007 0168                          l2017 018F                          l2009 0173  
                        l1701 061E                          l1711 0640                          l1703 0625  
                        l1631 03E4                          l1721 067A                          l1801 0511  
                        l1705 0626                          l1641 0423                          l1633 03EE  
                        l1713 0473                          l1723 067E                          l1731 019C  
                        l1811 0544                          l1803 0514                          l1651 04C7  
                        l1707 0628                          l1635 03F2                          l1715 0494  
                        l1725 0682                          l1741 01CC                          l1733 01AD  
                        l1805 0515                          l1661 04ED                          l1653 04CE  
                        l1645 04BA                          l1901 05DF                          l1709 0633  
                        l1821 039A                          l1813 0388                          l1637 0409  
                        l1717 04A2                          l1751 01FB                          l1743 01CF  
                        l1735 01B8                          l1727 0195                          l1807 0542  
                        l1663 04EE                          l1655 04D2                          l1647 04BE  
                        l1671 0546                          l1911 05F1                          l1903 05DF  
                        l1831 03BF                          l1823 039D                          l1815 038C  
                        l1639 0412                          l1761 021E                          l1753 0209  
                        l1745 01DC                          l1737 01BC                          l1729 0198  
                        l1809 0543                          l1665 04F5                          l1657 04D6  
                        l1649 04C4                          l1681 0560                          l1673 054E  
                        l1905 05E3                          l1841 03DD                          l1833 03C5  
                        l1825 03A3                          l1817 038F                          l1921 005D  
                        l1763 0229                          l1755 020A                          l1747 01E0  
                        l1739 01C4                          l1843 0666                          l1659 04E7  
                        l1667 04FB                          l1683 056A                          l1675 0551  
                        l1771 02C7                          l1907 05E8                          l1835 03CB  
                        l1827 03AE                          l1819 0390                          l1851 05B7  
                        l1931 0081                          l1923 0061                          l1915 0050  
                        l1757 0213                          l1749 01E9                          l1685 0570  
                        l1677 0558                          l1781 02E8                          l1773 02CB  
                        l1909 05EC                          l1837 03D1                          l1829 03B4  
                        l1861 05CE                          l1853 05BA                          l1845 05B2  
                        l1693 0603                          l1933 008C                          l1925 006E  
                        l1917 0053                          l1759 0219                          l1687 0577  
                        l1679 055C                          l1791 0310                          l1783 02FB  
                        l1775 02D1                          l1767 02B0                          l1839 03D7  
                        l1863 05D8                          l1855 05BC                          l1847 05B5  
                        l1695 0604                          l1871 059D                          l1943 0094  
                        l1935 008F                          l1927 0073                          l1919 0059  
                        l1689 057D                          l1793 0316                          l1785 0301  
                        l1777 02D5                          l1769 02B4                          l1857 05C1  
                        l1849 05B6                          l1697 0606                          l1865 0582  
                        l1881 044C                          l1873 042C                          l1961 00D4  
                        l1953 00A2                          l1945 0097                          l1937 0091  
                        l1929 0078                          l1787 0309                          l1779 02D7  
                        l1859 05CB                          l1699 0611                          l1867 0586  
                        l1883 045B                          l1971 00F2                          l1963 00DA  
                        l1955 00AF                          l1947 00A1                          l1893 0647  
                        l1797 0500                          l1789 030E                          l1869 0597  
                        l1885 0461                          l1981 0115                          l1973 00FA  
                        l1965 00E0                          l1957 00BA                          l1895 0649  
                        l1799 0508                          l1887 046E                          l1879 0430  
                        l1991 0131                          l1983 011C                          l1975 0103  
                        l1967 00E5                          l1959 00C9                          l1897 0654  
                        l1889 0471                          l1985 0127                          l1977 010B  
                        l1969 00EB                          l1993 013A                          l1899 065A  
                        l1995 013E                          l1987 012A                          l1979 010F  
                        l1997 0144                          l1989 012E                          l1999 0149  
                        STR_1 0294                          STR_2 02A7                          STR_3 029F  
                        u1110 03F2                          u1111 03F1                          u1200 04E7  
                        u1201 04E6                          u1121 03FB                          u1122 0402  
                        u1123 0409                          u1300 067E                          u1220 04FB  
                        u1301 067D                          u1221 04FA                          u1205 04E3  
                        u1310 019C                          u1230 054E                          u1150 0423  
                        u1311 019B                          u1215 04EF                          u1231 054D  
                        u1151 0422                          u1135 040B                          u1400 021E  
                        u1320 01AD                          u1160 04C4                          u1401 021D  
                        u1321 01AC                          u1161 04C3                          u1145 0413  
                        u1330 01CC                          u1250 0560                          u1410 02D1  
                        u1331 01CB                          u1251 055F                          u1411 02D0  
                        u1180 04D6                          u1260 056A                          u1420 0301  
                        u1500 00C9                          u1181 04D5                          u1261 0569  
                        u1245 0552                          u1421 0300                          u1501 00C8  
                        u1350 01E0                          u1430 0316                          u1351 01DF  
                        u1175 04C8                          u1431 0315                          u1440 0523  
                        u1280 057D                          u1600 017A                          u1520 00E0  
                        u1345 01D1                          u1281 057C                          u1265 0566  
                        u1601 0179                          u1521 00DF                          u1370 01FB  
                        u1450 05AE                          u1290 04B1                          u1530 00E5  
                        u1371 01FA                          u1195 04D7                          u1275 0571  
                        u1451 05AD                          u1531 00E4                          u1515 00CC  
                        u1460 046E                          u1540 00EB                          u1365 01E2  
                        u1445 051E                          u1461 046D                          u1541 00EA  
                        u1470 0665                          u1390 0219                          u1550 0115  
                        u1471 0664                          u1391 0218                          u1375 01F7  
                        u1295 04AC                          u1551 0114                          u1480 05E3  
                        u1560 013A                          u1385 020B                          u1481 05E2  
                        u1465 046A                          u1561 0139                          u1617 00B5  
                        u1570 0144                          u1490 00AF                          u1707 063C  
                        u1627 060D                          u1571 0143                          u1491 00AE  
                        u1580 0149                          u1637 061A                          u1581 0148  
                        u1590 014E                          u1647 05C7                          u1591 014D  
                        _PIE1 008C                          u1657 05D4                          u1667 0396  
                        u1677 03A9                          u1687 03BA                          u1697 062F  
                        _RCIF 0065                          _PIR1 000C                          _TMR0 0001  
                        _dato 00A0                          _buff 005B                          _main 0050  
                        _keys 0281                          _rand 0473                          _itoa 05DC  
                        btemp 007E                          _utoa 02AD                          start 0010  
                       ??_ISR 0070                  lcd_send@dato 0023                  lcd_send@tipo 0020  
             __end_of___aldiv 0232                         ?_main 0070                         ?_rand 002D  
                       ?_itoa 0043                         ?_utoa 003A               __end_of___lwdiv 0500  
                       i1l169 037D               __end_of___lwmod 0582                         _RCREG 001A  
                       _RCSTA 0018                         _SPBRG 0099                         _PORTB 0006  
                       _PORTD 0008                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
                       _TXSTA 0098               __end_of_colMask 0294           ___lmul@multiplicand 0024  
             __end_of_lcd_dat 0622               __end_of_lcd_cmd 0644               __end_of_lcd_str 05AF  
                       _keyok 0053                         _randx 005D                         pclath 000A  
             __end_of_rowMask 0291                         utoa@c 0041                         utoa@v 003F  
                       status 0003                         wtemp0 007E              random_string@str 0055  
             __initialization 0013                  __end_of_main 0195                  __end_of_keys 028D  
                __end_of_rand 04BA                  __end_of_itoa 0600                  __end_of_utoa 031B  
                      ??_main 0049                        ??_rand 002F                        ??_itoa 0047  
                      ??_utoa 003E                        u110_20 0373                        u110_21 0372  
                      u110_25 036F                        i1l1601 032D                        i1l1611 033C  
                      i1l1603 0331                        i1l1621 0364                        i1l1613 033E  
                      i1l1605 0333                        i1l1623 0366                        i1l1615 0343  
                      i1l1607 0334                        i1l1625 0373                        i1l1617 034F  
                      i1l1609 0338                        i1l1627 0377                        i1l1619 035C  
                      i1l1629 0379                        u106_20 0321                        u106_21 0320  
                      i1l1595 031B                        i1l1597 0321                        i1l1599 0327  
                      u107_20 0338                        u107_21 0337                        u108_20 0343  
                      u108_21 0342                        u109_20 035C                        u109_21 035B  
                      u109_25 0358                        _INTCON 000B                  ?_UART_TxChar 0070  
            __end_of_lcd_init 03E4              __end_of_lcd_send 05DC                        ___lmul 03E4  
                   ??___aldiv 0028             __end_of_UART_init 0546                     ??___lwdiv 0024  
                   ??___lwmod 0038                        _numSec 0061                     ??_lcd_dat 0020  
                   ??_lcd_cmd 0020                     ??_lcd_str 0025                        saved_w 007E  
     __end_of__initialization 004C         __end_of_UART_TxString 0666                __pcstackCOMMON 0070  
                __pidataBANK0 068D                    __pbssBANK0 004C                    __pbssBANK1 00A0  
                  __pmaintext 0050                       ?___lmul 0020                    __pintentry 0004  
              ___lmul@product 0029                     ?_lcd_init 0070                     ?_lcd_send 0020  
                  __stringtab 0232                    _initKeyPad 0666                       ___aldiv 0195  
                     ___lwdiv 04BA                       ___lwmod 0546                       _colMask 0291  
                     _colScan 004F                       __ptext1 042C                       __ptext2 0473  
                     __ptext3 03E4                       __ptext4 0582                       __ptext5 0600  
                     __ptext6 05AF                       __ptext7 0388                       __ptext8 0622  
                     __ptext9 05DC                       _lcd_dat 0600                       _lcd_cmd 0622  
                     _lcd_str 0582                       _countOn 0075              ___aldiv@dividend 0024  
                  _keypressed 0054                       _rowMask 028D                       _rowScan 004E  
                     clrloop0 0686                    ??_lcd_init 0023                    ??_lcd_send 0021  
        end_of_initialization 004C                       itoa@buf 0048                       itoa@val 0043  
              UART_TxString@i 0024              ___aldiv@quotient 002B                       utoa@buf 0042  
                     utoa@val 003A            random_string@index 003B                     _UART_init 0500  
                   _PORTEbits 0009                 _random_string 042C                     _TRISEbits 0089  
                  lcd_dat@val 0022                    lcd_cmd@val 0022                    lcd_str@str 0023  
              random_string@i 003D                   ?_initKeyPad 0070                __end_of___lmul 042C  
                  ?_UART_init 002F                ?_random_string 0070           start_initialization 0013  
                 __end_of_ISR 0388                      ??___lmul 0028                   __pdataBANK0 005D  
                 __pbssCOMMON 0075                     ___latbits 0002                 __pcstackBANK0 0020  
            ___lwdiv@dividend 0022                      ?___aldiv 0020                      ?___lwdiv 0020  
                    ?___lwmod 0034                     __pstrings 0232                   ??_UART_init 0033  
                    ?_lcd_dat 0070               ??_random_string 003A                      ?_lcd_cmd 0070  
                    ?_lcd_str 0023                 UART_TxChar@ch 0021              ___lwdiv@quotient 0026  
             ___aldiv@divisor 0020             interrupt_function 0004               ___aldiv@counter 0029  
                   clear_ram0 0685                 ??_UART_TxChar 0020                 _UART_TxString 0644  
__end_ofrandom_string@charset 0281                   __stringbase 0241                     _stop_wait 0050  
           ___lmul@multiplier 0020                ?_UART_TxString 0070                  ??_initKeyPad 0020  
         __end_of_UART_TxChar 0685            __end_of__stringtab 0242               ___lwdiv@divisor 0020  
             ___lwdiv@counter 0025                      __ptext10 02AD                      __ptext11 0546  
                    __ptext12 04BA                      __ptext13 0666                      __ptext14 0500  
                    __ptext15 0195                      __ptext16 0644                      __ptext17 0677  
                    __ptext18 031B                      _lcd_init 0388              UART_TxString@str 0023  
                    _lcd_send 05AF            __end_of_initKeyPad 0677                      _countSec 004C  
          _code_generate_send 0051                      _received 0052                      main@code 004B  
                    lcd_str@i 0026                      itoa@base 0045          random_string@charset 0242  
                    intlevel1 0000             UART_init@baudrate 002F              ___lwmod@dividend 0036  
             ??_UART_TxString 0022                     stringcode 023C                   _UART_TxChar 0677  
                    utoa@base 003C                    _OPTION_REG 0081               ___lwmod@divisor 0034  
             ___lwmod@counter 0039                      stringdir 023C                      stringtab 0232  
                ___aldiv@sign 002A  
