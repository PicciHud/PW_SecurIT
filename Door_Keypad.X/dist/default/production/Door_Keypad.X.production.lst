

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 26 15:40:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0098                     	;# 
   182     0099                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     010C                     	;# 
   188     010D                     	;# 
   189     010E                     	;# 
   190     010F                     	;# 
   191     018C                     	;# 
   192     018D                     	;# 
   193                           
   194                           	psect	idataBANK0
   195     06AF                     __pidataBANK0:
   196                           
   197                           ;initializer for _randx
   198     06AF  3401               	retlw	1
   199     06B0  3400               	retlw	0
   200     06B1  3400               	retlw	0
   201     06B2  3400               	retlw	0
   202                           
   203                           ;initializer for _numSec
   204     06B3  343C               	retlw	60
   205     06B4  3400               	retlw	0
   206                           
   207                           	psect	strings
   208     0245                     __pstrings:
   209     0245                     stringtab:
   210     0245                     __stringtab:
   211                           
   212                           ;	String table - string pointers are 1 byte each
   213     0245  1BFF               	btfsc	btemp+1,7
   214     0246  2A4F               	ljmp	stringcode
   215     0247  1383               	bcf	3,7
   216     0248  187F               	btfsc	btemp+1,0
   217     0249  1783               	bsf	3,7
   218     024A  0800               	movf	0,w
   219     024B  0A84               	incf	4,f
   220     024C  1903               	skipnz
   221     024D  0AFF               	incf	btemp+1,f
   222     024E  0008               	return
   223     024F                     stringcode:
   224     024F                     stringdir:
   225     024F  3002               	movlw	high stringdir
   226     0250  008A               	movwf	10
   227     0251  0804               	movf	4,w
   228     0252  0A84               	incf	4,f
   229     0253  0782               	addwf	2,f
   230     0254                     __stringbase:
   231     0254  3400               	retlw	0
   232     0255                     __end_of__stringtab:
   233     0255                     random_string@charset:
   234     0255  3461               	retlw	97
   235     0256  3462               	retlw	98
   236     0257  3463               	retlw	99
   237     0258  3464               	retlw	100
   238     0259  3465               	retlw	101
   239     025A  3466               	retlw	102
   240     025B  3467               	retlw	103
   241     025C  3468               	retlw	104
   242     025D  3469               	retlw	105
   243     025E  346A               	retlw	106
   244     025F  346B               	retlw	107
   245     0260  346C               	retlw	108
   246     0261  346D               	retlw	109
   247     0262  346E               	retlw	110
   248     0263  346F               	retlw	111
   249     0264  3470               	retlw	112
   250     0265  3471               	retlw	113
   251     0266  3472               	retlw	114
   252     0267  3473               	retlw	115
   253     0268  3474               	retlw	116
   254     0269  3475               	retlw	117
   255     026A  3476               	retlw	118
   256     026B  3477               	retlw	119
   257     026C  3478               	retlw	120
   258     026D  3479               	retlw	121
   259     026E  347A               	retlw	122
   260     026F  3441               	retlw	65
   261     0270  3442               	retlw	66
   262     0271  3443               	retlw	67
   263     0272  3444               	retlw	68
   264     0273  3445               	retlw	69
   265     0274  3446               	retlw	70
   266     0275  3447               	retlw	71
   267     0276  3448               	retlw	72
   268     0277  3449               	retlw	73
   269     0278  344A               	retlw	74
   270     0279  344B               	retlw	75
   271     027A  344C               	retlw	76
   272     027B  344D               	retlw	77
   273     027C  344E               	retlw	78
   274     027D  344F               	retlw	79
   275     027E  3450               	retlw	80
   276     027F  3451               	retlw	81
   277     0280  3452               	retlw	82
   278     0281  3453               	retlw	83
   279     0282  3454               	retlw	84
   280     0283  3455               	retlw	85
   281     0284  3456               	retlw	86
   282     0285  3457               	retlw	87
   283     0286  3458               	retlw	88
   284     0287  3459               	retlw	89
   285     0288  345A               	retlw	90
   286     0289  3430               	retlw	48
   287     028A  3431               	retlw	49
   288     028B  3432               	retlw	50
   289     028C  3433               	retlw	51
   290     028D  3434               	retlw	52
   291     028E  3435               	retlw	53
   292     028F  3436               	retlw	54
   293     0290  3437               	retlw	55
   294     0291  3438               	retlw	56
   295     0292  3439               	retlw	57
   296     0293  3400               	retlw	0
   297     0294                     __end_ofrandom_string@charset:
   298     0294                     _keys:
   299     0294  342A               	retlw	42
   300     0295  3407               	retlw	7
   301     0296  3404               	retlw	4
   302     0297  3401               	retlw	1
   303     0298  3400               	retlw	0
   304     0299  3408               	retlw	8
   305     029A  3405               	retlw	5
   306     029B  3402               	retlw	2
   307     029C  3423               	retlw	35
   308     029D  3409               	retlw	9
   309     029E  3406               	retlw	6
   310     029F  3403               	retlw	3
   311     02A0                     __end_of_keys:
   312     02A0                     _rowMask:
   313     02A0  3401               	retlw	1
   314     02A1  3402               	retlw	2
   315     02A2  3404               	retlw	4
   316     02A3  3408               	retlw	8
   317     02A4                     __end_of_rowMask:
   318     02A4                     _colMask:
   319     02A4  34FE               	retlw	254
   320     02A5  34FD               	retlw	253
   321     02A6  34FB               	retlw	251
   322     02A7                     __end_of_colMask:
   323     001A                     _RCREG	set	26
   324     0019                     _TXREG	set	25
   325     000C                     _PIR1	set	12
   326     0018                     _RCSTA	set	24
   327     0009                     _PORTEbits	set	9
   328     0008                     _PORTD	set	8
   329     0006                     _PORTB	set	6
   330     0001                     _TMR0	set	1
   331     000B                     _INTCON	set	11
   332     0065                     _RCIF	set	101
   333     008C                     _PIE1	set	140
   334     0099                     _SPBRG	set	153
   335     0098                     _TXSTA	set	152
   336     0087                     _TRISC	set	135
   337     0089                     _TRISEbits	set	137
   338     0089                     _TRISE	set	137
   339     0088                     _TRISD	set	136
   340     0081                     _OPTION_REG	set	129
   341     0086                     _TRISB	set	134
   342     02A7                     STR_1:
   343     02A7  3477               	retlw	119	;'w'
   344     02A8  3461               	retlw	97	;'a'
   345     02A9  3469               	retlw	105	;'i'
   346     02AA  3474               	retlw	116	;'t'
   347     02AB  3469               	retlw	105	;'i'
   348     02AC  346E               	retlw	110	;'n'
   349     02AD  3467               	retlw	103	;'g'
   350     02AE  342E               	retlw	46	;'.'
   351     02AF  342E               	retlw	46	;'.'
   352     02B0  342E               	retlw	46	;'.'
   353     02B1  3400               	retlw	0
   354     02B2                     STR_3:
   355     02B2  3432               	retlw	50	;'2'
   356     02B3  3438               	retlw	56	;'8'
   357     02B4  3437               	retlw	55	;'7'
   358     02B5  3435               	retlw	53	;'5'
   359     02B6  3433               	retlw	51	;'3'
   360     02B7  340D               	retlw	13
   361     02B8  340A               	retlw	10
   362     02B9  3400               	retlw	0
   363     02BA                     STR_2:
   364     02BA  3432               	retlw	50	;'2'
   365     02BB  3438               	retlw	56	;'8'
   366     02BC  3437               	retlw	55	;'7'
   367     02BD  3435               	retlw	53	;'5'
   368     02BE  3433               	retlw	51	;'3'
   369     02BF  3400               	retlw	0
   370     02A7                     
   371                           	psect	cinit
   372     0013                     start_initialization:	
   373                           ; #config settings
   374                           
   375     0013                     __initialization:
   376                           
   377                           ; Initialize objects allocated to BANK0
   378     0013  120A  118A  26AF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   379     0018  00DF               	movwf	__pdataBANK0& (0+127)
   380     0019  120A  118A  26B0  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   381     001E  00E0               	movwf	(__pdataBANK0+1)& (0+127)
   382     001F  120A  118A  26B1  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   383     0024  00E1               	movwf	(__pdataBANK0+2)& (0+127)
   384     0025  120A  118A  26B2  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   385     002A  00E2               	movwf	(__pdataBANK0+3)& (0+127)
   386     002B  120A  118A  26B3  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   387     0030  00E3               	movwf	(__pdataBANK0+4)& (0+127)
   388     0031  120A  118A  26B4  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   389     0036  00E4               	movwf	(__pdataBANK0+5)& (0+127)
   390                           
   391                           ; Clear objects allocated to BANK1
   392     0037  1383               	bcf	3,7	;select IRP bank0
   393     0038  30A0               	movlw	low __pbssBANK1
   394     0039  0084               	movwf	4
   395     003A  30D2               	movlw	low (__pbssBANK1+50)
   396     003B  120A  118A  26A7  120A  118A  	fcall	clear_ram0
   397                           
   398                           ; Clear objects allocated to BANK0
   399     0040  304C               	movlw	low __pbssBANK0
   400     0041  0084               	movwf	4
   401     0042  305F               	movlw	low (__pbssBANK0+19)
   402     0043  120A  118A  26A7  120A  118A  	fcall	clear_ram0
   403                           
   404                           ; Clear objects allocated to COMMON
   405     0048  01F5               	clrf	__pbssCOMMON& (0+127)
   406     0049  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   407     004A  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   408     004B  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   409     004C                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412     004C                     __end_of__initialization:
   413     004C  0183               	clrf	3
   414     004D  120A  118A  2850   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417     0075                     __pbssCOMMON:
   418     0075                     _countOn:
   419     0075                     	ds	2
   420     0077                     _i:
   421     0077                     	ds	2
   422                           
   423                           	psect	bssBANK0
   424     004C                     __pbssBANK0:
   425     004C                     _countSec:
   426     004C                     	ds	2
   427     004E                     _rowScan:
   428     004E                     	ds	1
   429     004F                     _colScan:
   430     004F                     	ds	1
   431     0050                     _stop_wait:
   432     0050                     	ds	1
   433     0051                     _code_generate_send:
   434     0051                     	ds	1
   435     0052                     _received:
   436     0052                     	ds	1
   437     0053                     _keyok:
   438     0053                     	ds	1
   439     0054                     _keypressed:
   440     0054                     	ds	1
   441     0055                     random_string@str:
   442     0055                     	ds	8
   443     005D                     _buff:
   444     005D                     	ds	2
   445                           
   446                           	psect	dataBANK0
   447     005F                     __pdataBANK0:
   448     005F                     _randx:
   449     005F                     	ds	4
   450     0063                     _numSec:
   451     0063                     	ds	2
   452                           
   453                           	psect	bssBANK1
   454     00A0                     __pbssBANK1:
   455     00A0                     _dato:
   456     00A0                     	ds	50
   457                           
   458                           	psect	clrtext
   459     06A7                     clear_ram0:	
   460                           ;	Called with FSR containing the base address, and
   461                           ;	W with the last address+1
   462                           
   463     06A7  0064               	clrwdt	;clear the watchdog before getting into this loop
   464     06A8                     clrloop0:
   465     06A8  0180               	clrf	0	;clear RAM location pointed to by FSR
   466     06A9  0A84               	incf	4,f	;increment pointer
   467     06AA  0604               	xorwf	4,w	;XOR with final address
   468     06AB  1903               	btfsc	3,2	;have we reached the end yet?
   469     06AC  3400               	retlw	0	;all done for this memory range, return
   470     06AD  0604               	xorwf	4,w	;XOR again to restore value
   471     06AE  2EA8               	goto	clrloop0	;do the next byte
   472                           
   473                           	psect	cstackCOMMON
   474     0070                     __pcstackCOMMON:
   475     0070                     ?_lcd_init:
   476     0070                     ?_initKeyPad:	
   477                           ; 1 bytes @ 0x0
   478                           
   479     0070                     ?_random_string:	
   480                           ; 1 bytes @ 0x0
   481                           
   482     0070                     ?_lcd_dat:	
   483                           ; 1 bytes @ 0x0
   484                           
   485     0070                     ?_lcd_cmd:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ?_UART_TxChar:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     ?_ISR:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ??_ISR:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ?_main:	
   498                           ; 1 bytes @ 0x0
   499                           
   500                           
   501                           ; 2 bytes @ 0x0
   502     0070                     	ds	5
   503                           
   504                           	psect	cstackBANK0
   505     0020                     __pcstackBANK0:
   506     0020                     ??_initKeyPad:
   507     0020                     ?_lcd_send:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0020                     ??_lcd_dat:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0020                     ??_lcd_cmd:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0020                     ??_UART_TxChar:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0020                     ?___lwdiv:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0020                     ?___lmul:	
   523                           ; 2 bytes @ 0x0
   524                           
   525     0020                     ?___aldiv:	
   526                           ; 4 bytes @ 0x0
   527                           
   528     0020                     lcd_send@tipo:	
   529                           ; 4 bytes @ 0x0
   530                           
   531     0020                     ___lwdiv@divisor:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0020                     ___lmul@multiplier:	
   535                           ; 2 bytes @ 0x0
   536                           
   537     0020                     ___aldiv@divisor:	
   538                           ; 4 bytes @ 0x0
   539                           
   540                           
   541                           ; 4 bytes @ 0x0
   542     0020                     	ds	1
   543     0021                     ??_lcd_send:
   544     0021                     UART_TxChar@ch:	
   545                           ; 1 bytes @ 0x1
   546                           
   547                           
   548                           ; 1 bytes @ 0x1
   549     0021                     	ds	1
   550     0022                     ?_UART_TxString:
   551     0022                     lcd_dat@val:	
   552                           ; 1 bytes @ 0x2
   553                           
   554     0022                     lcd_cmd@val:	
   555                           ; 1 bytes @ 0x2
   556                           
   557     0022                     UART_TxString@str:	
   558                           ; 1 bytes @ 0x2
   559                           
   560     0022                     ___lwdiv@dividend:	
   561                           ; 2 bytes @ 0x2
   562                           
   563                           
   564                           ; 2 bytes @ 0x2
   565     0022                     	ds	1
   566     0023                     ??_lcd_init:
   567     0023                     ?_lcd_str:	
   568                           ; 1 bytes @ 0x3
   569                           
   570     0023                     lcd_send@dato:	
   571                           ; 1 bytes @ 0x3
   572                           
   573     0023                     lcd_str@str:	
   574                           ; 1 bytes @ 0x3
   575                           
   576                           
   577                           ; 2 bytes @ 0x3
   578     0023                     	ds	1
   579     0024                     ??_UART_TxString:
   580     0024                     ??___lwdiv:	
   581                           ; 1 bytes @ 0x4
   582                           
   583     0024                     ___lmul@multiplicand:	
   584                           ; 1 bytes @ 0x4
   585                           
   586     0024                     ___aldiv@dividend:	
   587                           ; 4 bytes @ 0x4
   588                           
   589                           
   590                           ; 4 bytes @ 0x4
   591     0024                     	ds	1
   592     0025                     ??_lcd_str:
   593     0025                     UART_TxString@i:	
   594                           ; 1 bytes @ 0x5
   595                           
   596     0025                     ___lwdiv@counter:	
   597                           ; 1 bytes @ 0x5
   598                           
   599                           
   600                           ; 1 bytes @ 0x5
   601     0025                     	ds	1
   602     0026                     lcd_str@i:
   603     0026                     ___lwdiv@quotient:	
   604                           ; 1 bytes @ 0x6
   605                           
   606                           
   607                           ; 2 bytes @ 0x6
   608     0026                     	ds	2
   609     0028                     ??___lmul:
   610     0028                     ??___aldiv:	
   611                           ; 1 bytes @ 0x8
   612                           
   613                           
   614                           ; 1 bytes @ 0x8
   615     0028                     	ds	1
   616     0029                     ___aldiv@counter:
   617     0029                     ___lmul@product:	
   618                           ; 1 bytes @ 0x9
   619                           
   620                           
   621                           ; 4 bytes @ 0x9
   622     0029                     	ds	1
   623     002A                     ___aldiv@sign:
   624                           
   625                           ; 1 bytes @ 0xA
   626     002A                     	ds	1
   627     002B                     ___aldiv@quotient:
   628                           
   629                           ; 4 bytes @ 0xB
   630     002B                     	ds	2
   631     002D                     ?_rand:
   632                           
   633                           ; 2 bytes @ 0xD
   634     002D                     	ds	2
   635     002F                     ?_UART_init:
   636     002F                     ??_rand:	
   637                           ; 1 bytes @ 0xF
   638                           
   639     002F                     UART_init@baudrate:	
   640                           ; 1 bytes @ 0xF
   641                           
   642                           
   643                           ; 4 bytes @ 0xF
   644     002F                     	ds	4
   645     0033                     ??_UART_init:
   646                           
   647                           ; 1 bytes @ 0x13
   648     0033                     	ds	1
   649     0034                     ?___lwmod:
   650     0034                     ___lwmod@divisor:	
   651                           ; 2 bytes @ 0x14
   652                           
   653                           
   654                           ; 2 bytes @ 0x14
   655     0034                     	ds	2
   656     0036                     ___lwmod@dividend:
   657                           
   658                           ; 2 bytes @ 0x16
   659     0036                     	ds	2
   660     0038                     ??___lwmod:
   661                           
   662                           ; 1 bytes @ 0x18
   663     0038                     	ds	1
   664     0039                     ___lwmod@counter:
   665                           
   666                           ; 1 bytes @ 0x19
   667     0039                     	ds	1
   668     003A                     ??_random_string:
   669     003A                     ?_utoa:	
   670                           ; 1 bytes @ 0x1A
   671                           
   672     003A                     utoa@val:	
   673                           ; 1 bytes @ 0x1A
   674                           
   675                           
   676                           ; 2 bytes @ 0x1A
   677     003A                     	ds	1
   678     003B                     random_string@index:
   679                           
   680                           ; 2 bytes @ 0x1B
   681     003B                     	ds	1
   682     003C                     utoa@base:
   683                           
   684                           ; 2 bytes @ 0x1C
   685     003C                     	ds	1
   686     003D                     random_string@i:
   687                           
   688                           ; 2 bytes @ 0x1D
   689     003D                     	ds	1
   690     003E                     ??_utoa:
   691                           
   692                           ; 1 bytes @ 0x1E
   693     003E                     	ds	1
   694     003F                     utoa@v:
   695                           
   696                           ; 2 bytes @ 0x1F
   697     003F                     	ds	2
   698     0041                     utoa@c:
   699                           
   700                           ; 1 bytes @ 0x21
   701     0041                     	ds	1
   702     0042                     utoa@buf:
   703                           
   704                           ; 1 bytes @ 0x22
   705     0042                     	ds	1
   706     0043                     ?_itoa:
   707     0043                     itoa@val:	
   708                           ; 1 bytes @ 0x23
   709                           
   710                           
   711                           ; 2 bytes @ 0x23
   712     0043                     	ds	2
   713     0045                     itoa@base:
   714                           
   715                           ; 2 bytes @ 0x25
   716     0045                     	ds	2
   717     0047                     ??_itoa:
   718                           
   719                           ; 1 bytes @ 0x27
   720     0047                     	ds	1
   721     0048                     itoa@buf:
   722                           
   723                           ; 1 bytes @ 0x28
   724     0048                     	ds	1
   725     0049                     ??_main:
   726                           
   727                           ; 1 bytes @ 0x29
   728     0049                     	ds	2
   729     004B                     main@code:
   730                           
   731                           ; 1 bytes @ 0x2B
   732     004B                     	ds	1
   733                           
   734                           	psect	maintext
   735     0050                     __pmaintext:	
   736 ;;
   737 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   738 ;;
   739 ;; *************** function _main *****************
   740 ;; Defined at:
   741 ;;		line 124 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  code            1   43[BANK0 ] PTR unsigned char 
   746 ;;		 -> random_string@str(8), 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  2   94[None  ] int 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : B00/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       1       0       0       0
   758 ;;      Temps:          0       2       0       0       0
   759 ;;      Totals:         0       3       0       0       0
   760 ;;Total ram usage:        3 bytes
   761 ;; Hardware stack levels required when called: 4
   762 ;; This function calls:
   763 ;;		_UART_TxString
   764 ;;		_UART_init
   765 ;;		_initKeyPad
   766 ;;		_itoa
   767 ;;		_lcd_init
   768 ;;		_lcd_send
   769 ;;		_lcd_str
   770 ;;		_random_string
   771 ;; This function is called by:
   772 ;;		Startup code after reset
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776     0050                     _main:	
   777                           ;psect for function _main
   778                           
   779     0050                     l1930:	
   780                           ;incstack = 0
   781                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   782                           
   783                           
   784                           ;main.c: 127:     TRISB = 0x00;
   785     0050  1683               	bsf	3,5	;RP0=1, select bank1
   786     0051  1303               	bcf	3,6	;RP1=0, select bank1
   787     0052  0186               	clrf	6	;volatile
   788     0053                     l1932:
   789                           
   790                           ;main.c: 128:     INTCON |= 0xA0;
   791     0053  30A0               	movlw	160
   792     0054  1283               	bcf	3,5	;RP0=0, select bank0
   793     0055  1303               	bcf	3,6	;RP1=0, select bank0
   794     0056  00C9               	movwf	??_main
   795     0057  0849               	movf	??_main,w
   796     0058  048B               	iorwf	11,f	;volatile
   797     0059                     l1934:
   798                           
   799                           ;main.c: 129:     OPTION_REG = 0x05;
   800     0059  3005               	movlw	5
   801     005A  1683               	bsf	3,5	;RP0=1, select bank1
   802     005B  1303               	bcf	3,6	;RP1=0, select bank1
   803     005C  0081               	movwf	1	;volatile
   804     005D                     l1936:
   805                           
   806                           ;main.c: 130:     TMR0 = 6;
   807     005D  3006               	movlw	6
   808     005E  1283               	bcf	3,5	;RP0=0, select bank0
   809     005F  1303               	bcf	3,6	;RP1=0, select bank0
   810     0060  0081               	movwf	1	;volatile
   811     0061                     l1938:
   812                           
   813                           ;main.c: 133:     UART_init(115200);
   814     0061  3000               	movlw	0
   815     0062  00B2               	movwf	UART_init@baudrate+3
   816     0063  3001               	movlw	1
   817     0064  00B1               	movwf	UART_init@baudrate+2
   818     0065  30C2               	movlw	194
   819     0066  00B0               	movwf	UART_init@baudrate+1
   820     0067  3000               	movlw	0
   821     0068  00AF               	movwf	UART_init@baudrate
   822     0069  120A  118A  2517  120A  118A  	fcall	_UART_init
   823     006E                     l1940:
   824                           
   825                           ;main.c: 134:     lcd_init();
   826     006E  120A  118A  239B  120A  118A  	fcall	_lcd_init
   827     0073                     l1942:
   828                           
   829                           ;main.c: 135:     initKeyPad();
   830     0073  120A  118A  2688  120A  118A  	fcall	_initKeyPad
   831     0078                     l1944:
   832                           
   833                           ;main.c: 137:     lcd_send(0x01, 0);
   834     0078  1283               	bcf	3,5	;RP0=0, select bank0
   835     0079  1303               	bcf	3,6	;RP1=0, select bank0
   836     007A  01A0               	clrf	lcd_send@tipo
   837     007B  3001               	movlw	1
   838     007C  120A  118A  25C6  120A  118A  	fcall	_lcd_send
   839     0081                     l1946:
   840                           
   841                           ;main.c: 138:     lcd_str("waiting...");
   842     0081  3053               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   843     0082  1283               	bcf	3,5	;RP0=0, select bank0
   844     0083  1303               	bcf	3,6	;RP1=0, select bank0
   845     0084  00A3               	movwf	lcd_str@str
   846     0085  3080               	movlw	128
   847     0086  00A4               	movwf	lcd_str@str+1
   848     0087  120A  118A  2599  120A  118A  	fcall	_lcd_str
   849     008C                     l1948:
   850                           
   851                           ;main.c: 142:     {;main.c: 143:         TRISB = 0x00;
   852     008C  1683               	bsf	3,5	;RP0=1, select bank1
   853     008D  1303               	bcf	3,6	;RP1=0, select bank1
   854     008E  0186               	clrf	6	;volatile
   855     008F                     l1950:
   856                           
   857                           ;main.c: 144:         TRISD = 0x0F;
   858     008F  300F               	movlw	15
   859     0090  0088               	movwf	8	;volatile
   860     0091                     l1952:
   861                           
   862                           ;main.c: 147:         if(!code_generate_send)
   863     0091  1283               	bcf	3,5	;RP0=0, select bank0
   864     0092  1303               	bcf	3,6	;RP1=0, select bank0
   865     0093  0851               	movf	_code_generate_send,w
   866     0094  1D03               	btfss	3,2
   867     0095  2897               	goto	u1511
   868     0096  2898               	goto	u1510
   869     0097                     u1511:
   870     0097  2957               	goto	l2016
   871     0098                     u1510:
   872     0098                     l1954:
   873                           
   874                           ;main.c: 148:         {;main.c: 151:             for (colScan = 0; colScan < 3; colScan+
      +                          +)
   875     0098  01CF               	clrf	_colScan
   876     0099                     l1960:
   877                           
   878                           ;main.c: 152:             {;main.c: 154:                 PORTB = PORTB | 0x07;
   879     0099  0806               	movf	6,w	;volatile
   880     009A  3807               	iorlw	7
   881     009B  0086               	movwf	6	;volatile
   882     009C                     l1962:
   883                           
   884                           ;main.c: 155:                 PORTB = PORTB & colMask[colScan];
   885     009C  084F               	movf	_colScan,w
   886     009D  3E50               	addlw	low ((_colMask-__stringbase)| (0+32768))
   887     009E  0084               	movwf	4
   888     009F  120A  118A  224F  120A  118A  	fcall	stringdir
   889     00A4  0506               	andwf	6,w	;volatile
   890     00A5  0086               	movwf	6	;volatile
   891     00A6                     l1964:
   892                           
   893                           ;main.c: 157:                 for (rowScan = 0; rowScan < 4; rowScan++)
   894     00A6  01CE               	clrf	_rowScan
   895     00A7                     l1970:
   896                           
   897                           ;main.c: 158:                 {;main.c: 159:                     if (!(PORTD & rowMask[r
      +                          owScan]))
   898     00A7  084E               	movf	_rowScan,w
   899     00A8  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   900     00A9  0084               	movwf	4
   901     00AA  120A  118A  224F  120A  118A  	fcall	stringdir
   902     00AF  0508               	andwf	8,w	;volatile
   903     00B0  1D03               	btfss	3,2
   904     00B1  28B3               	goto	u1521
   905     00B2  28B4               	goto	u1520
   906     00B3                     u1521:
   907     00B3  28DB               	goto	l101
   908     00B4                     u1520:
   909     00B4                     l1972:
   910                           
   911                           ;main.c: 160:                     {;main.c: 161:                         _delay((unsigne
      +                          d long)((5)*(20000000/4000.0)));
   912     00B4  3021               	movlw	33
   913     00B5  1283               	bcf	3,5	;RP0=0, select bank0
   914     00B6  1303               	bcf	3,6	;RP1=0, select bank0
   915     00B7  00CA               	movwf	??_main+1
   916     00B8  3075               	movlw	117
   917     00B9  00C9               	movwf	??_main
   918     00BA                     u1647:
   919     00BA  0BC9               	decfsz	??_main,f
   920     00BB  28BA               	goto	u1647
   921     00BC  0BCA               	decfsz	??_main+1,f
   922     00BD  28BA               	goto	u1647
   923     00BE  28BF               	nop2
   924     00BF                     l1974:
   925                           
   926                           ;main.c: 163:                         if (!(PORTD & rowMask[rowScan]))
   927     00BF  1283               	bcf	3,5	;RP0=0, select bank0
   928     00C0  1303               	bcf	3,6	;RP1=0, select bank0
   929     00C1  084E               	movf	_rowScan,w
   930     00C2  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   931     00C3  0084               	movwf	4
   932     00C4  120A  118A  224F  120A  118A  	fcall	stringdir
   933     00C9  0508               	andwf	8,w	;volatile
   934     00CA  1D03               	btfss	3,2
   935     00CB  28CD               	goto	u1531
   936     00CC  28CE               	goto	u1530
   937     00CD                     u1531:
   938     00CD  28DB               	goto	l101
   939     00CE                     u1530:
   940     00CE                     l1976:
   941                           
   942                           ;main.c: 164:                         {;main.c: 166:                             keypres
      +                          sed = rowScan + (4 * colScan);
   943     00CE  084F               	movf	_colScan,w
   944     00CF  00C9               	movwf	??_main
   945     00D0  3002               	movlw	2
   946     00D1                     u1545:
   947     00D1  1003               	clrc
   948     00D2  0DC9               	rlf	??_main,f
   949     00D3  3EFF               	addlw	-1
   950     00D4  1D03               	skipz
   951     00D5  28D1               	goto	u1545
   952     00D6  084E               	movf	_rowScan,w
   953     00D7  0749               	addwf	??_main,w
   954     00D8  00D4               	movwf	_keypressed
   955     00D9                     l1978:
   956                           
   957                           ;main.c: 167:                             keyok = 1;
   958     00D9  01D3               	clrf	_keyok
   959     00DA  0AD3               	incf	_keyok,f
   960     00DB                     l101:	
   961                           ;main.c: 169:                     }
   962                           
   963                           
   964                           ;main.c: 170:                 }
   965     00DB  3001               	movlw	1
   966     00DC  00C9               	movwf	??_main
   967     00DD  0849               	movf	??_main,w
   968     00DE  07CE               	addwf	_rowScan,f
   969     00DF                     l1980:
   970     00DF  3004               	movlw	4
   971     00E0  024E               	subwf	_rowScan,w
   972     00E1  1C03               	skipc
   973     00E2  28E4               	goto	u1551
   974     00E3  28E5               	goto	u1550
   975     00E4                     u1551:
   976     00E4  28A7               	goto	l1970
   977     00E5                     u1550:
   978     00E5                     l1982:
   979                           
   980                           ;main.c: 172:                 if (keyok)
   981     00E5  0853               	movf	_keyok,w
   982     00E6  1903               	btfsc	3,2
   983     00E7  28E9               	goto	u1561
   984     00E8  28EA               	goto	u1560
   985     00E9                     u1561:
   986     00E9  294D               	goto	l2012
   987     00EA                     u1560:
   988     00EA                     l1984:
   989                           
   990                           ;main.c: 173:                 {;main.c: 175:                     if(keypressed == 8)
   991     00EA  3008               	movlw	8
   992     00EB  0654               	xorwf	_keypressed,w
   993     00EC  1D03               	btfss	3,2
   994     00ED  28EF               	goto	u1571
   995     00EE  28F0               	goto	u1570
   996     00EF                     u1571:
   997     00EF  2917               	goto	l1996
   998     00F0                     u1570:
   999     00F0                     l1986:
  1000                           
  1001                           ;main.c: 176:                     {;main.c: 178:                         lcd_send(0x01, 
      +                          0);
  1002     00F0  01A0               	clrf	lcd_send@tipo
  1003     00F1  3001               	movlw	1
  1004     00F2  120A  118A  25C6  120A  118A  	fcall	_lcd_send
  1005     00F7                     l1988:
  1006                           
  1007                           ;main.c: 180:                         char* code = random_string();
  1008     00F7  120A  118A  23F7  120A  118A  	fcall	_random_string
  1009     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1010     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1011     00FE  00CB               	movwf	main@code
  1012     00FF                     l1990:
  1013                           
  1014                           ;main.c: 182:                         lcd_str(code);
  1015     00FF  084B               	movf	main@code,w
  1016     0100  00A3               	movwf	lcd_str@str
  1017     0101  3000               	movlw	0
  1018     0102  00A4               	movwf	lcd_str@str+1
  1019     0103  120A  118A  2599  120A  118A  	fcall	_lcd_str
  1020     0108                     l1992:
  1021                           
  1022                           ;main.c: 185:                         UART_TxString(code);
  1023     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1024     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1025     010A  084B               	movf	main@code,w
  1026     010B  00A2               	movwf	UART_TxString@str
  1027     010C  3000               	movlw	0
  1028     010D  00A3               	movwf	UART_TxString@str+1
  1029     010E  120A  118A  25F3  120A  118A  	fcall	_UART_TxString
  1030     0113                     l1994:
  1031                           
  1032                           ;main.c: 188:                         code_generate_send = 1;
  1033     0113  1283               	bcf	3,5	;RP0=0, select bank0
  1034     0114  1303               	bcf	3,6	;RP1=0, select bank0
  1035     0115  01D1               	clrf	_code_generate_send
  1036     0116  0AD1               	incf	_code_generate_send,f
  1037     0117                     l1996:
  1038                           
  1039                           ;main.c: 192:                     if (keypressed == 7)
  1040     0117  3007               	movlw	7
  1041     0118  0654               	xorwf	_keypressed,w
  1042     0119  1D03               	btfss	3,2
  1043     011A  291C               	goto	u1581
  1044     011B  291D               	goto	u1580
  1045     011C                     u1581:
  1046     011C  293A               	goto	l2004
  1047     011D                     u1580:
  1048     011D                     l1998:
  1049                           
  1050                           ;main.c: 193:                     {;main.c: 194:                         lcd_send(0x01, 
      +                          0);
  1051     011D  01A0               	clrf	lcd_send@tipo
  1052     011E  3001               	movlw	1
  1053     011F  120A  118A  25C6  120A  118A  	fcall	_lcd_send
  1054     0124                     l2000:
  1055                           
  1056                           ;main.c: 195:                         lcd_str("28753");
  1057     0124  3066               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1058     0125  1283               	bcf	3,5	;RP0=0, select bank0
  1059     0126  1303               	bcf	3,6	;RP1=0, select bank0
  1060     0127  00A3               	movwf	lcd_str@str
  1061     0128  3080               	movlw	128
  1062     0129  00A4               	movwf	lcd_str@str+1
  1063     012A  120A  118A  2599  120A  118A  	fcall	_lcd_str
  1064     012F                     l2002:
  1065                           
  1066                           ;main.c: 196:                         UART_TxString("28753\r\n");
  1067     012F  305E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1068     0130  1283               	bcf	3,5	;RP0=0, select bank0
  1069     0131  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0132  00A2               	movwf	UART_TxString@str
  1071     0133  3080               	movlw	128
  1072     0134  00A3               	movwf	UART_TxString@str+1
  1073     0135  120A  118A  25F3  120A  118A  	fcall	_UART_TxString
  1074     013A                     l2004:
  1075                           
  1076                           ;main.c: 199:                     keyok = 0;
  1077     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1078     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1079     013C  01D3               	clrf	_keyok
  1080     013D                     l2006:
  1081                           
  1082                           ;main.c: 202:                     PORTD = PORTD | 0x0F;
  1083     013D  0808               	movf	8,w	;volatile
  1084     013E  380F               	iorlw	15
  1085     013F  0088               	movwf	8	;volatile
  1086                           
  1087                           ;main.c: 203:                     while ((PORTD & 0x0F) != 0x0F)
  1088     0140  2944               	goto	l2010
  1089     0141                     l2008:
  1090                           
  1091                           ;main.c: 204:                     {;main.c: 205:                         PORTD = PORTD |
      +                           0x0F;
  1092     0141  0808               	movf	8,w	;volatile
  1093     0142  380F               	iorlw	15
  1094     0143  0088               	movwf	8	;volatile
  1095     0144                     l2010:	
  1096                           ;main.c: 206:                         continue;
  1097                           
  1098                           
  1099                           ;main.c: 203:                     while ((PORTD & 0x0F) != 0x0F)
  1100     0144  300F               	movlw	15
  1101     0145  0508               	andwf	8,w	;volatile
  1102     0146  00C9               	movwf	??_main
  1103     0147  300F               	movlw	15
  1104     0148  0649               	xorwf	??_main,w
  1105     0149  1D03               	btfss	3,2
  1106     014A  294C               	goto	u1591
  1107     014B  294D               	goto	u1590
  1108     014C                     u1591:
  1109     014C  2941               	goto	l2008
  1110     014D                     u1590:
  1111     014D                     l2012:
  1112                           
  1113                           ;main.c: 212:             }
  1114     014D  3001               	movlw	1
  1115     014E  00C9               	movwf	??_main
  1116     014F  0849               	movf	??_main,w
  1117     0150  07CF               	addwf	_colScan,f
  1118     0151                     l2014:
  1119     0151  3003               	movlw	3
  1120     0152  024F               	subwf	_colScan,w
  1121     0153  1C03               	skipc
  1122     0154  2956               	goto	u1601
  1123     0155  2957               	goto	u1600
  1124     0156                     u1601:
  1125     0156  2899               	goto	l1960
  1126     0157                     u1600:
  1127     0157                     l2016:
  1128                           
  1129                           ;main.c: 215:         if(code_generate_send)
  1130     0157  0851               	movf	_code_generate_send,w
  1131     0158  1903               	btfsc	3,2
  1132     0159  295B               	goto	u1611
  1133     015A  295C               	goto	u1610
  1134     015B                     u1611:
  1135     015B  288C               	goto	l1948
  1136     015C                     u1610:
  1137     015C                     l2018:
  1138                           
  1139                           ;main.c: 216:         {;main.c: 217:             if(received)
  1140     015C  0852               	movf	_received,w
  1141     015D  1903               	btfsc	3,2
  1142     015E  2960               	goto	u1621
  1143     015F  2961               	goto	u1620
  1144     0160                     u1621:
  1145     0160  2964               	goto	l2022
  1146     0161                     u1620:
  1147     0161                     l2020:
  1148                           
  1149                           ;main.c: 218:             {;main.c: 247:                 code_generate_send = 0;
  1150     0161  01D1               	clrf	_code_generate_send
  1151                           
  1152                           ;main.c: 248:                 received = 0;
  1153     0162  01D2               	clrf	_received
  1154                           
  1155                           ;main.c: 249:             }
  1156     0163  288C               	goto	l1948
  1157     0164                     l2022:
  1158                           
  1159                           ;main.c: 251:             {;main.c: 252:                 itoa(buff, numSec, 10);
  1160     0164  0864               	movf	_numSec+1,w
  1161     0165  00C4               	movwf	itoa@val+1
  1162     0166  0863               	movf	_numSec,w
  1163     0167  00C3               	movwf	itoa@val
  1164     0168  300A               	movlw	10
  1165     0169  00C5               	movwf	itoa@base
  1166     016A  3000               	movlw	0
  1167     016B  00C6               	movwf	itoa@base+1
  1168     016C  305D               	movlw	(low (_buff| 0))& (0+255)
  1169     016D  120A  118A  2620  120A  118A  	fcall	_itoa
  1170     0172                     l2024:
  1171                           
  1172                           ;main.c: 253:                 lcd_send(0xC0, 0);
  1173     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1175     0174  01A0               	clrf	lcd_send@tipo
  1176     0175  30C0               	movlw	192
  1177     0176  120A  118A  25C6  120A  118A  	fcall	_lcd_send
  1178     017B                     l2026:
  1179                           
  1180                           ;main.c: 254:                 lcd_str(buff);
  1181     017B  305D               	movlw	(low (_buff| 0))& (0+255)
  1182     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1183     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1184     017E  00A3               	movwf	lcd_str@str
  1185     017F  3000               	movlw	0
  1186     0180  00A4               	movwf	lcd_str@str+1
  1187     0181  120A  118A  2599  120A  118A  	fcall	_lcd_str
  1188     0186                     l2028:
  1189                           
  1190                           ;main.c: 256:                 if(stop_wait)
  1191     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1192     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1193     0188  0850               	movf	_stop_wait,w
  1194     0189  1903               	btfsc	3,2
  1195     018A  298C               	goto	u1631
  1196     018B  298D               	goto	u1630
  1197     018C                     u1631:
  1198     018C  29A4               	goto	l109
  1199     018D                     u1630:
  1200     018D                     l2030:
  1201                           
  1202                           ;main.c: 257:                 {;main.c: 258:                     lcd_send(0x01, 0);
  1203     018D  01A0               	clrf	lcd_send@tipo
  1204     018E  3001               	movlw	1
  1205     018F  120A  118A  25C6  120A  118A  	fcall	_lcd_send
  1206     0194                     l2032:
  1207                           
  1208                           ;main.c: 259:                     lcd_str("waiting...");
  1209     0194  3053               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1210     0195  1283               	bcf	3,5	;RP0=0, select bank0
  1211     0196  1303               	bcf	3,6	;RP1=0, select bank0
  1212     0197  00A3               	movwf	lcd_str@str
  1213     0198  3080               	movlw	128
  1214     0199  00A4               	movwf	lcd_str@str+1
  1215     019A  120A  118A  2599  120A  118A  	fcall	_lcd_str
  1216     019F                     l2034:
  1217                           
  1218                           ;main.c: 260:                     stop_wait = 0;
  1219     019F  1283               	bcf	3,5	;RP0=0, select bank0
  1220     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1221     01A1  01D0               	clrf	_stop_wait
  1222     01A2                     l2036:
  1223                           
  1224                           ;main.c: 261:                     code_generate_send = 0;
  1225     01A2  01D1               	clrf	_code_generate_send
  1226     01A3  288C               	goto	l1948
  1227     01A4                     l109:	
  1228                           ;main.c: 264:         }
  1229                           
  1230     01A4  288C               	goto	l1948
  1231     01A5  120A  118A  2810   	ljmp	start
  1232     01A8                     __end_of_main:
  1233                           
  1234                           	psect	text1
  1235     03F7                     __ptext1:	
  1236 ;; *************** function _random_string *****************
  1237 ;; Defined at:
  1238 ;;		line 361 in file "main.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  index           2   27[BANK0 ] int 
  1243 ;;  i               2   29[BANK0 ] int 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      PTR unsigned char 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0       4       0       0       0
  1255 ;;      Temps:          0       1       0       0       0
  1256 ;;      Totals:         0       5       0       0       0
  1257 ;;Total ram usage:        5 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 3
  1260 ;; This function calls:
  1261 ;;		___lwmod
  1262 ;;		_rand
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268     03F7                     _random_string:	
  1269                           ;psect for function _random_string
  1270                           
  1271     03F7                     l1886:	
  1272                           ;incstack = 0
  1273                           ; Regs used in _random_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1274                           
  1275                           
  1276                           ;main.c: 362:     static char str[8];;main.c: 363:     const char charset[] = "abcdefghi
      +                          jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";;main.c: 368:     for (int i = 0;
      +                           i < 5; i++) {
  1277     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1278     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1279     03F9  01BD               	clrf	random_string@i
  1280     03FA  01BE               	clrf	random_string@i+1
  1281     03FB                     l1892:
  1282                           
  1283                           ;main.c: 369:         int index = rand() % (sizeof(charset) - 1);
  1284     03FB  303E               	movlw	62
  1285     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1286     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1287     03FE  00B4               	movwf	___lwmod@divisor
  1288     03FF  3000               	movlw	0
  1289     0400  00B5               	movwf	___lwmod@divisor+1
  1290     0401  120A  118A  248A  120A  118A  	fcall	_rand
  1291     0406  1283               	bcf	3,5	;RP0=0, select bank0
  1292     0407  1303               	bcf	3,6	;RP1=0, select bank0
  1293     0408  082E               	movf	?_rand+1,w
  1294     0409  00B7               	movwf	___lwmod@dividend+1
  1295     040A  082D               	movf	?_rand,w
  1296     040B  00B6               	movwf	___lwmod@dividend
  1297     040C  120A  118A  255D  120A  118A  	fcall	___lwmod
  1298     0411  1283               	bcf	3,5	;RP0=0, select bank0
  1299     0412  1303               	bcf	3,6	;RP1=0, select bank0
  1300     0413  0835               	movf	?___lwmod+1,w
  1301     0414  00BC               	movwf	random_string@index+1
  1302     0415  0834               	movf	?___lwmod,w
  1303     0416  00BB               	movwf	random_string@index
  1304     0417                     l1894:
  1305                           
  1306                           ;main.c: 370:         str[i] = charset[index];
  1307     0417  083B               	movf	random_string@index,w
  1308     0418  3E01               	addlw	low ((random_string@charset-__stringbase)| (0+32768))
  1309     0419  0084               	movwf	4
  1310     041A  120A  118A  224F  120A  118A  	fcall	stringdir
  1311     041F  00BA               	movwf	??_random_string
  1312     0420  083D               	movf	random_string@i,w
  1313     0421  3E55               	addlw	(low (random_string@str| 0))& (0+255)
  1314     0422  0084               	movwf	4
  1315     0423  083A               	movf	??_random_string,w
  1316     0424  1383               	bcf	3,7	;select IRP bank0
  1317     0425  0080               	movwf	0
  1318     0426                     l1896:
  1319                           
  1320                           ;main.c: 371:     }
  1321     0426  3001               	movlw	1
  1322     0427  07BD               	addwf	random_string@i,f
  1323     0428  1803               	skipnc
  1324     0429  0ABE               	incf	random_string@i+1,f
  1325     042A  3000               	movlw	0
  1326     042B  07BE               	addwf	random_string@i+1,f
  1327     042C                     l1898:
  1328     042C  083E               	movf	random_string@i+1,w
  1329     042D  3A80               	xorlw	128
  1330     042E  00FF               	movwf	btemp+1
  1331     042F  3080               	movlw	128
  1332     0430  027F               	subwf	btemp+1,w
  1333     0431  1D03               	skipz
  1334     0432  2C35               	goto	u1485
  1335     0433  3005               	movlw	5
  1336     0434  023D               	subwf	random_string@i,w
  1337     0435                     u1485:
  1338     0435  1C03               	skipc
  1339     0436  2C38               	goto	u1481
  1340     0437  2C39               	goto	u1480
  1341     0438                     u1481:
  1342     0438  2BFB               	goto	l1892
  1343     0439                     u1480:
  1344     0439                     l1900:
  1345                           
  1346                           ;main.c: 373:     str[5] = '\r';
  1347     0439  300D               	movlw	13
  1348     043A  1283               	bcf	3,5	;RP0=0, select bank0
  1349     043B  1303               	bcf	3,6	;RP1=0, select bank0
  1350     043C  00DA               	movwf	random_string@str+5
  1351                           
  1352                           ;main.c: 374:     str[6] = '\n';
  1353     043D  300A               	movlw	10
  1354     043E  00DB               	movwf	random_string@str+6
  1355     043F                     l1902:
  1356                           
  1357                           ;main.c: 375:     str[7] = '\0';
  1358     043F  01DC               	clrf	random_string@str+7
  1359     0440                     l1904:
  1360                           
  1361                           ;main.c: 377:     return str;
  1362     0440  3055               	movlw	(low (random_string@str| 0))& (0+255)
  1363     0441                     l145:
  1364     0441  0008               	return
  1365     0442                     __end_of_random_string:
  1366                           
  1367                           	psect	text2
  1368     048A                     __ptext2:	
  1369 ;; *************** function _rand *****************
  1370 ;; Defined at:
  1371 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  2   13[BANK0 ] int 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       2       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          0       5       0       0       0
  1388 ;;      Totals:         0       7       0       0       0
  1389 ;;Total ram usage:        7 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 2
  1392 ;; This function calls:
  1393 ;;		___lmul
  1394 ;; This function is called by:
  1395 ;;		_random_string
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399     048A                     _rand:	
  1400                           ;psect for function _rand
  1401                           
  1402     048A                     l1726:	
  1403                           ;incstack = 0
  1404                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1405                           
  1406     048A  1283               	bcf	3,5	;RP0=0, select bank0
  1407     048B  1303               	bcf	3,6	;RP1=0, select bank0
  1408     048C  0862               	movf	_randx+3,w
  1409     048D  00A3               	movwf	___lmul@multiplier+3
  1410     048E  0861               	movf	_randx+2,w
  1411     048F  00A2               	movwf	___lmul@multiplier+2
  1412     0490  0860               	movf	_randx+1,w
  1413     0491  00A1               	movwf	___lmul@multiplier+1
  1414     0492  085F               	movf	_randx,w
  1415     0493  00A0               	movwf	___lmul@multiplier
  1416     0494  3041               	movlw	65
  1417     0495  00A7               	movwf	___lmul@multiplicand+3
  1418     0496  30C6               	movlw	198
  1419     0497  00A6               	movwf	___lmul@multiplicand+2
  1420     0498  304E               	movlw	78
  1421     0499  00A5               	movwf	___lmul@multiplicand+1
  1422     049A  306D               	movlw	109
  1423     049B  00A4               	movwf	___lmul@multiplicand
  1424     049C  120A  118A  2442  120A  118A  	fcall	___lmul
  1425     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1426     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1427     04A3  0823               	movf	?___lmul+3,w
  1428     04A4  00E2               	movwf	_randx+3
  1429     04A5  0822               	movf	?___lmul+2,w
  1430     04A6  00E1               	movwf	_randx+2
  1431     04A7  0821               	movf	?___lmul+1,w
  1432     04A8  00E0               	movwf	_randx+1
  1433     04A9  0820               	movf	?___lmul,w
  1434     04AA  00DF               	movwf	_randx
  1435     04AB                     l1728:
  1436     04AB  3039               	movlw	57
  1437     04AC  07DF               	addwf	_randx,f
  1438     04AD  3030               	movlw	48
  1439     04AE  1803               	skipnc
  1440     04AF  3031               	movlw	49
  1441     04B0  07E0               	addwf	_randx+1,f
  1442     04B1  3000               	movlw	0
  1443     04B2  1803               	skipnc
  1444     04B3  3001               	movlw	1
  1445     04B4  07E1               	addwf	_randx+2,f
  1446     04B5  3000               	movlw	0
  1447     04B6  1803               	skipnc
  1448     04B7  3001               	movlw	1
  1449     04B8  07E2               	addwf	_randx+3,f
  1450     04B9                     l1730:
  1451     04B9  085F               	movf	_randx,w
  1452     04BA  00AF               	movwf	??_rand
  1453     04BB  0860               	movf	_randx+1,w
  1454     04BC  00B0               	movwf	??_rand+1
  1455     04BD  0861               	movf	_randx+2,w
  1456     04BE  00B1               	movwf	??_rand+2
  1457     04BF  0862               	movf	_randx+3,w
  1458     04C0  00B2               	movwf	??_rand+3
  1459     04C1  3010               	movlw	16
  1460     04C2  00B3               	movwf	??_rand+4
  1461     04C3                     u1315:
  1462     04C3  0D32               	rlf	??_rand+3,w
  1463     04C4  0CB2               	rrf	??_rand+3,f
  1464     04C5  0CB1               	rrf	??_rand+2,f
  1465     04C6  0CB0               	rrf	??_rand+1,f
  1466     04C7  0CAF               	rrf	??_rand,f
  1467     04C8                     u1310:
  1468     04C8  0BB3               	decfsz	??_rand+4,f
  1469     04C9  2CC3               	goto	u1315
  1470     04CA  30FF               	movlw	255
  1471     04CB  052F               	andwf	??_rand,w
  1472     04CC  00AD               	movwf	?_rand
  1473     04CD  307F               	movlw	127
  1474     04CE  0530               	andwf	??_rand+1,w
  1475     04CF  00AE               	movwf	?_rand+1
  1476     04D0                     l726:
  1477     04D0  0008               	return
  1478     04D1                     __end_of_rand:
  1479                           
  1480                           	psect	text3
  1481     0442                     __ptext3:	
  1482 ;; *************** function ___lmul *****************
  1483 ;; Defined at:
  1484 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1487 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  product         4    9[BANK0 ] unsigned long 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  4    0[BANK0 ] unsigned long 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       8       0       0       0
  1500 ;;      Locals:         0       4       0       0       0
  1501 ;;      Temps:          0       1       0       0       0
  1502 ;;      Totals:         0      13       0       0       0
  1503 ;;Total ram usage:       13 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_rand
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513     0442                     ___lmul:	
  1514                           ;psect for function ___lmul
  1515                           
  1516     0442                     l1644:	
  1517                           ;incstack = 0
  1518                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1519                           
  1520     0442  3000               	movlw	0
  1521     0443  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0444  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0445  00AC               	movwf	___lmul@product+3
  1524     0446  3000               	movlw	0
  1525     0447  00AB               	movwf	___lmul@product+2
  1526     0448  3000               	movlw	0
  1527     0449  00AA               	movwf	___lmul@product+1
  1528     044A  3000               	movlw	0
  1529     044B  00A9               	movwf	___lmul@product
  1530     044C                     l1646:
  1531     044C  1C20               	btfss	___lmul@multiplier,0
  1532     044D  2C4F               	goto	u1131
  1533     044E  2C50               	goto	u1130
  1534     044F                     u1131:
  1535     044F  2C67               	goto	l1650
  1536     0450                     u1130:
  1537     0450                     l1648:
  1538     0450  0824               	movf	___lmul@multiplicand,w
  1539     0451  07A9               	addwf	___lmul@product,f
  1540     0452  0825               	movf	___lmul@multiplicand+1,w
  1541     0453  1103               	clrz
  1542     0454  1803               	skipnc
  1543     0455  3E01               	addlw	1
  1544     0456  1903               	skipnz
  1545     0457  2C59               	goto	u1141
  1546     0458  07AA               	addwf	___lmul@product+1,f
  1547     0459                     u1141:
  1548     0459  0826               	movf	___lmul@multiplicand+2,w
  1549     045A  1103               	clrz
  1550     045B  1803               	skipnc
  1551     045C  3E01               	addlw	1
  1552     045D  1903               	skipnz
  1553     045E  2C60               	goto	u1142
  1554     045F  07AB               	addwf	___lmul@product+2,f
  1555     0460                     u1142:
  1556     0460  0827               	movf	___lmul@multiplicand+3,w
  1557     0461  1103               	clrz
  1558     0462  1803               	skipnc
  1559     0463  3E01               	addlw	1
  1560     0464  1903               	skipnz
  1561     0465  2C67               	goto	u1143
  1562     0466  07AC               	addwf	___lmul@product+3,f
  1563     0467                     u1143:
  1564     0467                     l1650:
  1565     0467  3001               	movlw	1
  1566     0468  00A8               	movwf	??___lmul
  1567     0469                     u1155:
  1568     0469  1003               	clrc
  1569     046A  0DA4               	rlf	___lmul@multiplicand,f
  1570     046B  0DA5               	rlf	___lmul@multiplicand+1,f
  1571     046C  0DA6               	rlf	___lmul@multiplicand+2,f
  1572     046D  0DA7               	rlf	___lmul@multiplicand+3,f
  1573     046E  0BA8               	decfsz	??___lmul,f
  1574     046F  2C69               	goto	u1155
  1575     0470                     l1652:
  1576     0470  3001               	movlw	1
  1577     0471                     u1165:
  1578     0471  1003               	clrc
  1579     0472  0CA3               	rrf	___lmul@multiplier+3,f
  1580     0473  0CA2               	rrf	___lmul@multiplier+2,f
  1581     0474  0CA1               	rrf	___lmul@multiplier+1,f
  1582     0475  0CA0               	rrf	___lmul@multiplier,f
  1583     0476  3EFF               	addlw	-1
  1584     0477  1D03               	skipz
  1585     0478  2C71               	goto	u1165
  1586     0479  0823               	movf	___lmul@multiplier+3,w
  1587     047A  0422               	iorwf	___lmul@multiplier+2,w
  1588     047B  0421               	iorwf	___lmul@multiplier+1,w
  1589     047C  0420               	iorwf	___lmul@multiplier,w
  1590     047D  1D03               	skipz
  1591     047E  2C80               	goto	u1171
  1592     047F  2C81               	goto	u1170
  1593     0480                     u1171:
  1594     0480  2C4C               	goto	l1646
  1595     0481                     u1170:
  1596     0481                     l1654:
  1597     0481  082C               	movf	___lmul@product+3,w
  1598     0482  00A3               	movwf	?___lmul+3
  1599     0483  082B               	movf	___lmul@product+2,w
  1600     0484  00A2               	movwf	?___lmul+2
  1601     0485  082A               	movf	___lmul@product+1,w
  1602     0486  00A1               	movwf	?___lmul+1
  1603     0487  0829               	movf	___lmul@product,w
  1604     0488  00A0               	movwf	?___lmul
  1605     0489                     l270:
  1606     0489  0008               	return
  1607     048A                     __end_of___lmul:
  1608                           
  1609                           	psect	text4
  1610     0599                     __ptext4:	
  1611 ;; *************** function _lcd_str *****************
  1612 ;; Defined at:
  1613 ;;		line 322 in file "main.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  str             2    3[BANK0 ] PTR const unsigned char 
  1616 ;;		 -> random_string@str(8), STR_4(11), buff(2), STR_2(6), 
  1617 ;;		 -> STR_1(11), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  i               1    6[BANK0 ] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       2       0       0       0
  1630 ;;      Locals:         0       1       0       0       0
  1631 ;;      Temps:          0       1       0       0       0
  1632 ;;      Totals:         0       4       0       0       0
  1633 ;;Total ram usage:        4 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 2
  1636 ;; This function calls:
  1637 ;;		_lcd_dat
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643     0599                     _lcd_str:	
  1644                           ;psect for function _lcd_str
  1645                           
  1646     0599                     l1878:	
  1647                           ;incstack = 0
  1648                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1649                           
  1650                           
  1651                           ;main.c: 322: void lcd_str(const char* str);main.c: 323: {;main.c: 324:     unsigned cha
      +                          r i = 0;
  1652     0599  1283               	bcf	3,5	;RP0=0, select bank0
  1653     059A  1303               	bcf	3,6	;RP1=0, select bank0
  1654     059B  01A6               	clrf	lcd_str@i
  1655                           
  1656                           ;main.c: 326:     while (str[i] != 0)
  1657     059C  2DB4               	goto	l1884
  1658     059D                     l1880:
  1659                           
  1660                           ;main.c: 327:     {;main.c: 328:         lcd_dat(str[i]);
  1661     059D  0826               	movf	lcd_str@i,w
  1662     059E  0723               	addwf	lcd_str@str,w
  1663     059F  0084               	movwf	4
  1664     05A0  0824               	movf	lcd_str@str+1,w
  1665     05A1  1803               	skipnc
  1666     05A2  0A24               	incf	lcd_str@str+1,w
  1667     05A3  00FF               	movwf	btemp+1
  1668     05A4  120A  118A  2245  120A  118A  	fcall	stringtab
  1669     05A9  120A  118A  2644  120A  118A  	fcall	_lcd_dat
  1670     05AE                     l1882:
  1671                           
  1672                           ;main.c: 329:         i++;
  1673     05AE  3001               	movlw	1
  1674     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1675     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1676     05B1  00A5               	movwf	??_lcd_str
  1677     05B2  0825               	movf	??_lcd_str,w
  1678     05B3  07A6               	addwf	lcd_str@i,f
  1679     05B4                     l1884:
  1680                           
  1681                           ;main.c: 326:     while (str[i] != 0)
  1682     05B4  0826               	movf	lcd_str@i,w
  1683     05B5  0723               	addwf	lcd_str@str,w
  1684     05B6  0084               	movwf	4
  1685     05B7  0824               	movf	lcd_str@str+1,w
  1686     05B8  1803               	skipnc
  1687     05B9  0A24               	incf	lcd_str@str+1,w
  1688     05BA  00FF               	movwf	btemp+1
  1689     05BB  120A  118A  2245  120A  118A  	fcall	stringtab
  1690     05C0  3A00               	xorlw	0
  1691     05C1  1D03               	skipz
  1692     05C2  2DC4               	goto	u1471
  1693     05C3  2DC5               	goto	u1470
  1694     05C4                     u1471:
  1695     05C4  2D9D               	goto	l1880
  1696     05C5                     u1470:
  1697     05C5                     l130:
  1698     05C5  0008               	return
  1699     05C6                     __end_of_lcd_str:
  1700                           
  1701                           	psect	text5
  1702     0644                     __ptext5:	
  1703 ;; *************** function _lcd_dat *****************
  1704 ;; Defined at:
  1705 ;;		line 275 in file "main.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  val             1    wreg     unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  val             1    2[BANK0 ] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       0       0       0       0
  1720 ;;      Locals:         0       1       0       0       0
  1721 ;;      Temps:          0       2       0       0       0
  1722 ;;      Totals:         0       3       0       0       0
  1723 ;;Total ram usage:        3 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 1
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_lcd_str
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733     0644                     _lcd_dat:	
  1734                           ;psect for function _lcd_dat
  1735                           
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in _lcd_dat: [wreg]
  1739                           ;lcd_dat@val stored from wreg
  1740     0644  1283               	bcf	3,5	;RP0=0, select bank0
  1741     0645  1303               	bcf	3,6	;RP1=0, select bank0
  1742     0646  00A2               	movwf	lcd_dat@val
  1743     0647                     l1706:
  1744                           
  1745                           ;main.c: 275: void lcd_dat(unsigned char val);main.c: 276: {;main.c: 277:     PORTEbits.
      +                          RE1 = 1;
  1746     0647  1489               	bsf	9,1	;volatile
  1747     0648                     l1708:
  1748                           
  1749                           ;main.c: 279:     PORTD = val;
  1750     0648  0822               	movf	lcd_dat@val,w
  1751     0649  0088               	movwf	8	;volatile
  1752     064A                     l1710:
  1753                           
  1754                           ;main.c: 280:     PORTEbits.RE2 = 1;
  1755     064A  1509               	bsf	9,2	;volatile
  1756                           
  1757                           ;main.c: 281:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1758     064B  3014               	movlw	20
  1759     064C  1283               	bcf	3,5	;RP0=0, select bank0
  1760     064D  1303               	bcf	3,6	;RP1=0, select bank0
  1761     064E  00A1               	movwf	??_lcd_dat+1
  1762     064F  3079               	movlw	121
  1763     0650  00A0               	movwf	??_lcd_dat
  1764     0651                     u1657:
  1765     0651  0BA0               	decfsz	??_lcd_dat,f
  1766     0652  2E51               	goto	u1657
  1767     0653  0BA1               	decfsz	??_lcd_dat+1,f
  1768     0654  2E51               	goto	u1657
  1769     0655                     l1712:
  1770                           
  1771                           ;main.c: 282:     PORTEbits.RE1 = 0;
  1772     0655  1283               	bcf	3,5	;RP0=0, select bank0
  1773     0656  1303               	bcf	3,6	;RP1=0, select bank0
  1774     0657  1089               	bcf	9,1	;volatile
  1775                           
  1776                           ;main.c: 283:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1777     0658  3014               	movlw	20
  1778     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1779     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1780     065B  00A1               	movwf	??_lcd_dat+1
  1781     065C  3079               	movlw	121
  1782     065D  00A0               	movwf	??_lcd_dat
  1783     065E                     u1667:
  1784     065E  0BA0               	decfsz	??_lcd_dat,f
  1785     065F  2E5E               	goto	u1667
  1786     0660  0BA1               	decfsz	??_lcd_dat+1,f
  1787     0661  2E5E               	goto	u1667
  1788     0662                     l1714:
  1789                           
  1790                           ;main.c: 285:     PORTEbits.RE1 = 1;
  1791     0662  1283               	bcf	3,5	;RP0=0, select bank0
  1792     0663  1303               	bcf	3,6	;RP1=0, select bank0
  1793     0664  1489               	bsf	9,1	;volatile
  1794     0665                     l118:
  1795     0665  0008               	return
  1796     0666                     __end_of_lcd_dat:
  1797                           
  1798                           	psect	text6
  1799     05C6                     __ptext6:	
  1800 ;; *************** function _lcd_send *****************
  1801 ;; Defined at:
  1802 ;;		line 334 in file "main.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  dato            1    wreg     unsigned char 
  1805 ;;  tipo            1    0[BANK0 ] unsigned char 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  dato            1    3[BANK0 ] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         0       1       0       0       0
  1818 ;;      Locals:         0       1       0       0       0
  1819 ;;      Temps:          0       2       0       0       0
  1820 ;;      Totals:         0       4       0       0       0
  1821 ;;Total ram usage:        4 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831     05C6                     _lcd_send:	
  1832                           ;psect for function _lcd_send
  1833                           
  1834                           
  1835                           ;incstack = 0
  1836                           ; Regs used in _lcd_send: [wreg+status,2+status,0]
  1837                           ;lcd_send@dato stored from wreg
  1838     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1839     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  1840     05C8  00A3               	movwf	lcd_send@dato
  1841     05C9                     l1858:
  1842                           
  1843                           ;main.c: 334: void lcd_send(char dato, char tipo);main.c: 335: {;main.c: 338:     TRISD 
      +                          = 0x00;
  1844     05C9  1683               	bsf	3,5	;RP0=1, select bank1
  1845     05CA  1303               	bcf	3,6	;RP1=0, select bank1
  1846     05CB  0188               	clrf	8	;volatile
  1847     05CC                     l1860:
  1848                           
  1849                           ;main.c: 339:     TRISEbits.TRISE1 = 0;
  1850     05CC  1089               	bcf	9,1	;volatile
  1851     05CD                     l1862:
  1852                           
  1853                           ;main.c: 340:     TRISEbits.TRISE2 = 0;
  1854     05CD  1109               	bcf	9,2	;volatile
  1855     05CE                     l1864:
  1856                           
  1857                           ;main.c: 342:     PORTEbits.RE1 = 1;
  1858     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1859     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1860     05D0  1489               	bsf	9,1	;volatile
  1861     05D1                     l1866:
  1862                           
  1863                           ;main.c: 343:     PORTD = dato;
  1864     05D1  0823               	movf	lcd_send@dato,w
  1865     05D2  0088               	movwf	8	;volatile
  1866     05D3                     l1868:
  1867                           
  1868                           ;main.c: 344:     PORTEbits.RE2 = tipo;
  1869     05D3  0C20               	rrf	lcd_send@tipo,w
  1870     05D4  1C03               	skipc
  1871     05D5  1109               	bcf	9,2	;volatile
  1872     05D6  1803               	skipnc
  1873     05D7  1509               	bsf	9,2	;volatile
  1874     05D8                     l1870:
  1875                           
  1876                           ;main.c: 345:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1877     05D8  3014               	movlw	20
  1878     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1879     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1880     05DB  00A2               	movwf	??_lcd_send+1
  1881     05DC  3079               	movlw	121
  1882     05DD  00A1               	movwf	??_lcd_send
  1883     05DE                     u1677:
  1884     05DE  0BA1               	decfsz	??_lcd_send,f
  1885     05DF  2DDE               	goto	u1677
  1886     05E0  0BA2               	decfsz	??_lcd_send+1,f
  1887     05E1  2DDE               	goto	u1677
  1888     05E2                     l1872:
  1889                           
  1890                           ;main.c: 346:     PORTEbits.RE1 = 0;
  1891     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1892     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1893     05E4  1089               	bcf	9,1	;volatile
  1894     05E5                     l1874:
  1895                           
  1896                           ;main.c: 347:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1897     05E5  3014               	movlw	20
  1898     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1899     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1900     05E8  00A2               	movwf	??_lcd_send+1
  1901     05E9  3079               	movlw	121
  1902     05EA  00A1               	movwf	??_lcd_send
  1903     05EB                     u1687:
  1904     05EB  0BA1               	decfsz	??_lcd_send,f
  1905     05EC  2DEB               	goto	u1687
  1906     05ED  0BA2               	decfsz	??_lcd_send+1,f
  1907     05EE  2DEB               	goto	u1687
  1908     05EF                     l1876:
  1909                           
  1910                           ;main.c: 348:     PORTEbits.RE1 = 1;
  1911     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1912     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1913     05F1  1489               	bsf	9,1	;volatile
  1914     05F2                     l133:
  1915     05F2  0008               	return
  1916     05F3                     __end_of_lcd_send:
  1917                           
  1918                           	psect	text7
  1919     039B                     __ptext7:	
  1920 ;; *************** function _lcd_init *****************
  1921 ;; Defined at:
  1922 ;;		line 301 in file "main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0
  1938 ;;      Temps:          0       2       0       0       0
  1939 ;;      Totals:         0       2       0       0       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 2
  1943 ;; This function calls:
  1944 ;;		_lcd_cmd
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950     039B                     _lcd_init:	
  1951                           ;psect for function _lcd_init
  1952                           
  1953     039B                     l1826:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1956                           
  1957                           
  1958                           ;main.c: 303:     TRISD = 0x00;
  1959     039B  1683               	bsf	3,5	;RP0=1, select bank1
  1960     039C  1303               	bcf	3,6	;RP1=0, select bank1
  1961     039D  0188               	clrf	8	;volatile
  1962                           
  1963                           ;main.c: 304:     TRISE = 0x00;
  1964     039E  0189               	clrf	9	;volatile
  1965     039F                     l1828:
  1966                           
  1967                           ;main.c: 305:     PORTEbits.RE1 = 0;
  1968     039F  1283               	bcf	3,5	;RP0=0, select bank0
  1969     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1970     03A1  1089               	bcf	9,1	;volatile
  1971     03A2                     l1830:
  1972                           
  1973                           ;main.c: 306:     PORTEbits.RE2 = 0;
  1974     03A2  1109               	bcf	9,2	;volatile
  1975     03A3                     l1832:
  1976                           
  1977                           ;main.c: 307:     _delay((unsigned long)((20)*(20000000/4000.0)));
  1978     03A3  3082               	movlw	130
  1979     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1980     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1981     03A6  00A4               	movwf	??_lcd_init+1
  1982     03A7  30DD               	movlw	221
  1983     03A8  00A3               	movwf	??_lcd_init
  1984     03A9                     u1697:
  1985     03A9  0BA3               	decfsz	??_lcd_init,f
  1986     03AA  2BA9               	goto	u1697
  1987     03AB  0BA4               	decfsz	??_lcd_init+1,f
  1988     03AC  2BA9               	goto	u1697
  1989     03AD                     l1834:
  1990                           
  1991                           ;main.c: 308:     PORTEbits.RE1 = 1;
  1992     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  1993     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  1994     03AF  1489               	bsf	9,1	;volatile
  1995     03B0                     l1836:
  1996                           
  1997                           ;main.c: 310:     lcd_cmd(0x38);
  1998     03B0  3038               	movlw	56
  1999     03B1  120A  118A  2666  120A  118A  	fcall	_lcd_cmd
  2000     03B6                     l1838:
  2001                           
  2002                           ;main.c: 311:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2003     03B6  3021               	movlw	33
  2004     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2005     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2006     03B9  00A4               	movwf	??_lcd_init+1
  2007     03BA  3075               	movlw	117
  2008     03BB  00A3               	movwf	??_lcd_init
  2009     03BC                     u1707:
  2010     03BC  0BA3               	decfsz	??_lcd_init,f
  2011     03BD  2BBC               	goto	u1707
  2012     03BE  0BA4               	decfsz	??_lcd_init+1,f
  2013     03BF  2BBC               	goto	u1707
  2014     03C0  2BC1               	nop2
  2015     03C1                     l1840:
  2016                           
  2017                           ;main.c: 312:     lcd_cmd(0x38);
  2018     03C1  3038               	movlw	56
  2019     03C2  120A  118A  2666  120A  118A  	fcall	_lcd_cmd
  2020     03C7                     l1842:
  2021                           
  2022                           ;main.c: 313:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2023     03C7  3007               	movlw	7
  2024     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2025     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2026     03CA  00A4               	movwf	??_lcd_init+1
  2027     03CB  307C               	movlw	124
  2028     03CC  00A3               	movwf	??_lcd_init
  2029     03CD                     u1717:
  2030     03CD  0BA3               	decfsz	??_lcd_init,f
  2031     03CE  2BCD               	goto	u1717
  2032     03CF  0BA4               	decfsz	??_lcd_init+1,f
  2033     03D0  2BCD               	goto	u1717
  2034     03D1  0000               	nop
  2035     03D2                     l1844:
  2036                           
  2037                           ;main.c: 314:     lcd_cmd(0x38);
  2038     03D2  3038               	movlw	56
  2039     03D3  120A  118A  2666  120A  118A  	fcall	_lcd_cmd
  2040     03D8                     l1846:
  2041                           
  2042                           ;main.c: 315:     lcd_cmd(0x08);
  2043     03D8  3008               	movlw	8
  2044     03D9  120A  118A  2666  120A  118A  	fcall	_lcd_cmd
  2045     03DE                     l1848:
  2046                           
  2047                           ;main.c: 316:     lcd_cmd(0x0F);
  2048     03DE  300F               	movlw	15
  2049     03DF  120A  118A  2666  120A  118A  	fcall	_lcd_cmd
  2050     03E4                     l1850:
  2051                           
  2052                           ;main.c: 317:     lcd_cmd(0x01);
  2053     03E4  3001               	movlw	1
  2054     03E5  120A  118A  2666  120A  118A  	fcall	_lcd_cmd
  2055     03EA                     l1852:
  2056                           
  2057                           ;main.c: 318:     lcd_cmd(0b00001100);
  2058     03EA  300C               	movlw	12
  2059     03EB  120A  118A  2666  120A  118A  	fcall	_lcd_cmd
  2060     03F0                     l1854:
  2061                           
  2062                           ;main.c: 319:     lcd_cmd(0x80);
  2063     03F0  3080               	movlw	128
  2064     03F1  120A  118A  2666  120A  118A  	fcall	_lcd_cmd
  2065     03F6                     l124:
  2066     03F6  0008               	return
  2067     03F7                     __end_of_lcd_init:
  2068                           
  2069                           	psect	text8
  2070     0666                     __ptext8:	
  2071 ;; *************** function _lcd_cmd *****************
  2072 ;; Defined at:
  2073 ;;		line 288 in file "main.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  val             1    wreg     unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  val             1    2[BANK0 ] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         0       1       0       0       0
  2089 ;;      Temps:          0       2       0       0       0
  2090 ;;      Totals:         0       3       0       0       0
  2091 ;;Total ram usage:        3 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_lcd_init
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101     0666                     _lcd_cmd:	
  2102                           ;psect for function _lcd_cmd
  2103                           
  2104                           
  2105                           ;incstack = 0
  2106                           ; Regs used in _lcd_cmd: [wreg]
  2107                           ;lcd_cmd@val stored from wreg
  2108     0666  1283               	bcf	3,5	;RP0=0, select bank0
  2109     0667  1303               	bcf	3,6	;RP1=0, select bank0
  2110     0668  00A2               	movwf	lcd_cmd@val
  2111     0669                     l1716:
  2112                           
  2113                           ;main.c: 288: void lcd_cmd(unsigned char val);main.c: 289: {;main.c: 290:     PORTEbits.
      +                          RE1 = 1;
  2114     0669  1489               	bsf	9,1	;volatile
  2115     066A                     l1718:
  2116                           
  2117                           ;main.c: 292:     PORTD = val;
  2118     066A  0822               	movf	lcd_cmd@val,w
  2119     066B  0088               	movwf	8	;volatile
  2120     066C                     l1720:
  2121                           
  2122                           ;main.c: 293:     PORTEbits.RE2 = 0;
  2123     066C  1109               	bcf	9,2	;volatile
  2124                           
  2125                           ;main.c: 294:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2126     066D  3014               	movlw	20
  2127     066E  1283               	bcf	3,5	;RP0=0, select bank0
  2128     066F  1303               	bcf	3,6	;RP1=0, select bank0
  2129     0670  00A1               	movwf	??_lcd_cmd+1
  2130     0671  3079               	movlw	121
  2131     0672  00A0               	movwf	??_lcd_cmd
  2132     0673                     u1727:
  2133     0673  0BA0               	decfsz	??_lcd_cmd,f
  2134     0674  2E73               	goto	u1727
  2135     0675  0BA1               	decfsz	??_lcd_cmd+1,f
  2136     0676  2E73               	goto	u1727
  2137     0677                     l1722:
  2138                           
  2139                           ;main.c: 295:     PORTEbits.RE1 = 0;
  2140     0677  1283               	bcf	3,5	;RP0=0, select bank0
  2141     0678  1303               	bcf	3,6	;RP1=0, select bank0
  2142     0679  1089               	bcf	9,1	;volatile
  2143                           
  2144                           ;main.c: 296:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2145     067A  3014               	movlw	20
  2146     067B  1283               	bcf	3,5	;RP0=0, select bank0
  2147     067C  1303               	bcf	3,6	;RP1=0, select bank0
  2148     067D  00A1               	movwf	??_lcd_cmd+1
  2149     067E  3079               	movlw	121
  2150     067F  00A0               	movwf	??_lcd_cmd
  2151     0680                     u1737:
  2152     0680  0BA0               	decfsz	??_lcd_cmd,f
  2153     0681  2E80               	goto	u1737
  2154     0682  0BA1               	decfsz	??_lcd_cmd+1,f
  2155     0683  2E80               	goto	u1737
  2156     0684                     l1724:
  2157                           
  2158                           ;main.c: 298:     PORTEbits.RE1 = 1;
  2159     0684  1283               	bcf	3,5	;RP0=0, select bank0
  2160     0685  1303               	bcf	3,6	;RP1=0, select bank0
  2161     0686  1489               	bsf	9,1	;volatile
  2162     0687                     l121:
  2163     0687  0008               	return
  2164     0688                     __end_of_lcd_cmd:
  2165                           
  2166                           	psect	text9
  2167     0620                     __ptext9:	
  2168 ;; *************** function _itoa *****************
  2169 ;; Defined at:
  2170 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  buf             1    wreg     PTR unsigned char 
  2173 ;;		 -> buff(2), 
  2174 ;;  val             2   35[BANK0 ] int 
  2175 ;;  base            2   37[BANK0 ] int 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  buf             1   40[BANK0 ] PTR unsigned char 
  2178 ;;		 -> buff(2), 
  2179 ;;  cp              1    0        PTR unsigned char 
  2180 ;;		 -> buff(2), 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      PTR unsigned char 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       4       0       0       0
  2191 ;;      Locals:         0       1       0       0       0
  2192 ;;      Temps:          0       1       0       0       0
  2193 ;;      Totals:         0       6       0       0       0
  2194 ;;Total ram usage:        6 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 3
  2197 ;; This function calls:
  2198 ;;		_utoa
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204     0620                     _itoa:	
  2205                           ;psect for function _itoa
  2206                           
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2210                           ;itoa@buf stored from wreg
  2211     0620  1283               	bcf	3,5	;RP0=0, select bank0
  2212     0621  1303               	bcf	3,6	;RP1=0, select bank0
  2213     0622  00C8               	movwf	itoa@buf
  2214     0623                     l1916:
  2215     0623                     l1918:
  2216     0623  1FC4               	btfss	itoa@val+1,7
  2217     0624  2E26               	goto	u1501
  2218     0625  2E27               	goto	u1500
  2219     0626                     u1501:
  2220     0626  2E35               	goto	l1926
  2221     0627                     u1500:
  2222     0627                     l1920:
  2223     0627  0848               	movf	itoa@buf,w
  2224     0628  0084               	movwf	4
  2225     0629  302D               	movlw	45
  2226     062A  1383               	bcf	3,7	;select IRP bank0
  2227     062B  0080               	movwf	0
  2228     062C                     l1922:
  2229     062C  3001               	movlw	1
  2230     062D  00C7               	movwf	??_itoa
  2231     062E  0847               	movf	??_itoa,w
  2232     062F  07C8               	addwf	itoa@buf,f
  2233     0630                     l1924:
  2234     0630  09C3               	comf	itoa@val,f
  2235     0631  09C4               	comf	itoa@val+1,f
  2236     0632  0AC3               	incf	itoa@val,f
  2237     0633  1903               	skipnz
  2238     0634  0AC4               	incf	itoa@val+1,f
  2239     0635                     l1926:
  2240     0635  0844               	movf	itoa@val+1,w
  2241     0636  00BB               	movwf	utoa@val+1
  2242     0637  0843               	movf	itoa@val,w
  2243     0638  00BA               	movwf	utoa@val
  2244     0639  0846               	movf	itoa@base+1,w
  2245     063A  00BD               	movwf	utoa@base+1
  2246     063B  0845               	movf	itoa@base,w
  2247     063C  00BC               	movwf	utoa@base
  2248     063D  0848               	movf	itoa@buf,w
  2249     063E  120A  118A  22C0  120A  118A  	fcall	_utoa
  2250     0643                     l710:
  2251     0643  0008               	return
  2252     0644                     __end_of_itoa:
  2253                           
  2254                           	psect	text10
  2255     02C0                     __ptext10:	
  2256 ;; *************** function _utoa *****************
  2257 ;; Defined at:
  2258 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  buf             1    wreg     PTR unsigned char 
  2261 ;;		 -> buff(2), 
  2262 ;;  val             2   26[BANK0 ] unsigned int 
  2263 ;;  base            2   28[BANK0 ] int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  buf             1   34[BANK0 ] PTR unsigned char 
  2266 ;;		 -> buff(2), 
  2267 ;;  v               2   31[BANK0 ] unsigned int 
  2268 ;;  c               1   33[BANK0 ] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      PTR unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         0       4       0       0       0
  2279 ;;      Locals:         0       4       0       0       0
  2280 ;;      Temps:          0       1       0       0       0
  2281 ;;      Totals:         0       9       0       0       0
  2282 ;;Total ram usage:        9 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; Hardware stack levels required when called: 2
  2285 ;; This function calls:
  2286 ;;		___lwdiv
  2287 ;;		___lwmod
  2288 ;; This function is called by:
  2289 ;;		_itoa
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293     02C0                     _utoa:	
  2294                           ;psect for function _utoa
  2295                           
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2299                           ;utoa@buf stored from wreg
  2300     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2301     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2302     02C2  00C2               	movwf	utoa@buf
  2303     02C3                     l1780:
  2304     02C3  083B               	movf	utoa@val+1,w
  2305     02C4  00C0               	movwf	utoa@v+1
  2306     02C5  083A               	movf	utoa@val,w
  2307     02C6  00BF               	movwf	utoa@v
  2308     02C7                     l1782:
  2309     02C7  083D               	movf	utoa@base+1,w
  2310     02C8  00A1               	movwf	___lwdiv@divisor+1
  2311     02C9  083C               	movf	utoa@base,w
  2312     02CA  00A0               	movwf	___lwdiv@divisor
  2313     02CB  0840               	movf	utoa@v+1,w
  2314     02CC  00A3               	movwf	___lwdiv@dividend+1
  2315     02CD  083F               	movf	utoa@v,w
  2316     02CE  00A2               	movwf	___lwdiv@dividend
  2317     02CF  120A  118A  24D1  120A  118A  	fcall	___lwdiv
  2318     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2319     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2320     02D6  0821               	movf	?___lwdiv+1,w
  2321     02D7  00C0               	movwf	utoa@v+1
  2322     02D8  0820               	movf	?___lwdiv,w
  2323     02D9  00BF               	movwf	utoa@v
  2324     02DA                     l1784:
  2325     02DA  3001               	movlw	1
  2326     02DB  00BE               	movwf	??_utoa
  2327     02DC  083E               	movf	??_utoa,w
  2328     02DD  07C2               	addwf	utoa@buf,f
  2329     02DE                     l1786:
  2330     02DE  083F               	movf	utoa@v,w
  2331     02DF  0440               	iorwf	utoa@v+1,w
  2332     02E0  1D03               	btfss	3,2
  2333     02E1  2AE3               	goto	u1431
  2334     02E2  2AE4               	goto	u1430
  2335     02E3                     u1431:
  2336     02E3  2AC7               	goto	l1782
  2337     02E4                     u1430:
  2338     02E4                     l1788:
  2339     02E4  0842               	movf	utoa@buf,w
  2340     02E5  0084               	movwf	4
  2341     02E6  1383               	bcf	3,7	;select IRP bank0
  2342     02E7  0180               	clrf	0
  2343     02E8                     l1790:
  2344     02E8  3001               	movlw	1
  2345     02E9  02C2               	subwf	utoa@buf,f
  2346     02EA                     l1792:
  2347     02EA  083D               	movf	utoa@base+1,w
  2348     02EB  00B5               	movwf	___lwmod@divisor+1
  2349     02EC  083C               	movf	utoa@base,w
  2350     02ED  00B4               	movwf	___lwmod@divisor
  2351     02EE  083B               	movf	utoa@val+1,w
  2352     02EF  00B7               	movwf	___lwmod@dividend+1
  2353     02F0  083A               	movf	utoa@val,w
  2354     02F1  00B6               	movwf	___lwmod@dividend
  2355     02F2  120A  118A  255D  120A  118A  	fcall	___lwmod
  2356     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2357     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2358     02F9  0834               	movf	?___lwmod,w
  2359     02FA  00C1               	movwf	utoa@c
  2360     02FB                     l1794:
  2361     02FB  083D               	movf	utoa@base+1,w
  2362     02FC  00A1               	movwf	___lwdiv@divisor+1
  2363     02FD  083C               	movf	utoa@base,w
  2364     02FE  00A0               	movwf	___lwdiv@divisor
  2365     02FF  083B               	movf	utoa@val+1,w
  2366     0300  00A3               	movwf	___lwdiv@dividend+1
  2367     0301  083A               	movf	utoa@val,w
  2368     0302  00A2               	movwf	___lwdiv@dividend
  2369     0303  120A  118A  24D1  120A  118A  	fcall	___lwdiv
  2370     0308  1283               	bcf	3,5	;RP0=0, select bank0
  2371     0309  1303               	bcf	3,6	;RP1=0, select bank0
  2372     030A  0821               	movf	?___lwdiv+1,w
  2373     030B  00BB               	movwf	utoa@val+1
  2374     030C  0820               	movf	?___lwdiv,w
  2375     030D  00BA               	movwf	utoa@val
  2376     030E                     l1796:
  2377     030E  300A               	movlw	10
  2378     030F  0241               	subwf	utoa@c,w
  2379     0310  1C03               	skipc
  2380     0311  2B13               	goto	u1441
  2381     0312  2B14               	goto	u1440
  2382     0313                     u1441:
  2383     0313  2B18               	goto	l716
  2384     0314                     u1440:
  2385     0314                     l1798:
  2386     0314  3007               	movlw	7
  2387     0315  00BE               	movwf	??_utoa
  2388     0316  083E               	movf	??_utoa,w
  2389     0317  07C1               	addwf	utoa@c,f
  2390     0318                     l716:
  2391     0318  3030               	movlw	48
  2392     0319  00BE               	movwf	??_utoa
  2393     031A  083E               	movf	??_utoa,w
  2394     031B  07C1               	addwf	utoa@c,f
  2395     031C                     l1800:
  2396     031C  0842               	movf	utoa@buf,w
  2397     031D  0084               	movwf	4
  2398     031E  0841               	movf	utoa@c,w
  2399     031F  1383               	bcf	3,7	;select IRP bank0
  2400     0320  0080               	movwf	0
  2401     0321                     l1802:
  2402     0321  3001               	movlw	1
  2403     0322  02C2               	subwf	utoa@buf,f
  2404     0323                     l1804:
  2405     0323  083A               	movf	utoa@val,w
  2406     0324  043B               	iorwf	utoa@val+1,w
  2407     0325  1D03               	btfss	3,2
  2408     0326  2B28               	goto	u1451
  2409     0327  2B29               	goto	u1450
  2410     0328                     u1451:
  2411     0328  2AEA               	goto	l1792
  2412     0329                     u1450:
  2413     0329                     l1806:
  2414                           
  2415                           ;	Return value of _utoa is never used
  2416     0329  3001               	movlw	1
  2417     032A  00BE               	movwf	??_utoa
  2418     032B  083E               	movf	??_utoa,w
  2419     032C  07C2               	addwf	utoa@buf,f
  2420     032D                     l718:
  2421     032D  0008               	return
  2422     032E                     __end_of_utoa:
  2423                           
  2424                           	psect	text11
  2425     055D                     __ptext11:	
  2426 ;; *************** function ___lwmod *****************
  2427 ;; Defined at:
  2428 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  divisor         2   20[BANK0 ] unsigned int 
  2431 ;;  dividend        2   22[BANK0 ] unsigned int 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  counter         1   25[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2   20[BANK0 ] unsigned int 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       4       0       0       0
  2444 ;;      Locals:         0       1       0       0       0
  2445 ;;      Temps:          0       1       0       0       0
  2446 ;;      Totals:         0       6       0       0       0
  2447 ;;Total ram usage:        6 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_random_string
  2454 ;;		_utoa
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458     055D                     ___lwmod:	
  2459                           ;psect for function ___lwmod
  2460                           
  2461     055D                     l1684:	
  2462                           ;incstack = 0
  2463                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2464                           
  2465     055D  1283               	bcf	3,5	;RP0=0, select bank0
  2466     055E  1303               	bcf	3,6	;RP1=0, select bank0
  2467     055F  0834               	movf	___lwmod@divisor,w
  2468     0560  0435               	iorwf	___lwmod@divisor+1,w
  2469     0561  1903               	btfsc	3,2
  2470     0562  2D64               	goto	u1251
  2471     0563  2D65               	goto	u1250
  2472     0564                     u1251:
  2473     0564  2D94               	goto	l1702
  2474     0565                     u1250:
  2475     0565                     l1686:
  2476     0565  01B9               	clrf	___lwmod@counter
  2477     0566  0AB9               	incf	___lwmod@counter,f
  2478     0567  2D73               	goto	l1692
  2479     0568                     l1688:
  2480     0568  3001               	movlw	1
  2481     0569                     u1265:
  2482     0569  1003               	clrc
  2483     056A  0DB4               	rlf	___lwmod@divisor,f
  2484     056B  0DB5               	rlf	___lwmod@divisor+1,f
  2485     056C  3EFF               	addlw	-1
  2486     056D  1D03               	skipz
  2487     056E  2D69               	goto	u1265
  2488     056F                     l1690:
  2489     056F  3001               	movlw	1
  2490     0570  00B8               	movwf	??___lwmod
  2491     0571  0838               	movf	??___lwmod,w
  2492     0572  07B9               	addwf	___lwmod@counter,f
  2493     0573                     l1692:
  2494     0573  1FB5               	btfss	___lwmod@divisor+1,7
  2495     0574  2D76               	goto	u1271
  2496     0575  2D77               	goto	u1270
  2497     0576                     u1271:
  2498     0576  2D68               	goto	l1688
  2499     0577                     u1270:
  2500     0577                     l1694:
  2501     0577  0835               	movf	___lwmod@divisor+1,w
  2502     0578  0237               	subwf	___lwmod@dividend+1,w
  2503     0579  1D03               	skipz
  2504     057A  2D7D               	goto	u1285
  2505     057B  0834               	movf	___lwmod@divisor,w
  2506     057C  0236               	subwf	___lwmod@dividend,w
  2507     057D                     u1285:
  2508     057D  1C03               	skipc
  2509     057E  2D80               	goto	u1281
  2510     057F  2D81               	goto	u1280
  2511     0580                     u1281:
  2512     0580  2D87               	goto	l1698
  2513     0581                     u1280:
  2514     0581                     l1696:
  2515     0581  0834               	movf	___lwmod@divisor,w
  2516     0582  02B6               	subwf	___lwmod@dividend,f
  2517     0583  0835               	movf	___lwmod@divisor+1,w
  2518     0584  1C03               	skipc
  2519     0585  03B7               	decf	___lwmod@dividend+1,f
  2520     0586  02B7               	subwf	___lwmod@dividend+1,f
  2521     0587                     l1698:
  2522     0587  3001               	movlw	1
  2523     0588                     u1295:
  2524     0588  1003               	clrc
  2525     0589  0CB5               	rrf	___lwmod@divisor+1,f
  2526     058A  0CB4               	rrf	___lwmod@divisor,f
  2527     058B  3EFF               	addlw	-1
  2528     058C  1D03               	skipz
  2529     058D  2D88               	goto	u1295
  2530     058E                     l1700:
  2531     058E  3001               	movlw	1
  2532     058F  02B9               	subwf	___lwmod@counter,f
  2533     0590  1D03               	btfss	3,2
  2534     0591  2D93               	goto	u1301
  2535     0592  2D94               	goto	u1300
  2536     0593                     u1301:
  2537     0593  2D77               	goto	l1694
  2538     0594                     u1300:
  2539     0594                     l1702:
  2540     0594  0837               	movf	___lwmod@dividend+1,w
  2541     0595  00B5               	movwf	?___lwmod+1
  2542     0596  0836               	movf	___lwmod@dividend,w
  2543     0597  00B4               	movwf	?___lwmod
  2544     0598                     l538:
  2545     0598  0008               	return
  2546     0599                     __end_of___lwmod:
  2547                           
  2548                           	psect	text12
  2549     04D1                     __ptext12:	
  2550 ;; *************** function ___lwdiv *****************
  2551 ;; Defined at:
  2552 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  divisor         2    0[BANK0 ] unsigned int 
  2555 ;;  dividend        2    2[BANK0 ] unsigned int 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  quotient        2    6[BANK0 ] unsigned int 
  2558 ;;  counter         1    5[BANK0 ] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  2    0[BANK0 ] unsigned int 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         0       4       0       0       0
  2569 ;;      Locals:         0       3       0       0       0
  2570 ;;      Temps:          0       1       0       0       0
  2571 ;;      Totals:         0       8       0       0       0
  2572 ;;Total ram usage:        8 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 1
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_utoa
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582     04D1                     ___lwdiv:	
  2583                           ;psect for function ___lwdiv
  2584                           
  2585     04D1                     l1658:	
  2586                           ;incstack = 0
  2587                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2588                           
  2589     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2590     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2591     04D3  01A6               	clrf	___lwdiv@quotient
  2592     04D4  01A7               	clrf	___lwdiv@quotient+1
  2593     04D5                     l1660:
  2594     04D5  0820               	movf	___lwdiv@divisor,w
  2595     04D6  0421               	iorwf	___lwdiv@divisor+1,w
  2596     04D7  1903               	btfsc	3,2
  2597     04D8  2CDA               	goto	u1181
  2598     04D9  2CDB               	goto	u1180
  2599     04DA                     u1181:
  2600     04DA  2D12               	goto	l1680
  2601     04DB                     u1180:
  2602     04DB                     l1662:
  2603     04DB  01A5               	clrf	___lwdiv@counter
  2604     04DC  0AA5               	incf	___lwdiv@counter,f
  2605     04DD  2CE9               	goto	l1668
  2606     04DE                     l1664:
  2607     04DE  3001               	movlw	1
  2608     04DF                     u1195:
  2609     04DF  1003               	clrc
  2610     04E0  0DA0               	rlf	___lwdiv@divisor,f
  2611     04E1  0DA1               	rlf	___lwdiv@divisor+1,f
  2612     04E2  3EFF               	addlw	-1
  2613     04E3  1D03               	skipz
  2614     04E4  2CDF               	goto	u1195
  2615     04E5                     l1666:
  2616     04E5  3001               	movlw	1
  2617     04E6  00A4               	movwf	??___lwdiv
  2618     04E7  0824               	movf	??___lwdiv,w
  2619     04E8  07A5               	addwf	___lwdiv@counter,f
  2620     04E9                     l1668:
  2621     04E9  1FA1               	btfss	___lwdiv@divisor+1,7
  2622     04EA  2CEC               	goto	u1201
  2623     04EB  2CED               	goto	u1200
  2624     04EC                     u1201:
  2625     04EC  2CDE               	goto	l1664
  2626     04ED                     u1200:
  2627     04ED                     l1670:
  2628     04ED  3001               	movlw	1
  2629     04EE                     u1215:
  2630     04EE  1003               	clrc
  2631     04EF  0DA6               	rlf	___lwdiv@quotient,f
  2632     04F0  0DA7               	rlf	___lwdiv@quotient+1,f
  2633     04F1  3EFF               	addlw	-1
  2634     04F2  1D03               	skipz
  2635     04F3  2CEE               	goto	u1215
  2636     04F4  0821               	movf	___lwdiv@divisor+1,w
  2637     04F5  0223               	subwf	___lwdiv@dividend+1,w
  2638     04F6  1D03               	skipz
  2639     04F7  2CFA               	goto	u1225
  2640     04F8  0820               	movf	___lwdiv@divisor,w
  2641     04F9  0222               	subwf	___lwdiv@dividend,w
  2642     04FA                     u1225:
  2643     04FA  1C03               	skipc
  2644     04FB  2CFD               	goto	u1221
  2645     04FC  2CFE               	goto	u1220
  2646     04FD                     u1221:
  2647     04FD  2D05               	goto	l1676
  2648     04FE                     u1220:
  2649     04FE                     l1672:
  2650     04FE  0820               	movf	___lwdiv@divisor,w
  2651     04FF  02A2               	subwf	___lwdiv@dividend,f
  2652     0500  0821               	movf	___lwdiv@divisor+1,w
  2653     0501  1C03               	skipc
  2654     0502  03A3               	decf	___lwdiv@dividend+1,f
  2655     0503  02A3               	subwf	___lwdiv@dividend+1,f
  2656     0504                     l1674:
  2657     0504  1426               	bsf	___lwdiv@quotient,0
  2658     0505                     l1676:
  2659     0505  3001               	movlw	1
  2660     0506                     u1235:
  2661     0506  1003               	clrc
  2662     0507  0CA1               	rrf	___lwdiv@divisor+1,f
  2663     0508  0CA0               	rrf	___lwdiv@divisor,f
  2664     0509  3EFF               	addlw	-1
  2665     050A  1D03               	skipz
  2666     050B  2D06               	goto	u1235
  2667     050C                     l1678:
  2668     050C  3001               	movlw	1
  2669     050D  02A5               	subwf	___lwdiv@counter,f
  2670     050E  1D03               	btfss	3,2
  2671     050F  2D11               	goto	u1241
  2672     0510  2D12               	goto	u1240
  2673     0511                     u1241:
  2674     0511  2CED               	goto	l1670
  2675     0512                     u1240:
  2676     0512                     l1680:
  2677     0512  0827               	movf	___lwdiv@quotient+1,w
  2678     0513  00A1               	movwf	?___lwdiv+1
  2679     0514  0826               	movf	___lwdiv@quotient,w
  2680     0515  00A0               	movwf	?___lwdiv
  2681     0516                     l528:
  2682     0516  0008               	return
  2683     0517                     __end_of___lwdiv:
  2684                           
  2685                           	psect	text13
  2686     0688                     __ptext13:	
  2687 ;; *************** function _initKeyPad *****************
  2688 ;; Defined at:
  2689 ;;		line 353 in file "main.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;		None
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      void 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2703 ;;      Params:         0       0       0       0       0
  2704 ;;      Locals:         0       0       0       0       0
  2705 ;;      Temps:          0       1       0       0       0
  2706 ;;      Totals:         0       1       0       0       0
  2707 ;;Total ram usage:        1 bytes
  2708 ;; Hardware stack levels used: 1
  2709 ;; Hardware stack levels required when called: 1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717     0688                     _initKeyPad:	
  2718                           ;psect for function _initKeyPad
  2719                           
  2720     0688                     l1856:	
  2721                           ;incstack = 0
  2722                           ; Regs used in _initKeyPad: [wreg+status,2+status,0]
  2723                           
  2724                           
  2725                           ;main.c: 355:     TRISD |= 0x0f;
  2726     0688  300F               	movlw	15
  2727     0689  1283               	bcf	3,5	;RP0=0, select bank0
  2728     068A  1303               	bcf	3,6	;RP1=0, select bank0
  2729     068B  00A0               	movwf	??_initKeyPad
  2730     068C  0820               	movf	??_initKeyPad,w
  2731     068D  1683               	bsf	3,5	;RP0=1, select bank1
  2732     068E  1303               	bcf	3,6	;RP1=0, select bank1
  2733     068F  0488               	iorwf	8,f	;volatile
  2734                           
  2735                           ;main.c: 356:     TRISB &= ~0x07;
  2736     0690  30F8               	movlw	248
  2737     0691  1283               	bcf	3,5	;RP0=0, select bank0
  2738     0692  1303               	bcf	3,6	;RP1=0, select bank0
  2739     0693  00A0               	movwf	??_initKeyPad
  2740     0694  0820               	movf	??_initKeyPad,w
  2741     0695  1683               	bsf	3,5	;RP0=1, select bank1
  2742     0696  1303               	bcf	3,6	;RP1=0, select bank1
  2743     0697  0586               	andwf	6,f	;volatile
  2744     0698                     l136:
  2745     0698  0008               	return
  2746     0699                     __end_of_initKeyPad:
  2747                           
  2748                           	psect	text14
  2749     0517                     __ptext14:	
  2750 ;; *************** function _UART_init *****************
  2751 ;; Defined at:
  2752 ;;		line 381 in file "main.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  baudrate        4   15[BANK0 ] long 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       4       0       0       0
  2767 ;;      Locals:         0       0       0       0       0
  2768 ;;      Temps:          0       4       0       0       0
  2769 ;;      Totals:         0       8       0       0       0
  2770 ;;Total ram usage:        8 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 2
  2773 ;; This function calls:
  2774 ;;		___aldiv
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780     0517                     _UART_init:	
  2781                           ;psect for function _UART_init
  2782                           
  2783     0517                     l1810:	
  2784                           ;incstack = 0
  2785                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  2786                           
  2787                           
  2788                           ;main.c: 381: void UART_init(long int baudrate);main.c: 382: {;main.c: 383:     TRISC &=
      +                           ~0x40;
  2789     0517  30BF               	movlw	191
  2790     0518  1283               	bcf	3,5	;RP0=0, select bank0
  2791     0519  1303               	bcf	3,6	;RP1=0, select bank0
  2792     051A  00B3               	movwf	??_UART_init
  2793     051B  0833               	movf	??_UART_init,w
  2794     051C  1683               	bsf	3,5	;RP0=1, select bank1
  2795     051D  1303               	bcf	3,6	;RP1=0, select bank1
  2796     051E  0587               	andwf	7,f	;volatile
  2797     051F                     l1812:
  2798                           
  2799                           ;main.c: 384:     TRISC |= 0x80;
  2800     051F  1787               	bsf	7,7	;volatile
  2801                           
  2802                           ;main.c: 385:     TXSTA |= 0x24;
  2803     0520  3024               	movlw	36
  2804     0521  1283               	bcf	3,5	;RP0=0, select bank0
  2805     0522  1303               	bcf	3,6	;RP1=0, select bank0
  2806     0523  00B3               	movwf	??_UART_init
  2807     0524  0833               	movf	??_UART_init,w
  2808     0525  1683               	bsf	3,5	;RP0=1, select bank1
  2809     0526  1303               	bcf	3,6	;RP1=0, select bank1
  2810     0527  0498               	iorwf	24,f	;volatile
  2811     0528                     l1814:
  2812                           
  2813                           ;main.c: 388:     RCSTA |= 0x80;
  2814     0528  1283               	bcf	3,5	;RP0=0, select bank0
  2815     0529  1303               	bcf	3,6	;RP1=0, select bank0
  2816     052A  1798               	bsf	24,7	;volatile
  2817     052B                     l1816:
  2818                           
  2819                           ;main.c: 389:     RCSTA |= 0x10;
  2820     052B  1618               	bsf	24,4	;volatile
  2821     052C                     l1818:
  2822                           
  2823                           ;main.c: 391:     SPBRG = (char) (20000000 / (long) (64UL * baudrate)) - 1;
  2824     052C  082F               	movf	UART_init@baudrate,w
  2825     052D  00B3               	movwf	??_UART_init
  2826     052E  0830               	movf	UART_init@baudrate+1,w
  2827     052F  00B4               	movwf	??_UART_init+1
  2828     0530  0831               	movf	UART_init@baudrate+2,w
  2829     0531  00B5               	movwf	??_UART_init+2
  2830     0532  0832               	movf	UART_init@baudrate+3,w
  2831     0533  00B6               	movwf	??_UART_init+3
  2832     0534  3006               	movlw	6
  2833     0535                     u1465:
  2834     0535  1003               	clrc
  2835     0536  0DB3               	rlf	??_UART_init,f
  2836     0537  0DB4               	rlf	??_UART_init+1,f
  2837     0538  0DB5               	rlf	??_UART_init+2,f
  2838     0539  0DB6               	rlf	??_UART_init+3,f
  2839     053A                     u1460:
  2840     053A  3EFF               	addlw	-1
  2841     053B  1D03               	skipz
  2842     053C  2D35               	goto	u1465
  2843     053D  0836               	movf	??_UART_init+3,w
  2844     053E  00A3               	movwf	___aldiv@divisor+3
  2845     053F  0835               	movf	??_UART_init+2,w
  2846     0540  00A2               	movwf	___aldiv@divisor+2
  2847     0541  0834               	movf	??_UART_init+1,w
  2848     0542  00A1               	movwf	___aldiv@divisor+1
  2849     0543  0833               	movf	??_UART_init,w
  2850     0544  00A0               	movwf	___aldiv@divisor
  2851     0545  3001               	movlw	1
  2852     0546  00A7               	movwf	___aldiv@dividend+3
  2853     0547  3031               	movlw	49
  2854     0548  00A6               	movwf	___aldiv@dividend+2
  2855     0549  302D               	movlw	45
  2856     054A  00A5               	movwf	___aldiv@dividend+1
  2857     054B  3000               	movlw	0
  2858     054C  00A4               	movwf	___aldiv@dividend
  2859     054D  120A  118A  21A8  120A  118A  	fcall	___aldiv
  2860     0552  1283               	bcf	3,5	;RP0=0, select bank0
  2861     0553  1303               	bcf	3,6	;RP1=0, select bank0
  2862     0554  0820               	movf	?___aldiv,w
  2863     0555  3EFF               	addlw	255
  2864     0556  1683               	bsf	3,5	;RP0=1, select bank1
  2865     0557  1303               	bcf	3,6	;RP1=0, select bank1
  2866     0558  0099               	movwf	25	;volatile
  2867     0559                     l1820:
  2868                           
  2869                           ;main.c: 393:     INTCON |= 0x80;
  2870     0559  178B               	bsf	11,7	;volatile
  2871     055A                     l1822:
  2872                           
  2873                           ;main.c: 394:     INTCON |= 0x40;
  2874     055A  170B               	bsf	11,6	;volatile
  2875     055B                     l1824:
  2876                           
  2877                           ;main.c: 395:     PIE1 |= 0x20;
  2878     055B  168C               	bsf	12,5	;volatile
  2879     055C                     l148:
  2880     055C  0008               	return
  2881     055D                     __end_of_UART_init:
  2882                           
  2883                           	psect	text15
  2884     01A8                     __ptext15:	
  2885 ;; *************** function ___aldiv *****************
  2886 ;; Defined at:
  2887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  divisor         4    0[BANK0 ] long 
  2890 ;;  dividend        4    4[BANK0 ] long 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  quotient        4   11[BANK0 ] long 
  2893 ;;  sign            1   10[BANK0 ] unsigned char 
  2894 ;;  counter         1    9[BANK0 ] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  4    0[BANK0 ] long 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         0       8       0       0       0
  2905 ;;      Locals:         0       6       0       0       0
  2906 ;;      Temps:          0       1       0       0       0
  2907 ;;      Totals:         0      15       0       0       0
  2908 ;;Total ram usage:       15 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 1
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_UART_init
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918     01A8                     ___aldiv:	
  2919                           ;psect for function ___aldiv
  2920                           
  2921     01A8                     l1740:	
  2922                           ;incstack = 0
  2923                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2924                           
  2925     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2926     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2927     01AA  01AA               	clrf	___aldiv@sign
  2928     01AB                     l1742:
  2929     01AB  1FA3               	btfss	___aldiv@divisor+3,7
  2930     01AC  29AE               	goto	u1331
  2931     01AD  29AF               	goto	u1330
  2932     01AE                     u1331:
  2933     01AE  29BC               	goto	l321
  2934     01AF                     u1330:
  2935     01AF                     l1744:
  2936     01AF  09A0               	comf	___aldiv@divisor,f
  2937     01B0  09A1               	comf	___aldiv@divisor+1,f
  2938     01B1  09A2               	comf	___aldiv@divisor+2,f
  2939     01B2  09A3               	comf	___aldiv@divisor+3,f
  2940     01B3  0AA0               	incf	___aldiv@divisor,f
  2941     01B4  1903               	skipnz
  2942     01B5  0AA1               	incf	___aldiv@divisor+1,f
  2943     01B6  1903               	skipnz
  2944     01B7  0AA2               	incf	___aldiv@divisor+2,f
  2945     01B8  1903               	skipnz
  2946     01B9  0AA3               	incf	___aldiv@divisor+3,f
  2947     01BA  01AA               	clrf	___aldiv@sign
  2948     01BB  0AAA               	incf	___aldiv@sign,f
  2949     01BC                     l321:
  2950     01BC  1FA7               	btfss	___aldiv@dividend+3,7
  2951     01BD  29BF               	goto	u1341
  2952     01BE  29C0               	goto	u1340
  2953     01BF                     u1341:
  2954     01BF  29CF               	goto	l1750
  2955     01C0                     u1340:
  2956     01C0                     l1746:
  2957     01C0  09A4               	comf	___aldiv@dividend,f
  2958     01C1  09A5               	comf	___aldiv@dividend+1,f
  2959     01C2  09A6               	comf	___aldiv@dividend+2,f
  2960     01C3  09A7               	comf	___aldiv@dividend+3,f
  2961     01C4  0AA4               	incf	___aldiv@dividend,f
  2962     01C5  1903               	skipnz
  2963     01C6  0AA5               	incf	___aldiv@dividend+1,f
  2964     01C7  1903               	skipnz
  2965     01C8  0AA6               	incf	___aldiv@dividend+2,f
  2966     01C9  1903               	skipnz
  2967     01CA  0AA7               	incf	___aldiv@dividend+3,f
  2968     01CB                     l1748:
  2969     01CB  3001               	movlw	1
  2970     01CC  00A8               	movwf	??___aldiv
  2971     01CD  0828               	movf	??___aldiv,w
  2972     01CE  06AA               	xorwf	___aldiv@sign,f
  2973     01CF                     l1750:
  2974     01CF  3000               	movlw	0
  2975     01D0  00AE               	movwf	___aldiv@quotient+3
  2976     01D1  3000               	movlw	0
  2977     01D2  00AD               	movwf	___aldiv@quotient+2
  2978     01D3  3000               	movlw	0
  2979     01D4  00AC               	movwf	___aldiv@quotient+1
  2980     01D5  3000               	movlw	0
  2981     01D6  00AB               	movwf	___aldiv@quotient
  2982     01D7                     l1752:
  2983     01D7  0823               	movf	___aldiv@divisor+3,w
  2984     01D8  0422               	iorwf	___aldiv@divisor+2,w
  2985     01D9  0421               	iorwf	___aldiv@divisor+1,w
  2986     01DA  0420               	iorwf	___aldiv@divisor,w
  2987     01DB  1903               	skipnz
  2988     01DC  29DE               	goto	u1351
  2989     01DD  29DF               	goto	u1350
  2990     01DE                     u1351:
  2991     01DE  2A2C               	goto	l1772
  2992     01DF                     u1350:
  2993     01DF                     l1754:
  2994     01DF  01A9               	clrf	___aldiv@counter
  2995     01E0  0AA9               	incf	___aldiv@counter,f
  2996     01E1  29EF               	goto	l1758
  2997     01E2                     l1756:
  2998     01E2  3001               	movlw	1
  2999     01E3  00A8               	movwf	??___aldiv
  3000     01E4                     u1365:
  3001     01E4  1003               	clrc
  3002     01E5  0DA0               	rlf	___aldiv@divisor,f
  3003     01E6  0DA1               	rlf	___aldiv@divisor+1,f
  3004     01E7  0DA2               	rlf	___aldiv@divisor+2,f
  3005     01E8  0DA3               	rlf	___aldiv@divisor+3,f
  3006     01E9  0BA8               	decfsz	??___aldiv,f
  3007     01EA  29E4               	goto	u1365
  3008     01EB  3001               	movlw	1
  3009     01EC  00A8               	movwf	??___aldiv
  3010     01ED  0828               	movf	??___aldiv,w
  3011     01EE  07A9               	addwf	___aldiv@counter,f
  3012     01EF                     l1758:
  3013     01EF  1FA3               	btfss	___aldiv@divisor+3,7
  3014     01F0  29F2               	goto	u1371
  3015     01F1  29F3               	goto	u1370
  3016     01F2                     u1371:
  3017     01F2  29E2               	goto	l1756
  3018     01F3                     u1370:
  3019     01F3                     l1760:
  3020     01F3  3001               	movlw	1
  3021     01F4  00A8               	movwf	??___aldiv
  3022     01F5                     u1385:
  3023     01F5  1003               	clrc
  3024     01F6  0DAB               	rlf	___aldiv@quotient,f
  3025     01F7  0DAC               	rlf	___aldiv@quotient+1,f
  3026     01F8  0DAD               	rlf	___aldiv@quotient+2,f
  3027     01F9  0DAE               	rlf	___aldiv@quotient+3,f
  3028     01FA  0BA8               	decfsz	??___aldiv,f
  3029     01FB  29F5               	goto	u1385
  3030     01FC                     l1762:
  3031     01FC  0823               	movf	___aldiv@divisor+3,w
  3032     01FD  0227               	subwf	___aldiv@dividend+3,w
  3033     01FE  1D03               	skipz
  3034     01FF  2A0A               	goto	u1395
  3035     0200  0822               	movf	___aldiv@divisor+2,w
  3036     0201  0226               	subwf	___aldiv@dividend+2,w
  3037     0202  1D03               	skipz
  3038     0203  2A0A               	goto	u1395
  3039     0204  0821               	movf	___aldiv@divisor+1,w
  3040     0205  0225               	subwf	___aldiv@dividend+1,w
  3041     0206  1D03               	skipz
  3042     0207  2A0A               	goto	u1395
  3043     0208  0820               	movf	___aldiv@divisor,w
  3044     0209  0224               	subwf	___aldiv@dividend,w
  3045     020A                     u1395:
  3046     020A  1C03               	skipc
  3047     020B  2A0D               	goto	u1391
  3048     020C  2A0E               	goto	u1390
  3049     020D                     u1391:
  3050     020D  2A1D               	goto	l1768
  3051     020E                     u1390:
  3052     020E                     l1764:
  3053     020E  0820               	movf	___aldiv@divisor,w
  3054     020F  02A4               	subwf	___aldiv@dividend,f
  3055     0210  0821               	movf	___aldiv@divisor+1,w
  3056     0211  1C03               	skipc
  3057     0212  0F21               	incfsz	___aldiv@divisor+1,w
  3058     0213  02A5               	subwf	___aldiv@dividend+1,f
  3059     0214  0822               	movf	___aldiv@divisor+2,w
  3060     0215  1C03               	skipc
  3061     0216  0F22               	incfsz	___aldiv@divisor+2,w
  3062     0217  02A6               	subwf	___aldiv@dividend+2,f
  3063     0218  0823               	movf	___aldiv@divisor+3,w
  3064     0219  1C03               	skipc
  3065     021A  0F23               	incfsz	___aldiv@divisor+3,w
  3066     021B  02A7               	subwf	___aldiv@dividend+3,f
  3067     021C                     l1766:
  3068     021C  142B               	bsf	___aldiv@quotient,0
  3069     021D                     l1768:
  3070     021D  3001               	movlw	1
  3071     021E                     u1405:
  3072     021E  1003               	clrc
  3073     021F  0CA3               	rrf	___aldiv@divisor+3,f
  3074     0220  0CA2               	rrf	___aldiv@divisor+2,f
  3075     0221  0CA1               	rrf	___aldiv@divisor+1,f
  3076     0222  0CA0               	rrf	___aldiv@divisor,f
  3077     0223  3EFF               	addlw	-1
  3078     0224  1D03               	skipz
  3079     0225  2A1E               	goto	u1405
  3080     0226                     l1770:
  3081     0226  3001               	movlw	1
  3082     0227  02A9               	subwf	___aldiv@counter,f
  3083     0228  1D03               	btfss	3,2
  3084     0229  2A2B               	goto	u1411
  3085     022A  2A2C               	goto	u1410
  3086     022B                     u1411:
  3087     022B  29F3               	goto	l1760
  3088     022C                     u1410:
  3089     022C                     l1772:
  3090     022C  082A               	movf	___aldiv@sign,w
  3091     022D  1903               	btfsc	3,2
  3092     022E  2A30               	goto	u1421
  3093     022F  2A31               	goto	u1420
  3094     0230                     u1421:
  3095     0230  2A3C               	goto	l1776
  3096     0231                     u1420:
  3097     0231                     l1774:
  3098     0231  09AB               	comf	___aldiv@quotient,f
  3099     0232  09AC               	comf	___aldiv@quotient+1,f
  3100     0233  09AD               	comf	___aldiv@quotient+2,f
  3101     0234  09AE               	comf	___aldiv@quotient+3,f
  3102     0235  0AAB               	incf	___aldiv@quotient,f
  3103     0236  1903               	skipnz
  3104     0237  0AAC               	incf	___aldiv@quotient+1,f
  3105     0238  1903               	skipnz
  3106     0239  0AAD               	incf	___aldiv@quotient+2,f
  3107     023A  1903               	skipnz
  3108     023B  0AAE               	incf	___aldiv@quotient+3,f
  3109     023C                     l1776:
  3110     023C  082E               	movf	___aldiv@quotient+3,w
  3111     023D  00A3               	movwf	?___aldiv+3
  3112     023E  082D               	movf	___aldiv@quotient+2,w
  3113     023F  00A2               	movwf	?___aldiv+2
  3114     0240  082C               	movf	___aldiv@quotient+1,w
  3115     0241  00A1               	movwf	?___aldiv+1
  3116     0242  082B               	movf	___aldiv@quotient,w
  3117     0243  00A0               	movwf	?___aldiv
  3118     0244                     l331:
  3119     0244  0008               	return
  3120     0245                     __end_of___aldiv:
  3121                           
  3122                           	psect	text16
  3123     05F3                     __ptext16:	
  3124 ;; *************** function _UART_TxString *****************
  3125 ;; Defined at:
  3126 ;;		line 408 in file "main.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  str             2    2[BANK0 ] PTR const unsigned char 
  3129 ;;		 -> random_string@str(8), STR_3(8), 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  i               1    5[BANK0 ] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       2       0       0       0
  3142 ;;      Locals:         0       1       0       0       0
  3143 ;;      Temps:          0       1       0       0       0
  3144 ;;      Totals:         0       4       0       0       0
  3145 ;;Total ram usage:        4 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; Hardware stack levels required when called: 2
  3148 ;; This function calls:
  3149 ;;		_UART_TxChar
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155     05F3                     _UART_TxString:	
  3156                           ;psect for function _UART_TxString
  3157                           
  3158     05F3                     l1908:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3161                           
  3162                           
  3163                           ;main.c: 408: void UART_TxString(const char* str);main.c: 409: {;main.c: 410:     unsign
      +                          ed char i = 0;
  3164     05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3165     05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3166     05F5  01A5               	clrf	UART_TxString@i
  3167                           
  3168                           ;main.c: 412:     while (str[i] != 0)
  3169     05F6  2E0E               	goto	l1914
  3170     05F7                     l1910:
  3171                           
  3172                           ;main.c: 413:     {;main.c: 414:         UART_TxChar(str[i]);
  3173     05F7  0825               	movf	UART_TxString@i,w
  3174     05F8  0722               	addwf	UART_TxString@str,w
  3175     05F9  0084               	movwf	4
  3176     05FA  0823               	movf	UART_TxString@str+1,w
  3177     05FB  1803               	skipnc
  3178     05FC  0A23               	incf	UART_TxString@str+1,w
  3179     05FD  00FF               	movwf	btemp+1
  3180     05FE  120A  118A  2245  120A  118A  	fcall	stringtab
  3181     0603  120A  118A  2699  120A  118A  	fcall	_UART_TxChar
  3182     0608                     l1912:
  3183                           
  3184                           ;main.c: 415:         i++;
  3185     0608  3001               	movlw	1
  3186     0609  1283               	bcf	3,5	;RP0=0, select bank0
  3187     060A  1303               	bcf	3,6	;RP1=0, select bank0
  3188     060B  00A4               	movwf	??_UART_TxString
  3189     060C  0824               	movf	??_UART_TxString,w
  3190     060D  07A5               	addwf	UART_TxString@i,f
  3191     060E                     l1914:
  3192                           
  3193                           ;main.c: 412:     while (str[i] != 0)
  3194     060E  0825               	movf	UART_TxString@i,w
  3195     060F  0722               	addwf	UART_TxString@str,w
  3196     0610  0084               	movwf	4
  3197     0611  0823               	movf	UART_TxString@str+1,w
  3198     0612  1803               	skipnc
  3199     0613  0A23               	incf	UART_TxString@str+1,w
  3200     0614  00FF               	movwf	btemp+1
  3201     0615  120A  118A  2245  120A  118A  	fcall	stringtab
  3202     061A  3A00               	xorlw	0
  3203     061B  1D03               	skipz
  3204     061C  2E1E               	goto	u1491
  3205     061D  2E1F               	goto	u1490
  3206     061E                     u1491:
  3207     061E  2DF7               	goto	l1910
  3208     061F                     u1490:
  3209     061F                     l160:
  3210     061F  0008               	return
  3211     0620                     __end_of_UART_TxString:
  3212                           
  3213                           	psect	text17
  3214     0699                     __ptext17:	
  3215 ;; *************** function _UART_TxChar *****************
  3216 ;; Defined at:
  3217 ;;		line 398 in file "main.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  ch              1    wreg     unsigned char 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  ch              1    1[BANK0 ] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3231 ;;      Params:         0       0       0       0       0
  3232 ;;      Locals:         0       1       0       0       0
  3233 ;;      Temps:          0       1       0       0       0
  3234 ;;      Totals:         0       2       0       0       0
  3235 ;;Total ram usage:        2 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 1
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_UART_TxString
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245     0699                     _UART_TxChar:	
  3246                           ;psect for function _UART_TxChar
  3247                           
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _UART_TxChar: [wreg+status,2+status,0]
  3251                           ;UART_TxChar@ch stored from wreg
  3252     0699  1283               	bcf	3,5	;RP0=0, select bank0
  3253     069A  1303               	bcf	3,6	;RP1=0, select bank0
  3254     069B  00A1               	movwf	UART_TxChar@ch
  3255     069C                     l1734:
  3256     069C                     l151:	
  3257                           ;main.c: 398: void UART_TxChar(char ch);main.c: 399: {;main.c: 400:     while (!(PIR1 & 
      +                          0x10));
  3258                           
  3259     069C  1E0C               	btfss	12,4	;volatile
  3260     069D  2E9F               	goto	u1321
  3261     069E  2EA0               	goto	u1320
  3262     069F                     u1321:
  3263     069F  2E9C               	goto	l151
  3264     06A0                     u1320:
  3265     06A0                     l1736:
  3266                           
  3267                           ;main.c: 402:     PIR1 &= ~0x10;
  3268     06A0  30EF               	movlw	239
  3269     06A1  00A0               	movwf	??_UART_TxChar
  3270     06A2  0820               	movf	??_UART_TxChar,w
  3271     06A3  058C               	andwf	12,f	;volatile
  3272     06A4                     l1738:
  3273                           
  3274                           ;main.c: 404:     TXREG = ch;
  3275     06A4  0821               	movf	UART_TxChar@ch,w
  3276     06A5  0099               	movwf	25	;volatile
  3277     06A6                     l154:
  3278     06A6  0008               	return
  3279     06A7                     __end_of_UART_TxChar:
  3280                           
  3281                           	psect	text18
  3282     032E                     __ptext18:	
  3283 ;; *************** function _ISR *****************
  3284 ;; Defined at:
  3285 ;;		line 422 in file "main.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0
  3301 ;;      Temps:          5       0       0       0       0
  3302 ;;      Totals:         5       0       0       0       0
  3303 ;;Total ram usage:        5 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		Interrupt level 1
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312     032E                     _ISR:	
  3313                           ;psect for function _ISR
  3314                           
  3315     032E                     i1l1608:
  3316                           
  3317                           ;main.c: 424:     if (RCIF)
  3318     032E  1283               	bcf	3,5	;RP0=0, select bank0
  3319     032F  1303               	bcf	3,6	;RP1=0, select bank0
  3320     0330  1E8C               	btfss	12,5	;volatile
  3321     0331  2B33               	goto	u108_21
  3322     0332  2B34               	goto	u108_20
  3323     0333                     u108_21:
  3324     0333  2B47               	goto	i1l1620
  3325     0334                     u108_20:
  3326     0334                     i1l1610:
  3327                           
  3328                           ;main.c: 425:     {;main.c: 426:         dato[i++] = RCREG;
  3329     0334  0877               	movf	_i,w
  3330     0335  3EA0               	addlw	(low (_dato| 0))& (0+255)
  3331     0336  0084               	movwf	4
  3332     0337  081A               	movf	26,w	;volatile
  3333     0338  1383               	bcf	3,7	;select IRP bank1
  3334     0339  0080               	movwf	0
  3335     033A                     i1l1612:
  3336     033A  3001               	movlw	1
  3337     033B  07F7               	addwf	_i,f
  3338     033C  1803               	skipnc
  3339     033D  0AF8               	incf	_i+1,f
  3340     033E  3000               	movlw	0
  3341     033F  07F8               	addwf	_i+1,f
  3342     0340                     i1l1614:
  3343                           
  3344                           ;main.c: 427:         dato[i] = '\0';
  3345     0340  0877               	movf	_i,w
  3346     0341  3EA0               	addlw	(low (_dato| 0))& (0+255)
  3347     0342  0084               	movwf	4
  3348     0343  0180               	clrf	0
  3349     0344                     i1l1616:
  3350                           
  3351                           ;main.c: 428:         received = 1;
  3352     0344  01D2               	clrf	_received
  3353     0345  0AD2               	incf	_received,f
  3354     0346                     i1l1618:
  3355                           
  3356                           ;main.c: 429:         RCIF = 0;
  3357     0346  128C               	bcf	12,5	;volatile
  3358     0347                     i1l1620:
  3359                           
  3360                           ;main.c: 432:     if (INTCON & 0x04)
  3361     0347  1D0B               	btfss	11,2	;volatile
  3362     0348  2B4A               	goto	u109_21
  3363     0349  2B4B               	goto	u109_20
  3364     034A                     u109_21:
  3365     034A  2B90               	goto	i1l170
  3366     034B                     u109_20:
  3367     034B                     i1l1622:
  3368                           
  3369                           ;main.c: 433:     {;main.c: 434:         INTCON &= ~0x04;
  3370     034B  30FB               	movlw	251
  3371     034C  00F0               	movwf	??_ISR
  3372     034D  0870               	movf	??_ISR,w
  3373     034E  058B               	andwf	11,f	;volatile
  3374     034F                     i1l1624:
  3375                           
  3376                           ;main.c: 435:         TMR0 = 6;
  3377     034F  3006               	movlw	6
  3378     0350  0081               	movwf	1	;volatile
  3379     0351                     i1l1626:
  3380                           
  3381                           ;main.c: 437:         if(code_generate_send)
  3382     0351  0851               	movf	_code_generate_send,w
  3383     0352  1903               	btfsc	3,2
  3384     0353  2B55               	goto	u110_21
  3385     0354  2B56               	goto	u110_20
  3386     0355                     u110_21:
  3387     0355  2B90               	goto	i1l170
  3388     0356                     u110_20:
  3389     0356                     i1l1628:
  3390                           
  3391                           ;main.c: 438:         {;main.c: 440:             countOn++;
  3392     0356  3001               	movlw	1
  3393     0357  07F5               	addwf	_countOn,f
  3394     0358  1803               	skipnc
  3395     0359  0AF6               	incf	_countOn+1,f
  3396     035A  3000               	movlw	0
  3397     035B  07F6               	addwf	_countOn+1,f
  3398                           
  3399                           ;main.c: 441:             countSec++;
  3400     035C  3001               	movlw	1
  3401     035D  07CC               	addwf	_countSec,f
  3402     035E  1803               	skipnc
  3403     035F  0ACD               	incf	_countSec+1,f
  3404     0360  3000               	movlw	0
  3405     0361  07CD               	addwf	_countSec+1,f
  3406     0362                     i1l1630:
  3407                           
  3408                           ;main.c: 444:             if (countSec > 250)
  3409     0362  084D               	movf	_countSec+1,w
  3410     0363  3A80               	xorlw	128
  3411     0364  00FF               	movwf	btemp+1
  3412     0365  3080               	movlw	128
  3413     0366  027F               	subwf	btemp+1,w
  3414     0367  1D03               	skipz
  3415     0368  2B6B               	goto	u111_25
  3416     0369  30FB               	movlw	251
  3417     036A  024C               	subwf	_countSec,w
  3418     036B                     u111_25:
  3419     036B  1C03               	skipc
  3420     036C  2B6E               	goto	u111_21
  3421     036D  2B6F               	goto	u111_20
  3422     036E                     u111_21:
  3423     036E  2B79               	goto	i1l1636
  3424     036F                     u111_20:
  3425     036F                     i1l1632:
  3426                           
  3427                           ;main.c: 445:             {;main.c: 446:                 numSec--;
  3428     036F  30FF               	movlw	255
  3429     0370  1283               	bcf	3,5	;RP0=0, select bank0
  3430     0371  1303               	bcf	3,6	;RP1=0, select bank0
  3431     0372  07E3               	addwf	_numSec,f
  3432     0373  1803               	skipnc
  3433     0374  0AE4               	incf	_numSec+1,f
  3434     0375  30FF               	movlw	255
  3435     0376  07E4               	addwf	_numSec+1,f
  3436     0377                     i1l1634:
  3437                           
  3438                           ;main.c: 447:                 countSec = 0;
  3439     0377  01CC               	clrf	_countSec
  3440     0378  01CD               	clrf	_countSec+1
  3441     0379                     i1l1636:
  3442                           
  3443                           ;main.c: 451:             if (countOn >= 15000)
  3444     0379  0876               	movf	_countOn+1,w
  3445     037A  3A80               	xorlw	128
  3446     037B  00FF               	movwf	btemp+1
  3447     037C  30BA               	movlw	186
  3448     037D  027F               	subwf	btemp+1,w
  3449     037E  1D03               	skipz
  3450     037F  2B82               	goto	u112_25
  3451     0380  3098               	movlw	152
  3452     0381  0275               	subwf	_countOn,w
  3453     0382                     u112_25:
  3454     0382  1C03               	skipc
  3455     0383  2B85               	goto	u112_21
  3456     0384  2B86               	goto	u112_20
  3457     0385                     u112_21:
  3458     0385  2B90               	goto	i1l170
  3459     0386                     u112_20:
  3460     0386                     i1l1638:
  3461                           
  3462                           ;main.c: 452:             {;main.c: 453:                 stop_wait = 1;
  3463     0386  1283               	bcf	3,5	;RP0=0, select bank0
  3464     0387  1303               	bcf	3,6	;RP1=0, select bank0
  3465     0388  01D0               	clrf	_stop_wait
  3466     0389  0AD0               	incf	_stop_wait,f
  3467     038A                     i1l1640:
  3468                           
  3469                           ;main.c: 454:                 countOn = 0;
  3470     038A  01F5               	clrf	_countOn
  3471     038B  01F6               	clrf	_countOn+1
  3472     038C                     i1l1642:
  3473                           
  3474                           ;main.c: 455:                 numSec = 60;
  3475     038C  303C               	movlw	60
  3476     038D  00E3               	movwf	_numSec
  3477     038E  3000               	movlw	0
  3478     038F  00E4               	movwf	_numSec+1
  3479     0390                     i1l170:
  3480     0390  0874               	movf	??_ISR+4,w
  3481     0391  00FF               	movwf	btemp+1
  3482     0392  0873               	movf	??_ISR+3,w
  3483     0393  008A               	movwf	10
  3484     0394  0872               	movf	??_ISR+2,w
  3485     0395  0084               	movwf	4
  3486     0396  0E71               	swapf	??_ISR+1,w
  3487     0397  0083               	movwf	3
  3488     0398  0EFE               	swapf	btemp,f
  3489     0399  0E7E               	swapf	btemp,w
  3490     039A  0009               	retfie
  3491     039B                     __end_of_ISR:
  3492     007E                     btemp	set	126	;btemp
  3493     007E                     wtemp0	set	126
  3494                           
  3495                           	psect	intentry
  3496     0004                     __pintentry:	
  3497                           ;incstack = 0
  3498                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1]
  3499                           
  3500     0004                     interrupt_function:
  3501     007E                     saved_w	set	btemp
  3502     0004  00FE               	movwf	btemp
  3503     0005  0E03               	swapf	3,w
  3504     0006  00F1               	movwf	??_ISR+1
  3505     0007  0804               	movf	4,w
  3506     0008  00F2               	movwf	??_ISR+2
  3507     0009  080A               	movf	10,w
  3508     000A  00F3               	movwf	??_ISR+3
  3509     000B  087F               	movf	btemp+1,w
  3510     000C  00F4               	movwf	??_ISR+4
  3511     000D  120A  118A  2B2E   	ljmp	_ISR
  3512                           
  3513                           	psect	idloc
  3514                           
  3515                           ;Config register IDLOC0 @ 0x2000
  3516                           ;	unspecified, using default values
  3517     2000                     	org	8192
  3518     2000  3FFF               	dw	16383
  3519                           
  3520                           ;Config register IDLOC1 @ 0x2001
  3521                           ;	unspecified, using default values
  3522     2001                     	org	8193
  3523     2001  3FFF               	dw	16383
  3524                           
  3525                           ;Config register IDLOC2 @ 0x2002
  3526                           ;	unspecified, using default values
  3527     2002                     	org	8194
  3528     2002  3FFF               	dw	16383
  3529                           
  3530                           ;Config register IDLOC3 @ 0x2003
  3531                           ;	unspecified, using default values
  3532     2003                     	org	8195
  3533     2003  3FFF               	dw	16383
  3534                           
  3535                           	psect	config
  3536                           
  3537                           ;Config register CONFIG @ 0x2007
  3538                           ;	Oscillator Selection bits
  3539                           ;	FOSC = HS, HS oscillator
  3540                           ;	Watchdog Timer Enable bit
  3541                           ;	WDTE = OFF, WDT disabled
  3542                           ;	Power-up Timer Enable bit
  3543                           ;	PWRTE = ON, PWRT enabled
  3544                           ;	Brown-out Reset Enable bit
  3545                           ;	BOREN = ON, BOR enabled
  3546                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3547                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3548                           ;	Data EEPROM Memory Code Protection bit
  3549                           ;	CPD = OFF, Data EEPROM code protection off
  3550                           ;	Flash Program Memory Write Enable bits
  3551                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3552                           ;	In-Circuit Debugger Mode bit
  3553                           ;	DEBUG = 0x1, unprogrammed default
  3554                           ;	Flash Program Memory Code Protection bit
  3555                           ;	CP = OFF, Code protection off
  3556     2007                     	org	8199
  3557     2007  3F72               	dw	16242

Data Sizes:
    Strings     25
    Constant    82
    Data        6
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     44      69
    BANK1            80      0      50
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    UART_TxString@str	PTR const unsigned char  size(2) Largest target is 8
		 -> random_string@str(BANK0[8]), STR_3(CODE[8]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 11
		 -> random_string@str(BANK0[8]), STR_4(CODE[11]), buff(BANK0[2]), STR_2(CODE[6]), 
		 -> STR_1(CODE[11]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> buff(BANK0[2]), 

    sp__random_string	PTR unsigned char  size(1) Largest target is 8
		 -> random_string@str(BANK0[8]), 

    main@code	PTR unsigned char  size(1) Largest target is 8
		 -> random_string@str(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_itoa
    _random_string->___lwmod
    _rand->___lmul
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd
    _itoa->_utoa
    _utoa->___lwmod
    ___lwmod->_rand
    _UART_init->___aldiv
    _UART_TxString->_UART_TxChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5645
                                             41 BANK0      3     3      0
                      _UART_TxString
                          _UART_init
                         _initKeyPad
                               _itoa
                           _lcd_init
                           _lcd_send
                            _lcd_str
                      _random_string
 ---------------------------------------------------------------------------------
 (1) _random_string                                        5     5      0    1041
                                             26 BANK0      5     5      0
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     316
                                             13 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     611
                                              3 BANK0      4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send                                             4     3      1     512
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      31
                                              3 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2298
                                             35 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1849
                                             26 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                             20 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initKeyPad                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            8     4      4     746
                                             15 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        4     2      2     341
                                              2 BANK0      4     2      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TxString
     _UART_TxChar
   _UART_init
     ___aldiv
   _initKeyPad
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
         _rand (ARG)
           ___lmul
   _lcd_init
     _lcd_cmd
   _lcd_send
   _lcd_str
     _lcd_dat
   _random_string
     ___lwmod
     _rand

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      32       7       62.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      80      12        0.0%
ABS                  0      0      80       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 26 15:40:09 2023

                           _i 0077                             pc 0002                            fsr 0004  
                         l101 00DB                           l121 0687                           l130 05C5  
                         l124 03F6                           l133 05F2                           l109 01A4  
                         l118 0665                           l151 069C                           l160 061F  
                         l136 0698                           l321 01BC                           l145 0441  
                         l154 06A6                           l331 0244                           l148 055C  
                         l270 0489                           l710 0643                           l528 0516  
                         l538 0598                           l716 0318                           l718 032D  
                         l726 04D0                           _ISR 032E         __end_of_random_string 0442  
                         fsr0 0004                           indf 0000                          ?_ISR 0070  
                        l2000 0124                          l2010 0144                          l2002 012F  
                        l2020 0161                          l2004 013A                          l2012 014D  
                        l2030 018D                          l2022 0164                          l2014 0151  
                        l2006 013D                          l2032 0194                          l2024 0172  
                        l2008 0141                          l2016 0157                          l2034 019F  
                        l2026 017B                          l2018 015C                          l2036 01A2  
                        l2028 0186                          l1700 058E                          l1702 0594  
                        l1710 064A                          l1800 031C                          l1720 066C  
                        l1712 0655                          l1810 0517                          l1802 0321  
                        l1722 0677                          l1714 0662                          l1706 0647  
                        l1650 0467                          l1730 04B9                          l1740 01A8  
                        l1820 0559                          l1812 051F                          l1660 04D5  
                        l1804 0323                          l1724 0684                          l1716 0669  
                        l1708 0648                          l1652 0470                          l1644 0442  
                        l1900 0439                          l1734 069C                          l1910 05F7  
                        l1750 01CF                          l1742 01AB                          l1822 055A  
                        l1814 0528                          l1670 04ED                          l1662 04DB  
                        l1806 0329                          l1718 066A                          l1830 03A2  
                        l1654 0481                          l1646 044C                          l1726 048A  
                        l1902 043F                          l1736 06A0                          l1912 0608  
                        l1760 01F3                          l1752 01D7                          l1744 01AF  
                        l1824 055B                          l1816 052B                          l1672 04FE  
                        l1664 04DE                          l1680 0512                          l1920 0627  
                        l1840 03C1                          l1832 03A3                          l1648 0450  
                        l1728 04AB                          l1904 0440                          l1738 06A4  
                        l1914 060E                          l1770 0226                          l1762 01FC  
                        l1754 01DF                          l1746 01C0                          l1818 052C  
                        l1674 0504                          l1666 04E5                          l1658 04D1  
                        l1690 056F                          l1922 062C                          l1850 03E4  
                        l1842 03C7                          l1834 03AD                          l1826 039B  
                        l1930 0050                          l1908 05F3                          l1764 020E  
                        l1756 01E2                          l1772 022C                          l1748 01CB  
                        l1676 0505                          l1668 04E9                          l1692 0573  
                        l1684 055D                          l1780 02C3                          l1924 0630  
                        l1916 0623                          l1852 03EA                          l1844 03D2  
                        l1836 03B0                          l1828 039F                          l1860 05CC  
                        l1940 006E                          l1932 0053                          l1774 0231  
                        l1766 021C                          l1758 01EF                          l1678 050C  
                        l1694 0577                          l1686 0565                          l1790 02E8  
                        l1782 02C7                          l1926 0635                          l1918 0623  
                        l1854 03F0                          l1846 03D8                          l1838 03B6  
                        l1870 05D8                          l1862 05CD                          l1950 008F  
                        l1942 0073                          l1934 0059                          l1776 023C  
                        l1768 021D                          l1856 0688                          l1696 0581  
                        l1688 0568                          l1792 02EA                          l1784 02DA  
                        l1848 03DE                          l1872 05E2                          l1864 05CE  
                        l1880 059D                          l1960 0099                          l1952 0091  
                        l1944 0078                          l1936 005D                          l1698 0587  
                        l1794 02FB                          l1786 02DE                          l1874 05E5  
                        l1866 05D1                          l1858 05C9                          l1882 05AE  
                        l1970 00A7                          l1962 009C                          l1954 0098  
                        l1946 0081                          l1938 0061                          l1796 030E  
                        l1788 02E4                          l1876 05EF                          l1868 05D3  
                        l1884 05B4                          l1892 03FB                          l1980 00DF  
                        l1972 00B4                          l1964 00A6                          l1948 008C  
                        l1798 0314                          l1878 0599                          l1894 0417  
                        l1886 03F7                          l1990 00FF                          l1982 00E5  
                        l1974 00BF                          l1896 0426                          l1992 0108  
                        l1984 00EA                          l1976 00CE                          l1898 042C  
                        l1994 0113                          l1986 00F0                          l1978 00D9  
                        l1988 00F7                          l1996 0117                          l1998 011D  
                        STR_1 02A7                          STR_2 02BA                          STR_3 02B2  
                        STR_4 02A7                          u1200 04ED                          u1201 04EC  
                        u1130 0450                          u1131 044F                          u1220 04FE  
                        u1300 0594                          u1221 04FD                          u1301 0593  
                        u1141 0459                          u1142 0460                          u1310 04C8  
                        u1215 04EE                          u1143 0467                          u1320 06A0  
                        u1240 0512                          u1321 069F                          u1241 0511  
                        u1225 04FA                          u1410 022C                          u1330 01AF  
                        u1250 0565                          u1170 0481                          u1411 022B  
                        u1331 01AE                          u1235 0506                          u1251 0564  
                        u1171 0480                          u1155 0469                          u1315 04C3  
                        u1420 0231                          u1340 01C0                          u1180 04DB  
                        u1500 0627                          u1421 0230                          u1405 021E  
                        u1341 01BF                          u1181 04DA                          u1501 0626  
                        u1165 0471                          u1350 01DF                          u1270 0577  
                        u1430 02E4                          u1510 0098                          u1351 01DE  
                        u1271 0576                          u1431 02E3                          u1511 0097  
                        u1280 0581                          u1440 0314                          u1600 0157  
                        u1520 00B4                          u1281 0580                          u1265 0569  
                        u1441 0313                          u1601 0156                          u1521 00B3  
                        u1370 01F3                          u1450 0329                          u1610 015C  
                        u1530 00CE                          u1371 01F2                          u1195 04DF  
                        u1451 0328                          u1611 015B                          u1531 00CD  
                        u1460 053A                          u1620 0161                          u1365 01E4  
                        u1285 057D                          u1621 0160                          u1390 020E  
                        u1470 05C5                          u1630 018D                          u1550 00E5  
                        u1391 020D                          u1295 0588                          u1471 05C4  
                        u1631 018C                          u1551 00E4                          u1480 0439  
                        u1560 00EA                          u1385 01F5                          u1465 0535  
                        u1481 0438                          u1561 00E9                          u1545 00D1  
                        u1490 061F                          u1570 00F0                          u1491 061E  
                        u1395 020A                          u1707 03BC                          u1571 00EF  
                        u1580 011D                          u1717 03CD                          u1485 0435  
                        u1581 011C                          u1590 014D                          u1727 0673  
                        u1591 014C                          u1647 00BA                          _PIE1 008C  
                        u1737 0680                          u1657 0651                          u1667 065E  
                        u1677 05DE                          u1687 05EB                          u1697 03A9  
                        _RCIF 0065                          _PIR1 000C                          _TMR0 0001  
                        _dato 00A0                          _buff 005D                          _main 0050  
                        _keys 0294                          _rand 048A                          _itoa 0620  
                        btemp 007E                          _utoa 02C0                          start 0010  
                       ??_ISR 0070                  lcd_send@dato 0023                  lcd_send@tipo 0020  
             __end_of___aldiv 0245                         ?_main 0070                         ?_rand 002D  
                       ?_itoa 0043                         ?_utoa 003A               __end_of___lwdiv 0517  
                       i1l170 0390               __end_of___lwmod 0599                         _RCREG 001A  
                       _RCSTA 0018                         _SPBRG 0099                         _PORTB 0006  
                       _PORTD 0008                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
                       _TXSTA 0098               __end_of_colMask 02A7           ___lmul@multiplicand 0024  
             __end_of_lcd_dat 0666               __end_of_lcd_cmd 0688               __end_of_lcd_str 05C6  
                       _keyok 0053                         _randx 005F                         pclath 000A  
             __end_of_rowMask 02A4                         utoa@c 0041                         utoa@v 003F  
                       status 0003                         wtemp0 007E              random_string@str 0055  
             __initialization 0013                  __end_of_main 01A8                  __end_of_keys 02A0  
                __end_of_rand 04D1                  __end_of_itoa 0644                  __end_of_utoa 032E  
                      ??_main 0049                        ??_rand 002F                        ??_itoa 0047  
                      ??_utoa 003E                        u110_20 0356                        u110_21 0355  
                      u111_20 036F                        u111_21 036E                        u111_25 036B  
                      u112_20 0386                        u112_21 0385                        i1l1610 0334  
                      i1l1612 033A                        i1l1620 0347                        u112_25 0382  
                      i1l1630 0362                        i1l1622 034B                        i1l1614 0340  
                      i1l1640 038A                        i1l1632 036F                        i1l1624 034F  
                      i1l1616 0344                        i1l1608 032E                        i1l1642 038C  
                      i1l1634 0377                        i1l1626 0351                        i1l1618 0346  
                      i1l1636 0379                        i1l1628 0356                        i1l1638 0386  
                      u108_20 0334                        u108_21 0333                        u109_20 034B  
                      u109_21 034A                        _INTCON 000B                  ?_UART_TxChar 0070  
            __end_of_lcd_init 03F7              __end_of_lcd_send 05F3                        ___lmul 0442  
                   ??___aldiv 0028             __end_of_UART_init 055D                     ??___lwdiv 0024  
                   ??___lwmod 0038                        _numSec 0063                     ??_lcd_dat 0020  
                   ??_lcd_cmd 0020                     ??_lcd_str 0025                        saved_w 007E  
     __end_of__initialization 004C         __end_of_UART_TxString 0620                __pcstackCOMMON 0070  
                __pidataBANK0 06AF                    __pbssBANK0 004C                    __pbssBANK1 00A0  
                  __pmaintext 0050                       ?___lmul 0020                    __pintentry 0004  
              ___lmul@product 0029                     ?_lcd_init 0070                     ?_lcd_send 0020  
                  __stringtab 0245                    _initKeyPad 0688                       ___aldiv 01A8  
                     ___lwdiv 04D1                       ___lwmod 055D                       _colMask 02A4  
                     _colScan 004F                       __ptext1 03F7                       __ptext2 048A  
                     __ptext3 0442                       __ptext4 0599                       __ptext5 0644  
                     __ptext6 05C6                       __ptext7 039B                       __ptext8 0666  
                     __ptext9 0620                       _lcd_dat 0644                       _lcd_cmd 0666  
                     _lcd_str 0599                       _countOn 0075              ___aldiv@dividend 0024  
                  _keypressed 0054                       _rowMask 02A0                       _rowScan 004E  
                     clrloop0 06A8                    ??_lcd_init 0023                    ??_lcd_send 0021  
        end_of_initialization 004C                       itoa@buf 0048                       itoa@val 0043  
              UART_TxString@i 0025              ___aldiv@quotient 002B                       utoa@buf 0042  
                     utoa@val 003A            random_string@index 003B                     _UART_init 0517  
                   _PORTEbits 0009                 _random_string 03F7                     _TRISEbits 0089  
                  lcd_dat@val 0022                    lcd_cmd@val 0022                    lcd_str@str 0023  
              random_string@i 003D                   ?_initKeyPad 0070                __end_of___lmul 048A  
                  ?_UART_init 002F                ?_random_string 0070           start_initialization 0013  
                 __end_of_ISR 039B                      ??___lmul 0028                   __pdataBANK0 005F  
                 __pbssCOMMON 0075                     ___latbits 0002                 __pcstackBANK0 0020  
            ___lwdiv@dividend 0022                      ?___aldiv 0020                      ?___lwdiv 0020  
                    ?___lwmod 0034                     __pstrings 0245                   ??_UART_init 0033  
                    ?_lcd_dat 0070               ??_random_string 003A                      ?_lcd_cmd 0070  
                    ?_lcd_str 0023                 UART_TxChar@ch 0021              ___lwdiv@quotient 0026  
             ___aldiv@divisor 0020             interrupt_function 0004               ___aldiv@counter 0029  
                   clear_ram0 06A7                 ??_UART_TxChar 0020                 _UART_TxString 05F3  
__end_ofrandom_string@charset 0294                   __stringbase 0254                     _stop_wait 0050  
           ___lmul@multiplier 0020                ?_UART_TxString 0022                  ??_initKeyPad 0020  
         __end_of_UART_TxChar 06A7            __end_of__stringtab 0255               ___lwdiv@divisor 0020  
             ___lwdiv@counter 0025                      __ptext10 02C0                      __ptext11 055D  
                    __ptext12 04D1                      __ptext13 0688                      __ptext14 0517  
                    __ptext15 01A8                      __ptext16 05F3                      __ptext17 0699  
                    __ptext18 032E                      _lcd_init 039B              UART_TxString@str 0022  
                    _lcd_send 05C6            __end_of_initKeyPad 0699                      _countSec 004C  
          _code_generate_send 0051                      _received 0052                      main@code 004B  
                    lcd_str@i 0026                      itoa@base 0045          random_string@charset 0255  
                    intlevel1 0000             UART_init@baudrate 002F              ___lwmod@dividend 0036  
             ??_UART_TxString 0024                     stringcode 024F                   _UART_TxChar 0699  
                    utoa@base 003C                    _OPTION_REG 0081               ___lwmod@divisor 0034  
             ___lwmod@counter 0039                      stringdir 024F                      stringtab 0245  
                ___aldiv@sign 002A  
