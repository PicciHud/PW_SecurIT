

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat May 06 18:04:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0088                     	;# 
   161     0089                     	;# 
   162     008C                     	;# 
   163     008D                     	;# 
   164     008E                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     009F                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181                           
   182                           	psect	idataBANK0
   183     0548                     __pidataBANK0:
   184                           
   185                           ;initializer for _randx
   186     0548  3401               	retlw	1
   187     0549  3400               	retlw	0
   188     054A  3400               	retlw	0
   189     054B  3400               	retlw	0
   190                           
   191                           	psect	strings
   192     0003                     __pstrings:
   193     0003                     stringtab:
   194     0003                     __stringtab:
   195                           
   196                           ;	String table - string pointers are 1 byte each
   197     0003  1BFF               	btfsc	btemp+1,7
   198     0004  280D               	ljmp	stringcode
   199     0005  1383               	bcf	3,7
   200     0006  187F               	btfsc	btemp+1,0
   201     0007  1783               	bsf	3,7
   202     0008  0800               	movf	0,w
   203     0009  0A84               	incf	4,f
   204     000A  1903               	skipnz
   205     000B  0AFF               	incf	btemp+1,f
   206     000C  0008               	return
   207     000D                     stringcode:
   208     000D                     stringdir:
   209     000D  3000               	movlw	high stringdir
   210     000E  008A               	movwf	10
   211     000F  0804               	movf	4,w
   212     0010  0A84               	incf	4,f
   213     0011  0782               	addwf	2,f
   214     0012                     __stringbase:
   215     0012  3400               	retlw	0
   216     0013                     __end_of__stringtab:
   217     0013                     random_string@charset:
   218     0013  3461               	retlw	97
   219     0014  3462               	retlw	98
   220     0015  3463               	retlw	99
   221     0016  3464               	retlw	100
   222     0017  3465               	retlw	101
   223     0018  3466               	retlw	102
   224     0019  3467               	retlw	103
   225     001A  3468               	retlw	104
   226     001B  3469               	retlw	105
   227     001C  346A               	retlw	106
   228     001D  346B               	retlw	107
   229     001E  346C               	retlw	108
   230     001F  346D               	retlw	109
   231     0020  346E               	retlw	110
   232     0021  346F               	retlw	111
   233     0022  3470               	retlw	112
   234     0023  3471               	retlw	113
   235     0024  3472               	retlw	114
   236     0025  3473               	retlw	115
   237     0026  3474               	retlw	116
   238     0027  3475               	retlw	117
   239     0028  3476               	retlw	118
   240     0029  3477               	retlw	119
   241     002A  3478               	retlw	120
   242     002B  3479               	retlw	121
   243     002C  347A               	retlw	122
   244     002D  3441               	retlw	65
   245     002E  3442               	retlw	66
   246     002F  3443               	retlw	67
   247     0030  3444               	retlw	68
   248     0031  3445               	retlw	69
   249     0032  3446               	retlw	70
   250     0033  3447               	retlw	71
   251     0034  3448               	retlw	72
   252     0035  3449               	retlw	73
   253     0036  344A               	retlw	74
   254     0037  344B               	retlw	75
   255     0038  344C               	retlw	76
   256     0039  344D               	retlw	77
   257     003A  344E               	retlw	78
   258     003B  344F               	retlw	79
   259     003C  3450               	retlw	80
   260     003D  3451               	retlw	81
   261     003E  3452               	retlw	82
   262     003F  3453               	retlw	83
   263     0040  3454               	retlw	84
   264     0041  3455               	retlw	85
   265     0042  3456               	retlw	86
   266     0043  3457               	retlw	87
   267     0044  3458               	retlw	88
   268     0045  3459               	retlw	89
   269     0046  345A               	retlw	90
   270     0047  3430               	retlw	48
   271     0048  3431               	retlw	49
   272     0049  3432               	retlw	50
   273     004A  3433               	retlw	51
   274     004B  3434               	retlw	52
   275     004C  3435               	retlw	53
   276     004D  3436               	retlw	54
   277     004E  3437               	retlw	55
   278     004F  3438               	retlw	56
   279     0050  3439               	retlw	57
   280     0051  3400               	retlw	0
   281     0052                     __end_ofrandom_string@charset:
   282     0052                     _keys:
   283     0052  342A               	retlw	42
   284     0053  3407               	retlw	7
   285     0054  3404               	retlw	4
   286     0055  3401               	retlw	1
   287     0056  3400               	retlw	0
   288     0057  3408               	retlw	8
   289     0058  3405               	retlw	5
   290     0059  3402               	retlw	2
   291     005A  3423               	retlw	35
   292     005B  3409               	retlw	9
   293     005C  3406               	retlw	6
   294     005D  3403               	retlw	3
   295     005E                     __end_of_keys:
   296     005E                     _rowMask:
   297     005E  3401               	retlw	1
   298     005F  3402               	retlw	2
   299     0060  3404               	retlw	4
   300     0061  3408               	retlw	8
   301     0062                     __end_of_rowMask:
   302     0062                     _colMask:
   303     0062  34FE               	retlw	254
   304     0063  34FD               	retlw	253
   305     0064  34FB               	retlw	251
   306     0065                     __end_of_colMask:
   307     0009                     _PORTEbits	set	9
   308     0008                     _PORTD	set	8
   309     0006                     _PORTB	set	6
   310     0001                     _TMR0	set	1
   311     000B                     _INTCON	set	11
   312     0089                     _TRISEbits	set	137
   313     0089                     _TRISE	set	137
   314     0088                     _TRISD	set	136
   315     0081                     _OPTION_REG	set	129
   316     0086                     _TRISB	set	134
   317     0065                     STR_1:
   318     0065  3477               	retlw	119	;'w'
   319     0066  3461               	retlw	97	;'a'
   320     0067  3469               	retlw	105	;'i'
   321     0068  3474               	retlw	116	;'t'
   322     0069  3469               	retlw	105	;'i'
   323     006A  346E               	retlw	110	;'n'
   324     006B  3467               	retlw	103	;'g'
   325     006C  342E               	retlw	46	;'.'
   326     006D  342E               	retlw	46	;'.'
   327     006E  342E               	retlw	46	;'.'
   328     006F  3400               	retlw	0
   329     0070                     STR_2:
   330     0070  3432               	retlw	50	;'2'
   331     0071  3438               	retlw	56	;'8'
   332     0072  3437               	retlw	55	;'7'
   333     0073  3435               	retlw	53	;'5'
   334     0074  3433               	retlw	51	;'3'
   335     0075  3400               	retlw	0
   336                           
   337                           	psect	cinit
   338     07DC                     start_initialization:	
   339                           ; #config settings
   340                           
   341     07DC                     __initialization:
   342                           
   343                           ; Initialize objects allocated to BANK0
   344     07DC  120A  118A  2548  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   345     07E1  00BE               	movwf	__pdataBANK0& (0+127)
   346     07E2  120A  118A  2549  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   347     07E7  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   348     07E8  120A  118A  254A  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   349     07ED  00C0               	movwf	(__pdataBANK0+2)& (0+127)
   350     07EE  120A  118A  254B   	fcall	__pidataBANK0+3	;fetch initializer
   351     07F1  00C1               	movwf	(__pdataBANK0+3)& (0+127)
   352                           
   353                           ; Clear objects allocated to BANK0
   354     07F2  01B4               	clrf	__pbssBANK0& (0+127)
   355     07F3  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   356     07F4  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   357     07F5  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   358     07F6  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   359     07F7  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   360     07F8  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   361     07F9  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   362     07FA  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   363     07FB  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   364     07FC                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367     07FC                     __end_of__initialization:
   368     07FC  0183               	clrf	3
   369     07FD  120A  118A  2F24   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssBANK0
   372     0034                     __pbssBANK0:
   373     0034                     _rowScan:
   374     0034                     	ds	1
   375     0035                     _colScan:
   376     0035                     	ds	1
   377     0036                     _keyok:
   378     0036                     	ds	1
   379     0037                     _keypressed:
   380     0037                     	ds	1
   381     0038                     random_string@str:
   382     0038                     	ds	6
   383                           
   384                           	psect	dataBANK0
   385     003E                     __pdataBANK0:
   386     003E                     _randx:
   387     003E                     	ds	4
   388                           
   389                           	psect	cstackCOMMON
   390     0070                     __pcstackCOMMON:
   391     0070                     ?_lcd_init:
   392     0070                     ?_initKeyPad:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ??_initKeyPad:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_lcd_send:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_random_string:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_lcd_dat:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ??_lcd_dat:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_lcd_cmd:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ??_lcd_cmd:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?___lmul:	
   420                           ; 2 bytes @ 0x0
   421                           
   422     0070                     lcd_send@tipo:	
   423                           ; 4 bytes @ 0x0
   424                           
   425     0070                     ___lmul@multiplier:	
   426                           ; 1 bytes @ 0x0
   427                           
   428                           
   429                           ; 4 bytes @ 0x0
   430     0070                     	ds	1
   431     0071                     ??_lcd_send:
   432                           
   433                           ; 1 bytes @ 0x1
   434     0071                     	ds	1
   435     0072                     lcd_dat@val:
   436     0072                     lcd_cmd@val:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 1 bytes @ 0x2
   441     0072                     	ds	1
   442     0073                     ??_lcd_init:
   443     0073                     ?_lcd_str:	
   444                           ; 1 bytes @ 0x3
   445                           
   446     0073                     lcd_send@dato:	
   447                           ; 1 bytes @ 0x3
   448                           
   449     0073                     lcd_str@str:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 2 bytes @ 0x3
   454     0073                     	ds	1
   455     0074                     ___lmul@multiplicand:
   456                           
   457                           ; 4 bytes @ 0x4
   458     0074                     	ds	1
   459     0075                     ??_lcd_str:
   460                           
   461                           ; 1 bytes @ 0x5
   462     0075                     	ds	1
   463     0076                     lcd_str@i:
   464                           
   465                           ; 1 bytes @ 0x6
   466     0076                     	ds	2
   467     0078                     ??___lmul:
   468                           
   469                           ; 1 bytes @ 0x8
   470     0078                     	ds	1
   471     0079                     ___lmul@product:
   472                           
   473                           ; 4 bytes @ 0x9
   474     0079                     	ds	4
   475     007D                     ??___lwmod:
   476                           
   477                           ; 1 bytes @ 0xD
   478     007D                     	ds	1
   479                           
   480                           	psect	cstackBANK0
   481     0020                     __pcstackBANK0:
   482     0020                     ?_rand:
   483                           
   484                           ; 2 bytes @ 0x0
   485     0020                     	ds	2
   486     0022                     ??_rand:
   487                           
   488                           ; 1 bytes @ 0x2
   489     0022                     	ds	5
   490     0027                     ?___lwmod:
   491     0027                     ___lwmod@divisor:	
   492                           ; 2 bytes @ 0x7
   493                           
   494                           
   495                           ; 2 bytes @ 0x7
   496     0027                     	ds	2
   497     0029                     ___lwmod@dividend:
   498                           
   499                           ; 2 bytes @ 0x9
   500     0029                     	ds	2
   501     002B                     ___lwmod@counter:
   502                           
   503                           ; 1 bytes @ 0xB
   504     002B                     	ds	1
   505     002C                     ??_random_string:
   506                           
   507                           ; 1 bytes @ 0xC
   508     002C                     	ds	1
   509     002D                     random_string@index:
   510                           
   511                           ; 2 bytes @ 0xD
   512     002D                     	ds	2
   513     002F                     random_string@i:
   514                           
   515                           ; 2 bytes @ 0xF
   516     002F                     	ds	2
   517     0031                     ??_main:
   518                           
   519                           ; 1 bytes @ 0x11
   520     0031                     	ds	2
   521     0033                     main@code:
   522                           
   523                           ; 1 bytes @ 0x13
   524     0033                     	ds	1
   525                           
   526                           	psect	maintext
   527     0724                     __pmaintext:	
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 109 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  code            1   19[BANK0 ] PTR unsigned char 
   538 ;;		 -> random_string@str(6), 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  2   52[None  ] int 
   541 ;; Registers used:
   542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : B00/0
   545 ;;		On exit  : 300/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       1       0       0       0
   550 ;;      Temps:          0       2       0       0       0
   551 ;;      Totals:         0       3       0       0       0
   552 ;;Total ram usage:        3 bytes
   553 ;; Hardware stack levels required when called: 3
   554 ;; This function calls:
   555 ;;		_initKeyPad
   556 ;;		_lcd_init
   557 ;;		_lcd_send
   558 ;;		_lcd_str
   559 ;;		_random_string
   560 ;; This function is called by:
   561 ;;		Startup code after reset
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565     0724                     _main:	
   566                           ;psect for function _main
   567                           
   568                           
   569                           ;main.c: 112:     TRISB = 0x00;
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   573     0724  1683               	bsf	3,5	;RP0=1, select bank1
   574     0725  0186               	clrf	6	;volatile
   575                           
   576                           ;main.c: 113:     INTCON |= 0xA0;
   577     0726  30A0               	movlw	160
   578     0727  1283               	bcf	3,5	;RP0=0, select bank0
   579     0728  00B1               	movwf	??_main
   580     0729  0831               	movf	??_main,w
   581     072A  048B               	iorwf	11,f	;volatile
   582                           
   583                           ;main.c: 114:     OPTION_REG = 0x05;
   584     072B  3005               	movlw	5
   585     072C  1683               	bsf	3,5	;RP0=1, select bank1
   586     072D  0081               	movwf	1	;volatile
   587                           
   588                           ;main.c: 115:     TMR0 = 6;
   589     072E  3006               	movlw	6
   590     072F  1283               	bcf	3,5	;RP0=0, select bank0
   591     0730  0081               	movwf	1	;volatile
   592                           
   593                           ;main.c: 118:     lcd_init();
   594     0731  120A  118A  26D4  120A  118A  	fcall	_lcd_init
   595                           
   596                           ;main.c: 119:     initKeyPad();
   597     0736  120A  118A  254C  120A  118A  	fcall	_initKeyPad
   598                           
   599                           ;main.c: 121:     lcd_send(0x01, 0);
   600     073B  01F0               	clrf	lcd_send@tipo
   601     073C  3001               	movlw	1
   602     073D  120A  118A  25BA  120A  118A  	fcall	_lcd_send
   603                           
   604                           ;main.c: 122:     lcd_str("waiting...");
   605     0742  3053               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   606     0743  00F3               	movwf	lcd_str@str
   607     0744  3080               	movlw	128
   608     0745  00F4               	movwf	lcd_str@str+1
   609     0746  120A  118A  2594  120A  118A  	fcall	_lcd_str
   610     074B                     l1078:
   611                           
   612                           ;main.c: 126:     {;main.c: 127:         TRISB = 0x00;
   613     074B  1683               	bsf	3,5	;RP0=1, select bank1
   614     074C  0186               	clrf	6	;volatile
   615                           
   616                           ;main.c: 128:         TRISD = 0x0F;
   617     074D  300F               	movlw	15
   618     074E  0088               	movwf	8	;volatile
   619                           
   620                           ;main.c: 132:         for (colScan = 0; colScan < 3; colScan++)
   621     074F  1283               	bcf	3,5	;RP0=0, select bank0
   622     0750  01B5               	clrf	_colScan
   623     0751                     l1088:
   624                           
   625                           ;main.c: 133:         {;main.c: 135:             PORTB = PORTB | 0x07;
   626     0751  0806               	movf	6,w	;volatile
   627     0752  3807               	iorlw	7
   628     0753  0086               	movwf	6	;volatile
   629                           
   630                           ;main.c: 136:             PORTB = PORTB & colMask[colScan];
   631     0754  0835               	movf	_colScan,w
   632     0755  3E50               	addlw	low ((_colMask-__stringbase)| (0+32768))
   633     0756  0084               	movwf	4
   634     0757  120A  118A  200D  120A  118A  	fcall	stringdir
   635     075C  0506               	andwf	6,w	;volatile
   636     075D  0086               	movwf	6	;volatile
   637                           
   638                           ;main.c: 138:             for (rowScan = 0; rowScan < 4; rowScan++)
   639     075E  01B4               	clrf	_rowScan
   640     075F                     l1098:
   641                           
   642                           ;main.c: 139:             {;main.c: 140:                 if (!(PORTD & rowMask[rowScan])
      +                          )
   643     075F  0834               	movf	_rowScan,w
   644     0760  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   645     0761  0084               	movwf	4
   646     0762  120A  118A  200D  120A  118A  	fcall	stringdir
   647     0767  0508               	andwf	8,w	;volatile
   648     0768  1D03               	btfss	3,2
   649     0769  2F8F               	goto	l58
   650                           
   651                           ;main.c: 141:                 {;main.c: 142:                     _delay((unsigned long)(
      +                          (5)*(4000000/4000.0)));
   652     076A  3007               	movlw	7
   653     076B  1283               	bcf	3,5	;RP0=0, select bank0
   654     076C  1303               	bcf	3,6	;RP1=0, select bank0
   655     076D  00B2               	movwf	??_main+1
   656     076E  307C               	movlw	124
   657     076F  00B1               	movwf	??_main
   658     0770                     u477:
   659     0770  0BB1               	decfsz	??_main,f
   660     0771  2F70               	goto	u477
   661     0772  0BB2               	decfsz	??_main+1,f
   662     0773  2F70               	goto	u477
   663     0774  0000               	nop
   664                           
   665                           ;main.c: 144:                     if (!(PORTD & rowMask[rowScan]))
   666     0775  1283               	bcf	3,5	;RP0=0, select bank0
   667     0776  1303               	bcf	3,6	;RP1=0, select bank0
   668     0777  0834               	movf	_rowScan,w
   669     0778  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   670     0779  0084               	movwf	4
   671     077A  120A  118A  200D  120A  118A  	fcall	stringdir
   672     077F  0508               	andwf	8,w	;volatile
   673     0780  1D03               	btfss	3,2
   674     0781  2F8F               	goto	l58
   675                           
   676                           ;main.c: 145:                     {;main.c: 147:                         keypressed = ro
      +                          wScan + (4 * colScan);
   677     0782  0835               	movf	_colScan,w
   678     0783  00B1               	movwf	??_main
   679     0784  3002               	movlw	2
   680     0785                     u405:
   681     0785  1003               	clrc
   682     0786  0DB1               	rlf	??_main,f
   683     0787  3EFF               	addlw	-1
   684     0788  1D03               	skipz
   685     0789  2F85               	goto	u405
   686     078A  0834               	movf	_rowScan,w
   687     078B  0731               	addwf	??_main,w
   688     078C  00B7               	movwf	_keypressed
   689                           
   690                           ;main.c: 148:                         keyok = 1;
   691     078D  01B6               	clrf	_keyok
   692     078E  0AB6               	incf	_keyok,f
   693     078F                     l58:	
   694                           ;main.c: 150:                 }
   695                           
   696                           
   697                           ;main.c: 151:             }
   698     078F  3001               	movlw	1
   699     0790  00B1               	movwf	??_main
   700     0791  0831               	movf	??_main,w
   701     0792  07B4               	addwf	_rowScan,f
   702     0793  3004               	movlw	4
   703     0794  0234               	subwf	_rowScan,w
   704     0795  1C03               	skipc
   705     0796  2F5F               	goto	l1098
   706                           
   707                           ;main.c: 153:             if (keyok)
   708     0797  0836               	movf	_keyok,w
   709     0798  1903               	btfsc	3,2
   710     0799  2FD3               	goto	l1134
   711                           
   712                           ;main.c: 154:             {;main.c: 156:                 if(keypressed == 8)
   713     079A  3008               	movlw	8
   714     079B  0637               	xorwf	_keypressed,w
   715     079C  1D03               	btfss	3,2
   716     079D  2FB4               	goto	l1120
   717                           
   718                           ;main.c: 157:                 {;main.c: 159:                     lcd_send(0x01, 0);
   719     079E  01F0               	clrf	lcd_send@tipo
   720     079F  3001               	movlw	1
   721     07A0  120A  118A  25BA  120A  118A  	fcall	_lcd_send
   722                           
   723                           ;main.c: 161:                     char* code = random_string();
   724     07A5  120A  118A  2652  120A  118A  	fcall	_random_string
   725     07AA  00B3               	movwf	main@code
   726                           
   727                           ;main.c: 162:                     lcd_str(code);
   728     07AB  0833               	movf	main@code,w
   729     07AC  00F3               	movwf	lcd_str@str
   730     07AD  3000               	movlw	0
   731     07AE  00F4               	movwf	lcd_str@str+1
   732     07AF  120A  118A  2594  120A  118A  	fcall	_lcd_str
   733     07B4                     l1120:
   734                           
   735                           ;main.c: 168:                 if (keypressed == 7)
   736     07B4  3007               	movlw	7
   737     07B5  0637               	xorwf	_keypressed,w
   738     07B6  1D03               	btfss	3,2
   739     07B7  2FC8               	goto	l1126
   740                           
   741                           ;main.c: 169:                 {;main.c: 170:                     lcd_send(0x01, 0);
   742     07B8  01F0               	clrf	lcd_send@tipo
   743     07B9  3001               	movlw	1
   744     07BA  120A  118A  25BA  120A  118A  	fcall	_lcd_send
   745                           
   746                           ;main.c: 171:                     lcd_str("28753");
   747     07BF  305E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   748     07C0  00F3               	movwf	lcd_str@str
   749     07C1  3080               	movlw	128
   750     07C2  00F4               	movwf	lcd_str@str+1
   751     07C3  120A  118A  2594  120A  118A  	fcall	_lcd_str
   752     07C8                     l1126:
   753                           
   754                           ;main.c: 174:                 keyok = 0;
   755     07C8  01B6               	clrf	_keyok
   756     07C9                     l1130:	
   757                           ;main.c: 178:                 while ((PORTD & 0x0F) != 0x0F)
   758                           
   759                           ;main.c: 177:                 PORTD = PORTD | 0x0F;
   760                           
   761                           
   762                           ;main.c: 179:                 {;main.c: 180:                     PORTD = PORTD | 0x0F;
   763     07C9  0808               	movf	8,w	;volatile
   764     07CA  380F               	iorlw	15
   765     07CB  0088               	movwf	8	;volatile
   766                           
   767                           ;main.c: 178:                 while ((PORTD & 0x0F) != 0x0F)
   768                           
   769                           ;main.c: 181:                     continue;
   770     07CC  300F               	movlw	15
   771     07CD  0508               	andwf	8,w	;volatile
   772     07CE  00B1               	movwf	??_main
   773     07CF  300F               	movlw	15
   774     07D0  0631               	xorwf	??_main,w
   775     07D1  1D03               	btfss	3,2
   776     07D2  2FC9               	goto	l1130
   777     07D3                     l1134:
   778                           
   779                           ;main.c: 186:         }
   780     07D3  3001               	movlw	1
   781     07D4  00B1               	movwf	??_main
   782     07D5  0831               	movf	??_main,w
   783     07D6  07B5               	addwf	_colScan,f
   784     07D7  3003               	movlw	3
   785     07D8  0235               	subwf	_colScan,w
   786     07D9  1803               	btfsc	3,0
   787     07DA  2F4B               	goto	l1078
   788     07DB  2F51               	goto	l1088
   789     07DC                     __end_of_main:
   790                           
   791                           	psect	text1
   792     0652                     __ptext1:	
   793 ;; *************** function _random_string *****************
   794 ;; Defined at:
   795 ;;		line 283 in file "main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  index           2   13[BANK0 ] int 
   800 ;;  i               2   15[BANK0 ] int 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      PTR unsigned char 
   803 ;; Registers used:
   804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 300/0
   807 ;;		On exit  : 300/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         0       4       0       0       0
   812 ;;      Temps:          0       1       0       0       0
   813 ;;      Totals:         0       5       0       0       0
   814 ;;Total ram usage:        5 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 2
   817 ;; This function calls:
   818 ;;		___lwmod
   819 ;;		_rand
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825     0652                     _random_string:	
   826                           ;psect for function _random_string
   827                           
   828                           
   829                           ;main.c: 284:     static char str[6];;main.c: 285:     const char charset[] = "abcdefghi
      +                          jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";;main.c: 290:     for (int i = 0;
      +                           i < 5; i++) {
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _random_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   833     0652  01AF               	clrf	random_string@i
   834     0653  01B0               	clrf	random_string@i+1
   835     0654                     l1048:
   836                           
   837                           ;main.c: 291:         int index = rand() % (sizeof(charset) - 1);
   838     0654  303E               	movlw	62
   839     0655  1283               	bcf	3,5	;RP0=0, select bank0
   840     0656  1303               	bcf	3,6	;RP1=0, select bank0
   841     0657  00A7               	movwf	___lwmod@divisor
   842     0658  3000               	movlw	0
   843     0659  00A8               	movwf	___lwmod@divisor+1
   844     065A  120A  118A  2691  120A  118A  	fcall	_rand
   845     065F  0821               	movf	?_rand+1,w
   846     0660  00AA               	movwf	___lwmod@dividend+1
   847     0661  0820               	movf	?_rand,w
   848     0662  00A9               	movwf	___lwmod@dividend
   849     0663  120A  118A  25E1  120A  118A  	fcall	___lwmod
   850     0668  0828               	movf	?___lwmod+1,w
   851     0669  00AE               	movwf	random_string@index+1
   852     066A  0827               	movf	?___lwmod,w
   853     066B  00AD               	movwf	random_string@index
   854                           
   855                           ;main.c: 292:         str[i] = charset[index];
   856     066C  082D               	movf	random_string@index,w
   857     066D  3E01               	addlw	low ((random_string@charset-__stringbase)| (0+32768))
   858     066E  0084               	movwf	4
   859     066F  120A  118A  200D  120A  118A  	fcall	stringdir
   860     0674  00AC               	movwf	??_random_string
   861     0675  082F               	movf	random_string@i,w
   862     0676  3E38               	addlw	(low (random_string@str| 0))& (0+255)
   863     0677  0084               	movwf	4
   864     0678  082C               	movf	??_random_string,w
   865     0679  1383               	bcf	3,7	;select IRP bank0
   866     067A  0080               	movwf	0
   867                           
   868                           ;main.c: 293:     }
   869     067B  3001               	movlw	1
   870     067C  07AF               	addwf	random_string@i,f
   871     067D  1803               	skipnc
   872     067E  0AB0               	incf	random_string@i+1,f
   873     067F  3000               	movlw	0
   874     0680  07B0               	addwf	random_string@i+1,f
   875     0681  0830               	movf	random_string@i+1,w
   876     0682  3A80               	xorlw	128
   877     0683  00FF               	movwf	127
   878     0684  3080               	movlw	128
   879     0685  027F               	subwf	127,w
   880     0686  1D03               	skipz
   881     0687  2E8A               	goto	u375
   882     0688  3005               	movlw	5
   883     0689  022F               	subwf	random_string@i,w
   884     068A                     u375:
   885     068A  1C03               	skipc
   886     068B  2E54               	goto	l1048
   887                           
   888                           ;main.c: 295:     str[5] = '\0';
   889     068C  1283               	bcf	3,5	;RP0=0, select bank0
   890     068D  1303               	bcf	3,6	;RP1=0, select bank0
   891     068E  01BD               	clrf	random_string@str+5
   892                           
   893                           ;main.c: 297:     return str;
   894     068F  3038               	movlw	(low (random_string@str| 0))& (0+255)
   895     0690  0008               	return
   896     0691                     __end_of_random_string:
   897                           
   898                           	psect	text2
   899     0691                     __ptext2:	
   900 ;; *************** function _rand *****************
   901 ;; Defined at:
   902 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  2    0[BANK0 ] int 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 300/0
   913 ;;		On exit  : 300/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       2       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          0       5       0       0       0
   919 ;;      Totals:         0       7       0       0       0
   920 ;;Total ram usage:        7 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 1
   923 ;; This function calls:
   924 ;;		___lmul
   925 ;; This function is called by:
   926 ;;		_random_string
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930     0691                     _rand:	
   931                           ;psect for function _rand
   932                           
   933                           
   934                           ;incstack = 0
   935                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
   936     0691  0841               	movf	_randx+3,w
   937     0692  00F3               	movwf	___lmul@multiplier+3
   938     0693  0840               	movf	_randx+2,w
   939     0694  00F2               	movwf	___lmul@multiplier+2
   940     0695  083F               	movf	_randx+1,w
   941     0696  00F1               	movwf	___lmul@multiplier+1
   942     0697  083E               	movf	_randx,w
   943     0698  00F0               	movwf	___lmul@multiplier
   944     0699  3041               	movlw	65
   945     069A  00F7               	movwf	___lmul@multiplicand+3
   946     069B  30C6               	movlw	198
   947     069C  00F6               	movwf	___lmul@multiplicand+2
   948     069D  304E               	movlw	78
   949     069E  00F5               	movwf	___lmul@multiplicand+1
   950     069F  306D               	movlw	109
   951     06A0  00F4               	movwf	___lmul@multiplicand
   952     06A1  120A  118A  2613  120A  118A  	fcall	___lmul
   953     06A6  0873               	movf	?___lmul+3,w
   954     06A7  00C1               	movwf	_randx+3
   955     06A8  0872               	movf	?___lmul+2,w
   956     06A9  00C0               	movwf	_randx+2
   957     06AA  0871               	movf	?___lmul+1,w
   958     06AB  00BF               	movwf	_randx+1
   959     06AC  0870               	movf	?___lmul,w
   960     06AD  00BE               	movwf	_randx
   961     06AE  3039               	movlw	57
   962     06AF  07BE               	addwf	_randx,f
   963     06B0  3030               	movlw	48
   964     06B1  1803               	skipnc
   965     06B2  3031               	movlw	49
   966     06B3  07BF               	addwf	_randx+1,f
   967     06B4  3000               	movlw	0
   968     06B5  1803               	skipnc
   969     06B6  3001               	movlw	1
   970     06B7  07C0               	addwf	_randx+2,f
   971     06B8  3000               	movlw	0
   972     06B9  1803               	skipnc
   973     06BA  3001               	movlw	1
   974     06BB  07C1               	addwf	_randx+3,f
   975     06BC  083E               	movf	_randx,w
   976     06BD  00A2               	movwf	??_rand
   977     06BE  083F               	movf	_randx+1,w
   978     06BF  00A3               	movwf	??_rand+1
   979     06C0  0840               	movf	_randx+2,w
   980     06C1  00A4               	movwf	??_rand+2
   981     06C2  0841               	movf	_randx+3,w
   982     06C3  00A5               	movwf	??_rand+3
   983     06C4  3010               	movlw	16
   984     06C5  00A6               	movwf	??_rand+4
   985     06C6                     u295:
   986     06C6  0D25               	rlf	??_rand+3,w
   987     06C7  0CA5               	rrf	??_rand+3,f
   988     06C8  0CA4               	rrf	??_rand+2,f
   989     06C9  0CA3               	rrf	??_rand+1,f
   990     06CA  0CA2               	rrf	??_rand,f
   991     06CB  0BA6               	decfsz	??_rand+4,f
   992     06CC  2EC6               	goto	u295
   993     06CD  30FF               	movlw	255
   994     06CE  0522               	andwf	??_rand,w
   995     06CF  00A0               	movwf	?_rand
   996     06D0  307F               	movlw	127
   997     06D1  0523               	andwf	??_rand+1,w
   998     06D2  00A1               	movwf	?_rand+1
   999     06D3  0008               	return
  1000     06D4                     __end_of_rand:
  1001                           
  1002                           	psect	text3
  1003     0613                     __ptext3:	
  1004 ;; *************** function ___lmul *****************
  1005 ;; Defined at:
  1006 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  multiplier      4    0[COMMON] unsigned long 
  1009 ;;  multiplicand    4    4[COMMON] unsigned long 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  product         4    9[COMMON] unsigned long 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  4    0[COMMON] unsigned long 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0
  1016 ;; Tracked objects:
  1017 ;;		On entry : 300/0
  1018 ;;		On exit  : 300/0
  1019 ;;		Unchanged: 300/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         8       0       0       0       0
  1022 ;;      Locals:         4       0       0       0       0
  1023 ;;      Temps:          1       0       0       0       0
  1024 ;;      Totals:        13       0       0       0       0
  1025 ;;Total ram usage:       13 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_rand
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034     0613                     ___lmul:	
  1035                           ;psect for function ___lmul
  1036                           
  1037                           
  1038                           ;incstack = 0
  1039                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1040     0613  3000               	movlw	0
  1041     0614  00FC               	movwf	___lmul@product+3
  1042     0615  3000               	movlw	0
  1043     0616  00FB               	movwf	___lmul@product+2
  1044     0617  3000               	movlw	0
  1045     0618  00FA               	movwf	___lmul@product+1
  1046     0619  3000               	movlw	0
  1047     061A  00F9               	movwf	___lmul@product
  1048     061B                     l920:
  1049     061B  1C70               	btfss	___lmul@multiplier,0
  1050     061C  2E31               	goto	l924
  1051     061D  0874               	movf	___lmul@multiplicand,w
  1052     061E  07F9               	addwf	___lmul@product,f
  1053     061F  0875               	movf	___lmul@multiplicand+1,w
  1054     0620  1103               	clrz
  1055     0621  1803               	skipnc
  1056     0622  3E01               	addlw	1
  1057     0623  1D03               	btfss	3,2
  1058     0624  07FA               	addwf	___lmul@product+1,f
  1059     0625  0876               	movf	___lmul@multiplicand+2,w
  1060     0626  1103               	clrz
  1061     0627  1803               	skipnc
  1062     0628  3E01               	addlw	1
  1063     0629  1D03               	btfss	3,2
  1064     062A  07FB               	addwf	___lmul@product+2,f
  1065     062B  0877               	movf	___lmul@multiplicand+3,w
  1066     062C  1103               	clrz
  1067     062D  1803               	skipnc
  1068     062E  3E01               	addlw	1
  1069     062F  1D03               	btfss	3,2
  1070     0630  07FC               	addwf	___lmul@product+3,f
  1071     0631                     l924:
  1072     0631  3001               	movlw	1
  1073     0632  00F8               	movwf	??___lmul
  1074     0633                     u265:
  1075     0633  1003               	clrc
  1076     0634  0DF4               	rlf	___lmul@multiplicand,f
  1077     0635  0DF5               	rlf	___lmul@multiplicand+1,f
  1078     0636  0DF6               	rlf	___lmul@multiplicand+2,f
  1079     0637  0DF7               	rlf	___lmul@multiplicand+3,f
  1080     0638  0BF8               	decfsz	??___lmul,f
  1081     0639  2E33               	goto	u265
  1082     063A  3001               	movlw	1
  1083     063B                     u275:
  1084     063B  1003               	clrc
  1085     063C  0CF3               	rrf	___lmul@multiplier+3,f
  1086     063D  0CF2               	rrf	___lmul@multiplier+2,f
  1087     063E  0CF1               	rrf	___lmul@multiplier+1,f
  1088     063F  0CF0               	rrf	___lmul@multiplier,f
  1089     0640  3EFF               	addlw	-1
  1090     0641  1D03               	skipz
  1091     0642  2E3B               	goto	u275
  1092     0643  0873               	movf	___lmul@multiplier+3,w
  1093     0644  0472               	iorwf	___lmul@multiplier+2,w
  1094     0645  0471               	iorwf	___lmul@multiplier+1,w
  1095     0646  0470               	iorwf	___lmul@multiplier,w
  1096     0647  1D03               	skipz
  1097     0648  2E1B               	goto	l920
  1098     0649  087C               	movf	___lmul@product+3,w
  1099     064A  00F3               	movwf	?___lmul+3
  1100     064B  087B               	movf	___lmul@product+2,w
  1101     064C  00F2               	movwf	?___lmul+2
  1102     064D  087A               	movf	___lmul@product+1,w
  1103     064E  00F1               	movwf	?___lmul+1
  1104     064F  0879               	movf	___lmul@product,w
  1105     0650  00F0               	movwf	?___lmul
  1106     0651  0008               	return
  1107     0652                     __end_of___lmul:
  1108                           
  1109                           	psect	text4
  1110     05E1                     __ptext4:	
  1111 ;; *************** function ___lwmod *****************
  1112 ;; Defined at:
  1113 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  divisor         2    7[BANK0 ] unsigned int 
  1116 ;;  dividend        2    9[BANK0 ] unsigned int 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  counter         1   11[BANK0 ] unsigned char 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  2    7[BANK0 ] unsigned int 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 300/0
  1125 ;;		On exit  : 300/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       4       0       0       0
  1129 ;;      Locals:         0       1       0       0       0
  1130 ;;      Temps:          1       0       0       0       0
  1131 ;;      Totals:         1       5       0       0       0
  1132 ;;Total ram usage:        6 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_random_string
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141     05E1                     ___lwmod:	
  1142                           ;psect for function ___lwmod
  1143                           
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1147     05E1  0827               	movf	___lwmod@divisor,w
  1148     05E2  0428               	iorwf	___lwmod@divisor+1,w
  1149     05E3  1903               	btfsc	3,2
  1150     05E4  2E0E               	goto	l978
  1151     05E5  01AB               	clrf	___lwmod@counter
  1152     05E6  0AAB               	incf	___lwmod@counter,f
  1153     05E7                     l968:
  1154     05E7  1BA8               	btfsc	___lwmod@divisor+1,7
  1155     05E8  2DF5               	goto	l970
  1156     05E9  3001               	movlw	1
  1157     05EA                     u315:
  1158     05EA  1003               	clrc
  1159     05EB  0DA7               	rlf	___lwmod@divisor,f
  1160     05EC  0DA8               	rlf	___lwmod@divisor+1,f
  1161     05ED  3EFF               	addlw	-1
  1162     05EE  1D03               	skipz
  1163     05EF  2DEA               	goto	u315
  1164     05F0  3001               	movlw	1
  1165     05F1  00FD               	movwf	??___lwmod
  1166     05F2  087D               	movf	??___lwmod,w
  1167     05F3  07AB               	addwf	___lwmod@counter,f
  1168     05F4  2DE7               	goto	l968
  1169     05F5                     l970:
  1170     05F5  0828               	movf	___lwmod@divisor+1,w
  1171     05F6  022A               	subwf	___lwmod@dividend+1,w
  1172     05F7  1D03               	skipz
  1173     05F8  2DFB               	goto	u335
  1174     05F9  0827               	movf	___lwmod@divisor,w
  1175     05FA  0229               	subwf	___lwmod@dividend,w
  1176     05FB                     u335:
  1177     05FB  1C03               	skipc
  1178     05FC  2E03               	goto	l974
  1179     05FD  0827               	movf	___lwmod@divisor,w
  1180     05FE  02A9               	subwf	___lwmod@dividend,f
  1181     05FF  0828               	movf	___lwmod@divisor+1,w
  1182     0600  1C03               	skipc
  1183     0601  03AA               	decf	___lwmod@dividend+1,f
  1184     0602  02AA               	subwf	___lwmod@dividend+1,f
  1185     0603                     l974:
  1186     0603  3001               	movlw	1
  1187     0604                     u345:
  1188     0604  1003               	clrc
  1189     0605  0CA8               	rrf	___lwmod@divisor+1,f
  1190     0606  0CA7               	rrf	___lwmod@divisor,f
  1191     0607  3EFF               	addlw	-1
  1192     0608  1D03               	skipz
  1193     0609  2E04               	goto	u345
  1194     060A  3001               	movlw	1
  1195     060B  02AB               	subwf	___lwmod@counter,f
  1196     060C  1D03               	btfss	3,2
  1197     060D  2DF5               	goto	l970
  1198     060E                     l978:
  1199     060E  082A               	movf	___lwmod@dividend+1,w
  1200     060F  00A8               	movwf	?___lwmod+1
  1201     0610  0829               	movf	___lwmod@dividend,w
  1202     0611  00A7               	movwf	?___lwmod
  1203     0612  0008               	return
  1204     0613                     __end_of___lwmod:
  1205                           
  1206                           	psect	text5
  1207     0594                     __ptext5:	
  1208 ;; *************** function _lcd_str *****************
  1209 ;; Defined at:
  1210 ;;		line 244 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  str             2    3[COMMON] PTR const unsigned char 
  1213 ;;		 -> random_string@str(6), STR_2(6), STR_1(11), 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  i               1    6[COMMON] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 300/0
  1222 ;;		On exit  : 300/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         2       0       0       0       0
  1226 ;;      Locals:         1       0       0       0       0
  1227 ;;      Temps:          1       0       0       0       0
  1228 ;;      Totals:         4       0       0       0       0
  1229 ;;Total ram usage:        4 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 1
  1232 ;; This function calls:
  1233 ;;		_lcd_dat
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239     0594                     _lcd_str:	
  1240                           ;psect for function _lcd_str
  1241                           
  1242                           
  1243                           ;main.c: 244: void lcd_str(const char* str);main.c: 245: {;main.c: 246:     unsigned cha
      +                          r i = 0;
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1247     0594  01F6               	clrf	lcd_str@i
  1248     0595                     l1040:	
  1249                           ;main.c: 248:     while (str[i] != 0)
  1250                           
  1251                           
  1252                           ;main.c: 248:     while (str[i] != 0)
  1253     0595  0876               	movf	lcd_str@i,w
  1254     0596  0773               	addwf	lcd_str@str,w
  1255     0597  0084               	movwf	4
  1256     0598  0874               	movf	lcd_str@str+1,w
  1257     0599  1803               	skipnc
  1258     059A  0A74               	incf	lcd_str@str+1,w
  1259     059B  00FF               	movwf	127
  1260     059C  120A  118A  2003  120A  118A  	fcall	stringtab
  1261     05A1  3A00               	xorlw	0
  1262     05A2  1903               	btfsc	3,2
  1263     05A3  0008               	return
  1264                           
  1265                           ;main.c: 249:     {;main.c: 250:         lcd_dat(str[i]);
  1266     05A4  0876               	movf	lcd_str@i,w
  1267     05A5  0773               	addwf	lcd_str@str,w
  1268     05A6  0084               	movwf	4
  1269     05A7  0874               	movf	lcd_str@str+1,w
  1270     05A8  1803               	skipnc
  1271     05A9  0A74               	incf	lcd_str@str+1,w
  1272     05AA  00FF               	movwf	127
  1273     05AB  120A  118A  2003  120A  118A  	fcall	stringtab
  1274     05B0  120A  118A  2556  120A  118A  	fcall	_lcd_dat
  1275                           
  1276                           ;main.c: 251:         i++;
  1277     05B5  3001               	movlw	1
  1278     05B6  00F5               	movwf	??_lcd_str
  1279     05B7  0875               	movf	??_lcd_str,w
  1280     05B8  07F6               	addwf	lcd_str@i,f
  1281     05B9  2D95               	goto	l1040
  1282     05BA                     __end_of_lcd_str:
  1283                           
  1284                           	psect	text6
  1285     0556                     __ptext6:	
  1286 ;; *************** function _lcd_dat *****************
  1287 ;; Defined at:
  1288 ;;		line 197 in file "main.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  val             1    wreg     unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  val             1    2[COMMON] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg
  1297 ;; Tracked objects:
  1298 ;;		On entry : 300/0
  1299 ;;		On exit  : 300/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1302 ;;      Params:         0       0       0       0       0
  1303 ;;      Locals:         1       0       0       0       0
  1304 ;;      Temps:          2       0       0       0       0
  1305 ;;      Totals:         3       0       0       0       0
  1306 ;;Total ram usage:        3 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_lcd_str
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315     0556                     _lcd_dat:	
  1316                           ;psect for function _lcd_dat
  1317                           
  1318                           
  1319                           ;incstack = 0
  1320                           ; Regs used in _lcd_dat: [wreg]
  1321                           ;lcd_dat@val stored from wreg
  1322     0556  00F2               	movwf	lcd_dat@val
  1323                           
  1324                           ;main.c: 197: void lcd_dat(unsigned char val);main.c: 198: {;main.c: 199:     PORTEbits.
      +                          RE0 = 1;
  1325     0557  1409               	bsf	9,0	;volatile
  1326                           
  1327                           ;main.c: 201:     PORTD = val;
  1328     0558  0872               	movf	lcd_dat@val,w
  1329     0559  0088               	movwf	8	;volatile
  1330                           
  1331                           ;main.c: 202:     PORTEbits.RE2 = 1;
  1332     055A  1509               	bsf	9,2	;volatile
  1333                           
  1334                           ;main.c: 203:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1335     055B  3004               	movlw	4
  1336     055C  00F1               	movwf	??_lcd_dat+1
  1337     055D  30E4               	movlw	228
  1338     055E  00F0               	movwf	??_lcd_dat
  1339     055F                     u487:
  1340     055F  0BF0               	decfsz	??_lcd_dat,f
  1341     0560  2D5F               	goto	u487
  1342     0561  0BF1               	decfsz	??_lcd_dat+1,f
  1343     0562  2D5F               	goto	u487
  1344     0563  0000               	nop
  1345                           
  1346                           ;main.c: 204:     PORTEbits.RE0 = 0;
  1347     0564  1283               	bcf	3,5	;RP0=0, select bank0
  1348     0565  1303               	bcf	3,6	;RP1=0, select bank0
  1349     0566  1009               	bcf	9,0	;volatile
  1350                           
  1351                           ;main.c: 205:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1352     0567  3004               	movlw	4
  1353     0568  00F1               	movwf	??_lcd_dat+1
  1354     0569  30E4               	movlw	228
  1355     056A  00F0               	movwf	??_lcd_dat
  1356     056B                     u497:
  1357     056B  0BF0               	decfsz	??_lcd_dat,f
  1358     056C  2D6B               	goto	u497
  1359     056D  0BF1               	decfsz	??_lcd_dat+1,f
  1360     056E  2D6B               	goto	u497
  1361     056F  0000               	nop
  1362                           
  1363                           ;main.c: 207:     PORTEbits.RE0 = 1;
  1364     0570  1283               	bcf	3,5	;RP0=0, select bank0
  1365     0571  1303               	bcf	3,6	;RP1=0, select bank0
  1366     0572  1409               	bsf	9,0	;volatile
  1367     0573  0008               	return
  1368     0574                     __end_of_lcd_dat:
  1369                           
  1370                           	psect	text7
  1371     05BA                     __ptext7:	
  1372 ;; *************** function _lcd_send *****************
  1373 ;; Defined at:
  1374 ;;		line 256 in file "main.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  dato            1    wreg     unsigned char 
  1377 ;;  tipo            1    0[COMMON] unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  dato            1    3[COMMON] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 200/100
  1386 ;;		On exit  : 300/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         1       0       0       0       0
  1390 ;;      Locals:         1       0       0       0       0
  1391 ;;      Temps:          2       0       0       0       0
  1392 ;;      Totals:         4       0       0       0       0
  1393 ;;Total ram usage:        4 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402     05BA                     _lcd_send:	
  1403                           ;psect for function _lcd_send
  1404                           
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _lcd_send: [wreg+status,2+status,0]
  1408                           ;lcd_send@dato stored from wreg
  1409     05BA  00F3               	movwf	lcd_send@dato
  1410                           
  1411                           ;main.c: 256: void lcd_send(char dato, char tipo);main.c: 257: {;main.c: 260:     TRISD 
      +                          = 0x00;
  1412     05BB  1683               	bsf	3,5	;RP0=1, select bank1
  1413     05BC  0188               	clrf	8	;volatile
  1414                           
  1415                           ;main.c: 261:     TRISEbits.TRISE1 = 0;
  1416     05BD  1089               	bcf	9,1	;volatile
  1417                           
  1418                           ;main.c: 262:     TRISEbits.TRISE2 = 0;
  1419     05BE  1109               	bcf	9,2	;volatile
  1420                           
  1421                           ;main.c: 264:     PORTEbits.RE0 = 1;
  1422     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1423     05C0  1409               	bsf	9,0	;volatile
  1424                           
  1425                           ;main.c: 265:     PORTD = dato;
  1426     05C1  0873               	movf	lcd_send@dato,w
  1427     05C2  0088               	movwf	8	;volatile
  1428                           
  1429                           ;main.c: 266:     PORTEbits.RE2 = tipo;
  1430     05C3  0C70               	rrf	lcd_send@tipo,w
  1431     05C4  1C03               	skipc
  1432     05C5  1109               	bcf	9,2	;volatile
  1433     05C6  1803               	skipnc
  1434     05C7  1509               	bsf	9,2	;volatile
  1435                           
  1436                           ;main.c: 267:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1437     05C8  3004               	movlw	4
  1438     05C9  00F2               	movwf	??_lcd_send+1
  1439     05CA  30E4               	movlw	228
  1440     05CB  00F1               	movwf	??_lcd_send
  1441     05CC                     u507:
  1442     05CC  0BF1               	decfsz	??_lcd_send,f
  1443     05CD  2DCC               	goto	u507
  1444     05CE  0BF2               	decfsz	??_lcd_send+1,f
  1445     05CF  2DCC               	goto	u507
  1446     05D0  0000               	nop
  1447                           
  1448                           ;main.c: 268:     PORTEbits.RE0 = 0;
  1449     05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1450     05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1451     05D3  1009               	bcf	9,0	;volatile
  1452                           
  1453                           ;main.c: 269:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1454     05D4  3004               	movlw	4
  1455     05D5  00F2               	movwf	??_lcd_send+1
  1456     05D6  30E4               	movlw	228
  1457     05D7  00F1               	movwf	??_lcd_send
  1458     05D8                     u517:
  1459     05D8  0BF1               	decfsz	??_lcd_send,f
  1460     05D9  2DD8               	goto	u517
  1461     05DA  0BF2               	decfsz	??_lcd_send+1,f
  1462     05DB  2DD8               	goto	u517
  1463     05DC  0000               	nop
  1464                           
  1465                           ;main.c: 270:     PORTEbits.RE0 = 1;
  1466     05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1467     05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1468     05DF  1409               	bsf	9,0	;volatile
  1469     05E0  0008               	return
  1470     05E1                     __end_of_lcd_send:
  1471                           
  1472                           	psect	text8
  1473     06D4                     __ptext8:	
  1474 ;; *************** function _lcd_init *****************
  1475 ;; Defined at:
  1476 ;;		line 223 in file "main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : B00/0
  1487 ;;		On exit  : 300/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0
  1493 ;;      Totals:         2       0       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 1
  1497 ;; This function calls:
  1498 ;;		_lcd_cmd
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504     06D4                     _lcd_init:	
  1505                           ;psect for function _lcd_init
  1506                           
  1507                           
  1508                           ;main.c: 225:     TRISD = 0x00;
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1512     06D4  1683               	bsf	3,5	;RP0=1, select bank1
  1513     06D5  0188               	clrf	8	;volatile
  1514                           
  1515                           ;main.c: 226:     TRISE = 0x00;
  1516     06D6  0189               	clrf	9	;volatile
  1517                           
  1518                           ;main.c: 227:     PORTEbits.RE0 = 0;
  1519     06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1520     06D8  1009               	bcf	9,0	;volatile
  1521                           
  1522                           ;main.c: 228:     PORTEbits.RE2 = 0;
  1523     06D9  1109               	bcf	9,2	;volatile
  1524                           
  1525                           ;main.c: 229:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1526     06DA  301A               	movlw	26
  1527     06DB  00F4               	movwf	??_lcd_init+1
  1528     06DC  30F8               	movlw	248
  1529     06DD  00F3               	movwf	??_lcd_init
  1530     06DE                     u527:
  1531     06DE  0BF3               	decfsz	??_lcd_init,f
  1532     06DF  2EDE               	goto	u527
  1533     06E0  0BF4               	decfsz	??_lcd_init+1,f
  1534     06E1  2EDE               	goto	u527
  1535     06E2  0000               	nop
  1536                           
  1537                           ;main.c: 230:     PORTEbits.RE0 = 1;
  1538     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1539     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1540     06E5  1409               	bsf	9,0	;volatile
  1541                           
  1542                           ;main.c: 232:     lcd_cmd(0x38);
  1543     06E6  3038               	movlw	56
  1544     06E7  120A  118A  2574  120A  118A  	fcall	_lcd_cmd
  1545                           
  1546                           ;main.c: 233:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1547     06EC  3007               	movlw	7
  1548     06ED  00F4               	movwf	??_lcd_init+1
  1549     06EE  307D               	movlw	125
  1550     06EF  00F3               	movwf	??_lcd_init
  1551     06F0                     u537:
  1552     06F0  0BF3               	decfsz	??_lcd_init,f
  1553     06F1  2EF0               	goto	u537
  1554     06F2  0BF4               	decfsz	??_lcd_init+1,f
  1555     06F3  2EF0               	goto	u537
  1556                           
  1557                           ;main.c: 234:     lcd_cmd(0x38);
  1558     06F4  3038               	movlw	56
  1559     06F5  120A  118A  2574  120A  118A  	fcall	_lcd_cmd
  1560                           
  1561                           ;main.c: 235:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1562     06FA  30C7               	movlw	199
  1563     06FB  00F3               	movwf	??_lcd_init
  1564     06FC                     u547:
  1565     06FC  2EFD               	nop2
  1566     06FD  0BF3               	decfsz	??_lcd_init,f
  1567     06FE  2EFC               	goto	u547
  1568     06FF  2F00               	nop2
  1569     0700  2F01               	nop2
  1570                           
  1571                           ;main.c: 236:     lcd_cmd(0x38);
  1572     0701  3038               	movlw	56
  1573     0702  120A  118A  2574  120A  118A  	fcall	_lcd_cmd
  1574                           
  1575                           ;main.c: 237:     lcd_cmd(0x08);
  1576     0707  3008               	movlw	8
  1577     0708  120A  118A  2574  120A  118A  	fcall	_lcd_cmd
  1578                           
  1579                           ;main.c: 238:     lcd_cmd(0x0F);
  1580     070D  300F               	movlw	15
  1581     070E  120A  118A  2574  120A  118A  	fcall	_lcd_cmd
  1582                           
  1583                           ;main.c: 239:     lcd_cmd(0x01);
  1584     0713  3001               	movlw	1
  1585     0714  120A  118A  2574  120A  118A  	fcall	_lcd_cmd
  1586                           
  1587                           ;main.c: 240:     lcd_cmd(0b00001100);
  1588     0719  300C               	movlw	12
  1589     071A  120A  118A  2574  120A  118A  	fcall	_lcd_cmd
  1590                           
  1591                           ;main.c: 241:     lcd_cmd(0x80);
  1592     071F  3080               	movlw	128
  1593     0720  120A  118A  2574   	fcall	_lcd_cmd
  1594     0723  0008               	return
  1595     0724                     __end_of_lcd_init:
  1596                           
  1597                           	psect	text9
  1598     0574                     __ptext9:	
  1599 ;; *************** function _lcd_cmd *****************
  1600 ;; Defined at:
  1601 ;;		line 210 in file "main.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  val             1    wreg     unsigned char 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  val             1    2[COMMON] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 300/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       0       0       0
  1616 ;;      Locals:         1       0       0       0       0
  1617 ;;      Temps:          2       0       0       0       0
  1618 ;;      Totals:         3       0       0       0       0
  1619 ;;Total ram usage:        3 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_lcd_init
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628     0574                     _lcd_cmd:	
  1629                           ;psect for function _lcd_cmd
  1630                           
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _lcd_cmd: [wreg]
  1634                           ;lcd_cmd@val stored from wreg
  1635     0574  00F2               	movwf	lcd_cmd@val
  1636                           
  1637                           ;main.c: 210: void lcd_cmd(unsigned char val);main.c: 211: {;main.c: 212:     PORTEbits.
      +                          RE0 = 1;
  1638     0575  1283               	bcf	3,5	;RP0=0, select bank0
  1639     0576  1303               	bcf	3,6	;RP1=0, select bank0
  1640     0577  1409               	bsf	9,0	;volatile
  1641                           
  1642                           ;main.c: 214:     PORTD = val;
  1643     0578  0872               	movf	lcd_cmd@val,w
  1644     0579  0088               	movwf	8	;volatile
  1645                           
  1646                           ;main.c: 215:     PORTEbits.RE2 = 0;
  1647     057A  1109               	bcf	9,2	;volatile
  1648                           
  1649                           ;main.c: 216:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1650     057B  3004               	movlw	4
  1651     057C  00F1               	movwf	??_lcd_cmd+1
  1652     057D  30E4               	movlw	228
  1653     057E  00F0               	movwf	??_lcd_cmd
  1654     057F                     u557:
  1655     057F  0BF0               	decfsz	??_lcd_cmd,f
  1656     0580  2D7F               	goto	u557
  1657     0581  0BF1               	decfsz	??_lcd_cmd+1,f
  1658     0582  2D7F               	goto	u557
  1659     0583  0000               	nop
  1660                           
  1661                           ;main.c: 217:     PORTEbits.RE0 = 0;
  1662     0584  1283               	bcf	3,5	;RP0=0, select bank0
  1663     0585  1303               	bcf	3,6	;RP1=0, select bank0
  1664     0586  1009               	bcf	9,0	;volatile
  1665                           
  1666                           ;main.c: 218:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1667     0587  3004               	movlw	4
  1668     0588  00F1               	movwf	??_lcd_cmd+1
  1669     0589  30E4               	movlw	228
  1670     058A  00F0               	movwf	??_lcd_cmd
  1671     058B                     u567:
  1672     058B  0BF0               	decfsz	??_lcd_cmd,f
  1673     058C  2D8B               	goto	u567
  1674     058D  0BF1               	decfsz	??_lcd_cmd+1,f
  1675     058E  2D8B               	goto	u567
  1676     058F  0000               	nop
  1677                           
  1678                           ;main.c: 220:     PORTEbits.RE0 = 1;
  1679     0590  1283               	bcf	3,5	;RP0=0, select bank0
  1680     0591  1303               	bcf	3,6	;RP1=0, select bank0
  1681     0592  1409               	bsf	9,0	;volatile
  1682     0593  0008               	return
  1683     0594                     __end_of_lcd_cmd:
  1684                           
  1685                           	psect	text10
  1686     054C                     __ptext10:	
  1687 ;; *************** function _initKeyPad *****************
  1688 ;; Defined at:
  1689 ;;		line 275 in file "main.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0
  1698 ;; Tracked objects:
  1699 ;;		On entry : 300/0
  1700 ;;		On exit  : 300/100
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0
  1705 ;;      Temps:          1       0       0       0       0
  1706 ;;      Totals:         1       0       0       0       0
  1707 ;;Total ram usage:        1 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716     054C                     _initKeyPad:	
  1717                           ;psect for function _initKeyPad
  1718                           
  1719                           
  1720                           ;main.c: 277:     TRISD |= 0x0f;
  1721                           
  1722                           ;incstack = 0
  1723                           ; Regs used in _initKeyPad: [wreg+status,2+status,0]
  1724     054C  300F               	movlw	15
  1725     054D  00F0               	movwf	??_initKeyPad
  1726     054E  0870               	movf	??_initKeyPad,w
  1727     054F  1683               	bsf	3,5	;RP0=1, select bank1
  1728     0550  0488               	iorwf	8,f	;volatile
  1729                           
  1730                           ;main.c: 278:     TRISB &= ~0x07;
  1731     0551  30F8               	movlw	248
  1732     0552  00F0               	movwf	??_initKeyPad
  1733     0553  0870               	movf	??_initKeyPad,w
  1734     0554  0586               	andwf	6,f	;volatile
  1735     0555  0008               	return
  1736     0556                     __end_of_initKeyPad:
  1737     007E                     btemp	set	126	;btemp
  1738     007E                     wtemp0	set	126
  1739                           
  1740                           	psect	idloc
  1741                           
  1742                           ;Config register IDLOC0 @ 0x2000
  1743                           ;	unspecified, using default values
  1744     2000                     	org	8192
  1745     2000  3FFF               	dw	16383
  1746                           
  1747                           ;Config register IDLOC1 @ 0x2001
  1748                           ;	unspecified, using default values
  1749     2001                     	org	8193
  1750     2001  3FFF               	dw	16383
  1751                           
  1752                           ;Config register IDLOC2 @ 0x2002
  1753                           ;	unspecified, using default values
  1754     2002                     	org	8194
  1755     2002  3FFF               	dw	16383
  1756                           
  1757                           ;Config register IDLOC3 @ 0x2003
  1758                           ;	unspecified, using default values
  1759     2003                     	org	8195
  1760     2003  3FFF               	dw	16383
  1761                           
  1762                           	psect	config
  1763                           
  1764                           ;Config register CONFIG @ 0x2007
  1765                           ;	Oscillator Selection bits
  1766                           ;	FOSC = HS, HS oscillator
  1767                           ;	Watchdog Timer Enable bit
  1768                           ;	WDTE = OFF, WDT disabled
  1769                           ;	Power-up Timer Enable bit
  1770                           ;	PWRTE = OFF, PWRT disabled
  1771                           ;	Brown-out Reset Enable bit
  1772                           ;	BOREN = ON, BOR enabled
  1773                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1774                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1775                           ;	Data EEPROM Memory Code Protection bit
  1776                           ;	CPD = OFF, Data EEPROM code protection off
  1777                           ;	Flash Program Memory Write Enable bits
  1778                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1779                           ;	In-Circuit Debugger Mode bit
  1780                           ;	DEBUG = 0x1, unprogrammed default
  1781                           ;	Flash Program Memory Code Protection bit
  1782                           ;	CP = OFF, Code protection off
  1783     2007                     	org	8199
  1784     2007  3F7A               	dw	16250

Data Sizes:
    Strings     17
    Constant    82
    Data        4
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 11
		 -> random_string@str(BANK0[6]), STR_2(CODE[6]), STR_1(CODE[11]), 

    sp__random_string	PTR unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 

    main@code	PTR unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 


Critical Paths under _main in COMMON

    _random_string->___lwmod
    _rand->___lmul
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    _main->_random_string
    _random_string->___lwmod
    ___lwmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1303
                                             17 BANK0      3     3      0
                         _initKeyPad
                           _lcd_init
                           _lcd_send
                            _lcd_str
                      _random_string
 ---------------------------------------------------------------------------------
 (1) _random_string                                        5     5      0     646
                                             12 BANK0      5     5      0
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             13 COMMON     1     1      0
                                              7 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     340
                                              3 COMMON     4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send                                             4     3      1     272
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initKeyPad                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initKeyPad
   _lcd_init
     _lcd_cmd
   _lcd_send
   _lcd_str
     _lcd_dat
   _random_string
     ___lwmod
       _rand (ARG)
         ___lmul
     _rand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat May 06 18:04:23 2023

                           pc 0002                            l58 078F                            fsr 0004  
                         l920 061B                           l924 0631                           l970 05F5  
                         l974 0603                           l968 05E7                           l978 060E  
                         u315 05EA                           u405 0785                           u335 05FB  
                         u345 0604                           u265 0633                           u507 05CC  
                         u275 063B                           u517 05D8                           u527 06DE  
                         u295 06C6                           u375 068A                           u537 06F0  
                         u547 06FC                           u557 057F                           u477 0770  
                         u567 058B                           u487 055F                           u497 056B  
       __end_of_random_string 0691                           fsr0 0004                           indf 0000  
                        l1040 0595                          l1120 07B4                          l1130 07C9  
                        l1126 07C8                          l1134 07D3                          l1048 0654  
                        l1078 074B                          l1088 0751                          l1098 075F  
                        STR_1 0065                          STR_2 0070                          _TMR0 0001  
                        _main 0724                          _keys 0052                          _rand 0691  
                        btemp 007E                          start 0000                  lcd_send@dato 0073  
                lcd_send@tipo 0070                         ?_main 0070                         ?_rand 0020  
             __end_of___lwmod 0613                         _PORTB 0006                         _PORTD 0008  
                       _TRISB 0086                         _TRISD 0088                         _TRISE 0089  
             __end_of_colMask 0065           ___lmul@multiplicand 0074               __end_of_lcd_dat 0574  
             __end_of_lcd_cmd 0594               __end_of_lcd_str 05BA                         _keyok 0036  
                       _randx 003E                         pclath 000A               __end_of_rowMask 0062  
                       status 0003                         wtemp0 007E              random_string@str 0038  
             __initialization 07DC                  __end_of_main 07DC                  __end_of_keys 005E  
                __end_of_rand 06D4                        ??_main 0031                        ??_rand 0022  
                      _INTCON 000B              __end_of_lcd_init 0724              __end_of_lcd_send 05E1  
                      ___lmul 0613                     ??___lwmod 007D                     ??_lcd_dat 0070  
                   ??_lcd_cmd 0070                     ??_lcd_str 0075       __end_of__initialization 07FC  
              __pcstackCOMMON 0070                  __pidataBANK0 0548                    __pbssBANK0 0034  
                  __pmaintext 0724                       ?___lmul 0070                ___lmul@product 0079  
                   ?_lcd_init 0070                     ?_lcd_send 0070                    __stringtab 0003  
                  _initKeyPad 054C                       ___lwmod 05E1                       _colMask 0062  
                     _colScan 0035                       __ptext1 0652                       __ptext2 0691  
                     __ptext3 0613                       __ptext4 05E1                       __ptext5 0594  
                     __ptext6 0556                       __ptext7 05BA                       __ptext8 06D4  
                     __ptext9 0574                       _lcd_dat 0556                       _lcd_cmd 0574  
                     _lcd_str 0594                    _keypressed 0037                       _rowMask 005E  
                     _rowScan 0034                    ??_lcd_init 0073                    ??_lcd_send 0071  
        end_of_initialization 07FC            random_string@index 002D                     _PORTEbits 0009  
               _random_string 0652                     _TRISEbits 0089                    lcd_dat@val 0072  
                  lcd_cmd@val 0072                    lcd_str@str 0073                random_string@i 002F  
                 ?_initKeyPad 0070                __end_of___lmul 0652                ?_random_string 0070  
         start_initialization 07DC                      ??___lmul 0078                   __pdataBANK0 003E  
                   ___latbits 0002                 __pcstackBANK0 0020                      ?___lwmod 0027  
                   __pstrings 0003                      ?_lcd_dat 0070               ??_random_string 002C  
                    ?_lcd_cmd 0070                      ?_lcd_str 0073  __end_ofrandom_string@charset 0052  
                 __stringbase 0012             ___lmul@multiplier 0070                  ??_initKeyPad 0070  
          __end_of__stringtab 0013                      __ptext10 054C                      _lcd_init 06D4  
                    _lcd_send 05BA            __end_of_initKeyPad 0556                      main@code 0033  
                    lcd_str@i 0076          random_string@charset 0013              ___lwmod@dividend 0029  
                   stringcode 000D                    _OPTION_REG 0081               ___lwmod@divisor 0027  
             ___lwmod@counter 002B                      stringdir 000D                      stringtab 0003  
