

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat May 06 18:04:20 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0088                     	;# 
   161     0089                     	;# 
   162     008C                     	;# 
   163     008D                     	;# 
   164     008E                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     009F                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181                           
   182                           	psect	idataBANK0
   183     0527                     __pidataBANK0:
   184                           
   185                           ;initializer for _randx
   186     0527  3401               	retlw	1
   187     0528  3400               	retlw	0
   188     0529  3400               	retlw	0
   189     052A  3400               	retlw	0
   190                           
   191                           	psect	strings
   192     0003                     __pstrings:
   193     0003                     stringtab:
   194     0003                     __stringtab:
   195                           
   196                           ;	String table - string pointers are 1 byte each
   197     0003  1BFF               	btfsc	btemp+1,7
   198     0004  280D               	ljmp	stringcode
   199     0005  1383               	bcf	3,7
   200     0006  187F               	btfsc	btemp+1,0
   201     0007  1783               	bsf	3,7
   202     0008  0800               	movf	0,w
   203     0009  0A84               	incf	4,f
   204     000A  1903               	skipnz
   205     000B  0AFF               	incf	btemp+1,f
   206     000C  0008               	return
   207     000D                     stringcode:
   208     000D                     stringdir:
   209     000D  3000               	movlw	high stringdir
   210     000E  008A               	movwf	10
   211     000F  0804               	movf	4,w
   212     0010  0A84               	incf	4,f
   213     0011  0782               	addwf	2,f
   214     0012                     __stringbase:
   215     0012  3400               	retlw	0
   216     0013                     __end_of__stringtab:
   217     0013                     random_string@charset:
   218     0013  3461               	retlw	97
   219     0014  3462               	retlw	98
   220     0015  3463               	retlw	99
   221     0016  3464               	retlw	100
   222     0017  3465               	retlw	101
   223     0018  3466               	retlw	102
   224     0019  3467               	retlw	103
   225     001A  3468               	retlw	104
   226     001B  3469               	retlw	105
   227     001C  346A               	retlw	106
   228     001D  346B               	retlw	107
   229     001E  346C               	retlw	108
   230     001F  346D               	retlw	109
   231     0020  346E               	retlw	110
   232     0021  346F               	retlw	111
   233     0022  3470               	retlw	112
   234     0023  3471               	retlw	113
   235     0024  3472               	retlw	114
   236     0025  3473               	retlw	115
   237     0026  3474               	retlw	116
   238     0027  3475               	retlw	117
   239     0028  3476               	retlw	118
   240     0029  3477               	retlw	119
   241     002A  3478               	retlw	120
   242     002B  3479               	retlw	121
   243     002C  347A               	retlw	122
   244     002D  3441               	retlw	65
   245     002E  3442               	retlw	66
   246     002F  3443               	retlw	67
   247     0030  3444               	retlw	68
   248     0031  3445               	retlw	69
   249     0032  3446               	retlw	70
   250     0033  3447               	retlw	71
   251     0034  3448               	retlw	72
   252     0035  3449               	retlw	73
   253     0036  344A               	retlw	74
   254     0037  344B               	retlw	75
   255     0038  344C               	retlw	76
   256     0039  344D               	retlw	77
   257     003A  344E               	retlw	78
   258     003B  344F               	retlw	79
   259     003C  3450               	retlw	80
   260     003D  3451               	retlw	81
   261     003E  3452               	retlw	82
   262     003F  3453               	retlw	83
   263     0040  3454               	retlw	84
   264     0041  3455               	retlw	85
   265     0042  3456               	retlw	86
   266     0043  3457               	retlw	87
   267     0044  3458               	retlw	88
   268     0045  3459               	retlw	89
   269     0046  345A               	retlw	90
   270     0047  3430               	retlw	48
   271     0048  3431               	retlw	49
   272     0049  3432               	retlw	50
   273     004A  3433               	retlw	51
   274     004B  3434               	retlw	52
   275     004C  3435               	retlw	53
   276     004D  3436               	retlw	54
   277     004E  3437               	retlw	55
   278     004F  3438               	retlw	56
   279     0050  3439               	retlw	57
   280     0051  3400               	retlw	0
   281     0052                     __end_ofrandom_string@charset:
   282     0052                     _keys:
   283     0052  342A               	retlw	42
   284     0053  3407               	retlw	7
   285     0054  3404               	retlw	4
   286     0055  3401               	retlw	1
   287     0056  3400               	retlw	0
   288     0057  3408               	retlw	8
   289     0058  3405               	retlw	5
   290     0059  3402               	retlw	2
   291     005A  3423               	retlw	35
   292     005B  3409               	retlw	9
   293     005C  3406               	retlw	6
   294     005D  3403               	retlw	3
   295     005E                     __end_of_keys:
   296     005E                     _rowMask:
   297     005E  3401               	retlw	1
   298     005F  3402               	retlw	2
   299     0060  3404               	retlw	4
   300     0061  3408               	retlw	8
   301     0062                     __end_of_rowMask:
   302     0062                     _colMask:
   303     0062  34FE               	retlw	254
   304     0063  34FD               	retlw	253
   305     0064  34FB               	retlw	251
   306     0065                     __end_of_colMask:
   307     0009                     _PORTEbits	set	9
   308     0008                     _PORTD	set	8
   309     0006                     _PORTB	set	6
   310     0001                     _TMR0	set	1
   311     000B                     _INTCON	set	11
   312     0089                     _TRISEbits	set	137
   313     0089                     _TRISE	set	137
   314     0088                     _TRISD	set	136
   315     0081                     _OPTION_REG	set	129
   316     0086                     _TRISB	set	134
   317     0065                     STR_1:
   318     0065  3477               	retlw	119	;'w'
   319     0066  3461               	retlw	97	;'a'
   320     0067  3469               	retlw	105	;'i'
   321     0068  3474               	retlw	116	;'t'
   322     0069  3469               	retlw	105	;'i'
   323     006A  346E               	retlw	110	;'n'
   324     006B  3467               	retlw	103	;'g'
   325     006C  342E               	retlw	46	;'.'
   326     006D  342E               	retlw	46	;'.'
   327     006E  342E               	retlw	46	;'.'
   328     006F  3400               	retlw	0
   329     0070                     STR_2:
   330     0070  3432               	retlw	50	;'2'
   331     0071  3438               	retlw	56	;'8'
   332     0072  3437               	retlw	55	;'7'
   333     0073  3435               	retlw	53	;'5'
   334     0074  3433               	retlw	51	;'3'
   335     0075  3400               	retlw	0
   336                           
   337                           	psect	cinit
   338     07DC                     start_initialization:	
   339                           ; #config settings
   340                           
   341     07DC                     __initialization:
   342                           
   343                           ; Initialize objects allocated to BANK0
   344     07DC  120A  118A  2527  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   345     07E1  00BE               	movwf	__pdataBANK0& (0+127)
   346     07E2  120A  118A  2528  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   347     07E7  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   348     07E8  120A  118A  2529  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   349     07ED  00C0               	movwf	(__pdataBANK0+2)& (0+127)
   350     07EE  120A  118A  252A   	fcall	__pidataBANK0+3	;fetch initializer
   351     07F1  00C1               	movwf	(__pdataBANK0+3)& (0+127)
   352                           
   353                           ; Clear objects allocated to BANK0
   354     07F2  01B4               	clrf	__pbssBANK0& (0+127)
   355     07F3  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   356     07F4  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   357     07F5  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   358     07F6  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   359     07F7  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   360     07F8  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   361     07F9  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   362     07FA  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   363     07FB  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   364     07FC                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367     07FC                     __end_of__initialization:
   368     07FC  0183               	clrf	3
   369     07FD  120A  118A  2F18   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssBANK0
   372     0034                     __pbssBANK0:
   373     0034                     _rowScan:
   374     0034                     	ds	1
   375     0035                     _colScan:
   376     0035                     	ds	1
   377     0036                     _keyok:
   378     0036                     	ds	1
   379     0037                     _keypressed:
   380     0037                     	ds	1
   381     0038                     random_string@str:
   382     0038                     	ds	6
   383                           
   384                           	psect	dataBANK0
   385     003E                     __pdataBANK0:
   386     003E                     _randx:
   387     003E                     	ds	4
   388                           
   389                           	psect	cstackCOMMON
   390     0070                     __pcstackCOMMON:
   391     0070                     ?_lcd_init:
   392     0070                     ?_initKeyPad:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ??_initKeyPad:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_lcd_send:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_random_string:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_lcd_dat:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ??_lcd_dat:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_lcd_cmd:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ??_lcd_cmd:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?___lmul:	
   420                           ; 2 bytes @ 0x0
   421                           
   422     0070                     lcd_send@tipo:	
   423                           ; 4 bytes @ 0x0
   424                           
   425     0070                     ___lmul@multiplier:	
   426                           ; 1 bytes @ 0x0
   427                           
   428                           
   429                           ; 4 bytes @ 0x0
   430     0070                     	ds	1
   431     0071                     ??_lcd_send:
   432                           
   433                           ; 1 bytes @ 0x1
   434     0071                     	ds	1
   435     0072                     lcd_dat@val:
   436     0072                     lcd_cmd@val:	
   437                           ; 1 bytes @ 0x2
   438                           
   439                           
   440                           ; 1 bytes @ 0x2
   441     0072                     	ds	1
   442     0073                     ??_lcd_init:
   443     0073                     ?_lcd_str:	
   444                           ; 1 bytes @ 0x3
   445                           
   446     0073                     lcd_send@dato:	
   447                           ; 1 bytes @ 0x3
   448                           
   449     0073                     lcd_str@str:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 2 bytes @ 0x3
   454     0073                     	ds	1
   455     0074                     ___lmul@multiplicand:
   456                           
   457                           ; 4 bytes @ 0x4
   458     0074                     	ds	1
   459     0075                     ??_lcd_str:
   460                           
   461                           ; 1 bytes @ 0x5
   462     0075                     	ds	1
   463     0076                     lcd_str@i:
   464                           
   465                           ; 1 bytes @ 0x6
   466     0076                     	ds	2
   467     0078                     ??___lmul:
   468                           
   469                           ; 1 bytes @ 0x8
   470     0078                     	ds	1
   471     0079                     ___lmul@product:
   472                           
   473                           ; 4 bytes @ 0x9
   474     0079                     	ds	4
   475     007D                     ??___lwmod:
   476                           
   477                           ; 1 bytes @ 0xD
   478     007D                     	ds	1
   479                           
   480                           	psect	cstackBANK0
   481     0020                     __pcstackBANK0:
   482     0020                     ?_rand:
   483                           
   484                           ; 2 bytes @ 0x0
   485     0020                     	ds	2
   486     0022                     ??_rand:
   487                           
   488                           ; 1 bytes @ 0x2
   489     0022                     	ds	5
   490     0027                     ?___lwmod:
   491     0027                     ___lwmod@divisor:	
   492                           ; 2 bytes @ 0x7
   493                           
   494                           
   495                           ; 2 bytes @ 0x7
   496     0027                     	ds	2
   497     0029                     ___lwmod@dividend:
   498                           
   499                           ; 2 bytes @ 0x9
   500     0029                     	ds	2
   501     002B                     ___lwmod@counter:
   502                           
   503                           ; 1 bytes @ 0xB
   504     002B                     	ds	1
   505     002C                     ??_random_string:
   506                           
   507                           ; 1 bytes @ 0xC
   508     002C                     	ds	1
   509     002D                     random_string@index:
   510                           
   511                           ; 2 bytes @ 0xD
   512     002D                     	ds	2
   513     002F                     random_string@i:
   514                           
   515                           ; 2 bytes @ 0xF
   516     002F                     	ds	2
   517     0031                     ??_main:
   518                           
   519                           ; 1 bytes @ 0x11
   520     0031                     	ds	2
   521     0033                     main@code:
   522                           
   523                           ; 1 bytes @ 0x13
   524     0033                     	ds	1
   525                           
   526                           	psect	maintext
   527     0718                     __pmaintext:	
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 109 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  code            1   19[BANK0 ] PTR unsigned char 
   538 ;;		 -> random_string@str(6), 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  2   52[None  ] int 
   541 ;; Registers used:
   542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : B00/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       1       0       0       0
   550 ;;      Temps:          0       2       0       0       0
   551 ;;      Totals:         0       3       0       0       0
   552 ;;Total ram usage:        3 bytes
   553 ;; Hardware stack levels required when called: 3
   554 ;; This function calls:
   555 ;;		_initKeyPad
   556 ;;		_lcd_init
   557 ;;		_lcd_send
   558 ;;		_lcd_str
   559 ;;		_random_string
   560 ;; This function is called by:
   561 ;;		Startup code after reset
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565     0718                     _main:	
   566                           ;psect for function _main
   567                           
   568                           
   569                           ;main.c: 112:     TRISB = 0x00;
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   573     0718  1683               	bsf	3,5	;RP0=1, select bank1
   574     0719  1303               	bcf	3,6	;RP1=0, select bank1
   575     071A  0186               	clrf	6	;volatile
   576                           
   577                           ;main.c: 113:     INTCON |= 0xA0;
   578     071B  30A0               	movlw	160
   579     071C  1283               	bcf	3,5	;RP0=0, select bank0
   580     071D  1303               	bcf	3,6	;RP1=0, select bank0
   581     071E  00B1               	movwf	??_main
   582     071F  0831               	movf	??_main,w
   583     0720  048B               	iorwf	11,f	;volatile
   584                           
   585                           ;main.c: 114:     OPTION_REG = 0x05;
   586     0721  3005               	movlw	5
   587     0722  1683               	bsf	3,5	;RP0=1, select bank1
   588     0723  1303               	bcf	3,6	;RP1=0, select bank1
   589     0724  0081               	movwf	1	;volatile
   590                           
   591                           ;main.c: 115:     TMR0 = 6;
   592     0725  3006               	movlw	6
   593     0726  1283               	bcf	3,5	;RP0=0, select bank0
   594     0727  1303               	bcf	3,6	;RP1=0, select bank0
   595     0728  0081               	movwf	1	;volatile
   596                           
   597                           ;main.c: 118:     lcd_init();
   598     0729  120A  118A  26C6  120A  118A  	fcall	_lcd_init
   599                           
   600                           ;main.c: 119:     initKeyPad();
   601     072E  120A  118A  252B  120A  118A  	fcall	_initKeyPad
   602                           
   603                           ;main.c: 121:     lcd_send(0x01, 0);
   604     0733  01F0               	clrf	lcd_send@tipo
   605     0734  3001               	movlw	1
   606     0735  120A  118A  259E  120A  118A  	fcall	_lcd_send
   607                           
   608                           ;main.c: 122:     lcd_str("waiting...");
   609     073A  3053               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   610     073B  00F3               	movwf	lcd_str@str
   611     073C  3080               	movlw	128
   612     073D  00F4               	movwf	lcd_str@str+1
   613     073E  120A  118A  2576  120A  118A  	fcall	_lcd_str
   614     0743                     l1078:
   615                           
   616                           ;main.c: 126:     {;main.c: 127:         TRISB = 0x00;
   617     0743  1683               	bsf	3,5	;RP0=1, select bank1
   618     0744  1303               	bcf	3,6	;RP1=0, select bank1
   619     0745  0186               	clrf	6	;volatile
   620                           
   621                           ;main.c: 128:         TRISD = 0x0F;
   622     0746  300F               	movlw	15
   623     0747  0088               	movwf	8	;volatile
   624                           
   625                           ;main.c: 132:         for (colScan = 0; colScan < 3; colScan++)
   626     0748  1283               	bcf	3,5	;RP0=0, select bank0
   627     0749  1303               	bcf	3,6	;RP1=0, select bank0
   628     074A  01B5               	clrf	_colScan
   629     074B                     l1088:
   630                           
   631                           ;main.c: 133:         {;main.c: 135:             PORTB = PORTB | 0x07;
   632     074B  0806               	movf	6,w	;volatile
   633     074C  3807               	iorlw	7
   634     074D  0086               	movwf	6	;volatile
   635                           
   636                           ;main.c: 136:             PORTB = PORTB & colMask[colScan];
   637     074E  0835               	movf	_colScan,w
   638     074F  3E50               	addlw	low ((_colMask-__stringbase)| (0+32768))
   639     0750  0084               	movwf	4
   640     0751  120A  118A  200D  120A  118A  	fcall	stringdir
   641     0756  0506               	andwf	6,w	;volatile
   642     0757  0086               	movwf	6	;volatile
   643                           
   644                           ;main.c: 138:             for (rowScan = 0; rowScan < 4; rowScan++)
   645     0758  01B4               	clrf	_rowScan
   646     0759                     l1098:
   647                           
   648                           ;main.c: 139:             {;main.c: 140:                 if (!(PORTD & rowMask[rowScan])
      +                          )
   649     0759  0834               	movf	_rowScan,w
   650     075A  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   651     075B  0084               	movwf	4
   652     075C  120A  118A  200D  120A  118A  	fcall	stringdir
   653     0761  0508               	andwf	8,w	;volatile
   654     0762  1D03               	btfss	3,2
   655     0763  2F89               	goto	l58
   656                           
   657                           ;main.c: 141:                 {;main.c: 142:                     _delay((unsigned long)(
      +                          (5)*(4000000/4000.0)));
   658     0764  3007               	movlw	7
   659     0765  1283               	bcf	3,5	;RP0=0, select bank0
   660     0766  1303               	bcf	3,6	;RP1=0, select bank0
   661     0767  00B2               	movwf	??_main+1
   662     0768  307C               	movlw	124
   663     0769  00B1               	movwf	??_main
   664     076A                     u477:
   665     076A  0BB1               	decfsz	??_main,f
   666     076B  2F6A               	goto	u477
   667     076C  0BB2               	decfsz	??_main+1,f
   668     076D  2F6A               	goto	u477
   669     076E  0000               	nop
   670                           
   671                           ;main.c: 144:                     if (!(PORTD & rowMask[rowScan]))
   672     076F  1283               	bcf	3,5	;RP0=0, select bank0
   673     0770  1303               	bcf	3,6	;RP1=0, select bank0
   674     0771  0834               	movf	_rowScan,w
   675     0772  3E4C               	addlw	low ((_rowMask-__stringbase)| (0+32768))
   676     0773  0084               	movwf	4
   677     0774  120A  118A  200D  120A  118A  	fcall	stringdir
   678     0779  0508               	andwf	8,w	;volatile
   679     077A  1D03               	btfss	3,2
   680     077B  2F89               	goto	l58
   681                           
   682                           ;main.c: 145:                     {;main.c: 147:                         keypressed = ro
      +                          wScan + (4 * colScan);
   683     077C  0835               	movf	_colScan,w
   684     077D  00B1               	movwf	??_main
   685     077E  3002               	movlw	2
   686     077F                     u405:
   687     077F  1003               	clrc
   688     0780  0DB1               	rlf	??_main,f
   689     0781  3EFF               	addlw	-1
   690     0782  1D03               	skipz
   691     0783  2F7F               	goto	u405
   692     0784  0834               	movf	_rowScan,w
   693     0785  0731               	addwf	??_main,w
   694     0786  00B7               	movwf	_keypressed
   695                           
   696                           ;main.c: 148:                         keyok = 1;
   697     0787  01B6               	clrf	_keyok
   698     0788  0AB6               	incf	_keyok,f
   699     0789                     l58:	
   700                           ;main.c: 150:                 }
   701                           
   702                           
   703                           ;main.c: 151:             }
   704     0789  3001               	movlw	1
   705     078A  00B1               	movwf	??_main
   706     078B  0831               	movf	??_main,w
   707     078C  07B4               	addwf	_rowScan,f
   708     078D  3004               	movlw	4
   709     078E  0234               	subwf	_rowScan,w
   710     078F  1C03               	skipc
   711     0790  2F59               	goto	l1098
   712                           
   713                           ;main.c: 153:             if (keyok)
   714     0791  0836               	movf	_keyok,w
   715     0792  1903               	btfsc	3,2
   716     0793  2FD3               	goto	l1134
   717                           
   718                           ;main.c: 154:             {;main.c: 156:                 if(keypressed == 8)
   719     0794  3008               	movlw	8
   720     0795  0637               	xorwf	_keypressed,w
   721     0796  1D03               	btfss	3,2
   722     0797  2FB0               	goto	l1120
   723                           
   724                           ;main.c: 157:                 {;main.c: 159:                     lcd_send(0x01, 0);
   725     0798  01F0               	clrf	lcd_send@tipo
   726     0799  3001               	movlw	1
   727     079A  120A  118A  259E  120A  118A  	fcall	_lcd_send
   728                           
   729                           ;main.c: 161:                     char* code = random_string();
   730     079F  120A  118A  263A  120A  118A  	fcall	_random_string
   731     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   732     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   733     07A6  00B3               	movwf	main@code
   734                           
   735                           ;main.c: 162:                     lcd_str(code);
   736     07A7  0833               	movf	main@code,w
   737     07A8  00F3               	movwf	lcd_str@str
   738     07A9  3000               	movlw	0
   739     07AA  00F4               	movwf	lcd_str@str+1
   740     07AB  120A  118A  2576  120A  118A  	fcall	_lcd_str
   741     07B0                     l1120:
   742                           
   743                           ;main.c: 168:                 if (keypressed == 7)
   744     07B0  3007               	movlw	7
   745     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   746     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   747     07B3  0637               	xorwf	_keypressed,w
   748     07B4  1D03               	btfss	3,2
   749     07B5  2FC6               	goto	l1126
   750                           
   751                           ;main.c: 169:                 {;main.c: 170:                     lcd_send(0x01, 0);
   752     07B6  01F0               	clrf	lcd_send@tipo
   753     07B7  3001               	movlw	1
   754     07B8  120A  118A  259E  120A  118A  	fcall	_lcd_send
   755                           
   756                           ;main.c: 171:                     lcd_str("28753");
   757     07BD  305E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   758     07BE  00F3               	movwf	lcd_str@str
   759     07BF  3080               	movlw	128
   760     07C0  00F4               	movwf	lcd_str@str+1
   761     07C1  120A  118A  2576  120A  118A  	fcall	_lcd_str
   762     07C6                     l1126:
   763                           
   764                           ;main.c: 174:                 keyok = 0;
   765     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   766     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   767     07C8  01B6               	clrf	_keyok
   768     07C9                     l1130:	
   769                           ;main.c: 178:                 while ((PORTD & 0x0F) != 0x0F)
   770                           
   771                           ;main.c: 177:                 PORTD = PORTD | 0x0F;
   772                           
   773                           
   774                           ;main.c: 179:                 {;main.c: 180:                     PORTD = PORTD | 0x0F;
   775     07C9  0808               	movf	8,w	;volatile
   776     07CA  380F               	iorlw	15
   777     07CB  0088               	movwf	8	;volatile
   778                           
   779                           ;main.c: 178:                 while ((PORTD & 0x0F) != 0x0F)
   780                           
   781                           ;main.c: 181:                     continue;
   782     07CC  300F               	movlw	15
   783     07CD  0508               	andwf	8,w	;volatile
   784     07CE  00B1               	movwf	??_main
   785     07CF  300F               	movlw	15
   786     07D0  0631               	xorwf	??_main,w
   787     07D1  1D03               	btfss	3,2
   788     07D2  2FC9               	goto	l1130
   789     07D3                     l1134:
   790                           
   791                           ;main.c: 186:         }
   792     07D3  3001               	movlw	1
   793     07D4  00B1               	movwf	??_main
   794     07D5  0831               	movf	??_main,w
   795     07D6  07B5               	addwf	_colScan,f
   796     07D7  3003               	movlw	3
   797     07D8  0235               	subwf	_colScan,w
   798     07D9  1803               	btfsc	3,0
   799     07DA  2F43               	goto	l1078
   800     07DB  2F4B               	goto	l1088
   801     07DC                     __end_of_main:
   802                           
   803                           	psect	text1
   804     063A                     __ptext1:	
   805 ;; *************** function _random_string *****************
   806 ;; Defined at:
   807 ;;		line 283 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  index           2   13[BANK0 ] int 
   812 ;;  i               2   15[BANK0 ] int 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      PTR unsigned char 
   815 ;; Registers used:
   816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       4       0       0       0
   824 ;;      Temps:          0       1       0       0       0
   825 ;;      Totals:         0       5       0       0       0
   826 ;;Total ram usage:        5 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 2
   829 ;; This function calls:
   830 ;;		___lwmod
   831 ;;		_rand
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837     063A                     _random_string:	
   838                           ;psect for function _random_string
   839                           
   840                           
   841                           ;main.c: 284:     static char str[6];;main.c: 285:     const char charset[] = "abcdefghi
      +                          jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";;main.c: 290:     for (int i = 0;
      +                           i < 5; i++) {
   842                           
   843                           ;incstack = 0
   844                           ; Regs used in _random_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   845     063A  1283               	bcf	3,5	;RP0=0, select bank0
   846     063B  1303               	bcf	3,6	;RP1=0, select bank0
   847     063C  01AF               	clrf	random_string@i
   848     063D  01B0               	clrf	random_string@i+1
   849     063E                     l1048:
   850                           
   851                           ;main.c: 291:         int index = rand() % (sizeof(charset) - 1);
   852     063E  303E               	movlw	62
   853     063F  1283               	bcf	3,5	;RP0=0, select bank0
   854     0640  1303               	bcf	3,6	;RP1=0, select bank0
   855     0641  00A7               	movwf	___lwmod@divisor
   856     0642  3000               	movlw	0
   857     0643  00A8               	movwf	___lwmod@divisor+1
   858     0644  120A  118A  267F  120A  118A  	fcall	_rand
   859     0649  1283               	bcf	3,5	;RP0=0, select bank0
   860     064A  1303               	bcf	3,6	;RP1=0, select bank0
   861     064B  0821               	movf	?_rand+1,w
   862     064C  00AA               	movwf	___lwmod@dividend+1
   863     064D  0820               	movf	?_rand,w
   864     064E  00A9               	movwf	___lwmod@dividend
   865     064F  120A  118A  25C7  120A  118A  	fcall	___lwmod
   866     0654  1283               	bcf	3,5	;RP0=0, select bank0
   867     0655  1303               	bcf	3,6	;RP1=0, select bank0
   868     0656  0828               	movf	?___lwmod+1,w
   869     0657  00AE               	movwf	random_string@index+1
   870     0658  0827               	movf	?___lwmod,w
   871     0659  00AD               	movwf	random_string@index
   872                           
   873                           ;main.c: 292:         str[i] = charset[index];
   874     065A  082D               	movf	random_string@index,w
   875     065B  3E01               	addlw	low ((random_string@charset-__stringbase)| (0+32768))
   876     065C  0084               	movwf	4
   877     065D  120A  118A  200D  120A  118A  	fcall	stringdir
   878     0662  00AC               	movwf	??_random_string
   879     0663  082F               	movf	random_string@i,w
   880     0664  3E38               	addlw	(low (random_string@str| 0))& (0+255)
   881     0665  0084               	movwf	4
   882     0666  082C               	movf	??_random_string,w
   883     0667  1383               	bcf	3,7	;select IRP bank0
   884     0668  0080               	movwf	0
   885                           
   886                           ;main.c: 293:     }
   887     0669  3001               	movlw	1
   888     066A  07AF               	addwf	random_string@i,f
   889     066B  1803               	skipnc
   890     066C  0AB0               	incf	random_string@i+1,f
   891     066D  3000               	movlw	0
   892     066E  07B0               	addwf	random_string@i+1,f
   893     066F  0830               	movf	random_string@i+1,w
   894     0670  3A80               	xorlw	128
   895     0671  00FF               	movwf	127
   896     0672  3080               	movlw	128
   897     0673  027F               	subwf	127,w
   898     0674  1D03               	skipz
   899     0675  2E78               	goto	u375
   900     0676  3005               	movlw	5
   901     0677  022F               	subwf	random_string@i,w
   902     0678                     u375:
   903     0678  1C03               	skipc
   904     0679  2E3E               	goto	l1048
   905                           
   906                           ;main.c: 295:     str[5] = '\0';
   907     067A  1283               	bcf	3,5	;RP0=0, select bank0
   908     067B  1303               	bcf	3,6	;RP1=0, select bank0
   909     067C  01BD               	clrf	random_string@str+5
   910                           
   911                           ;main.c: 297:     return str;
   912     067D  3038               	movlw	(low (random_string@str| 0))& (0+255)
   913     067E  0008               	return
   914     067F                     __end_of_random_string:
   915                           
   916                           	psect	text2
   917     067F                     __ptext2:	
   918 ;; *************** function _rand *****************
   919 ;; Defined at:
   920 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  2    0[BANK0 ] int 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0, pclath, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       2       0       0       0
   935 ;;      Locals:         0       0       0       0       0
   936 ;;      Temps:          0       5       0       0       0
   937 ;;      Totals:         0       7       0       0       0
   938 ;;Total ram usage:        7 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; Hardware stack levels required when called: 1
   941 ;; This function calls:
   942 ;;		___lmul
   943 ;; This function is called by:
   944 ;;		_random_string
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948     067F                     _rand:	
   949                           ;psect for function _rand
   950                           
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
   954     067F  1283               	bcf	3,5	;RP0=0, select bank0
   955     0680  1303               	bcf	3,6	;RP1=0, select bank0
   956     0681  0841               	movf	_randx+3,w
   957     0682  00F3               	movwf	___lmul@multiplier+3
   958     0683  0840               	movf	_randx+2,w
   959     0684  00F2               	movwf	___lmul@multiplier+2
   960     0685  083F               	movf	_randx+1,w
   961     0686  00F1               	movwf	___lmul@multiplier+1
   962     0687  083E               	movf	_randx,w
   963     0688  00F0               	movwf	___lmul@multiplier
   964     0689  3041               	movlw	65
   965     068A  00F7               	movwf	___lmul@multiplicand+3
   966     068B  30C6               	movlw	198
   967     068C  00F6               	movwf	___lmul@multiplicand+2
   968     068D  304E               	movlw	78
   969     068E  00F5               	movwf	___lmul@multiplicand+1
   970     068F  306D               	movlw	109
   971     0690  00F4               	movwf	___lmul@multiplicand
   972     0691  120A  118A  25FB  120A  118A  	fcall	___lmul
   973     0696  0873               	movf	?___lmul+3,w
   974     0697  1283               	bcf	3,5	;RP0=0, select bank0
   975     0698  1303               	bcf	3,6	;RP1=0, select bank0
   976     0699  00C1               	movwf	_randx+3
   977     069A  0872               	movf	?___lmul+2,w
   978     069B  00C0               	movwf	_randx+2
   979     069C  0871               	movf	?___lmul+1,w
   980     069D  00BF               	movwf	_randx+1
   981     069E  0870               	movf	?___lmul,w
   982     069F  00BE               	movwf	_randx
   983     06A0  3039               	movlw	57
   984     06A1  07BE               	addwf	_randx,f
   985     06A2  3030               	movlw	48
   986     06A3  1803               	skipnc
   987     06A4  3031               	movlw	49
   988     06A5  07BF               	addwf	_randx+1,f
   989     06A6  3000               	movlw	0
   990     06A7  1803               	skipnc
   991     06A8  3001               	movlw	1
   992     06A9  07C0               	addwf	_randx+2,f
   993     06AA  3000               	movlw	0
   994     06AB  1803               	skipnc
   995     06AC  3001               	movlw	1
   996     06AD  07C1               	addwf	_randx+3,f
   997     06AE  083E               	movf	_randx,w
   998     06AF  00A2               	movwf	??_rand
   999     06B0  083F               	movf	_randx+1,w
  1000     06B1  00A3               	movwf	??_rand+1
  1001     06B2  0840               	movf	_randx+2,w
  1002     06B3  00A4               	movwf	??_rand+2
  1003     06B4  0841               	movf	_randx+3,w
  1004     06B5  00A5               	movwf	??_rand+3
  1005     06B6  3010               	movlw	16
  1006     06B7  00A6               	movwf	??_rand+4
  1007     06B8                     u295:
  1008     06B8  0D25               	rlf	??_rand+3,w
  1009     06B9  0CA5               	rrf	??_rand+3,f
  1010     06BA  0CA4               	rrf	??_rand+2,f
  1011     06BB  0CA3               	rrf	??_rand+1,f
  1012     06BC  0CA2               	rrf	??_rand,f
  1013     06BD  0BA6               	decfsz	??_rand+4,f
  1014     06BE  2EB8               	goto	u295
  1015     06BF  30FF               	movlw	255
  1016     06C0  0522               	andwf	??_rand,w
  1017     06C1  00A0               	movwf	?_rand
  1018     06C2  307F               	movlw	127
  1019     06C3  0523               	andwf	??_rand+1,w
  1020     06C4  00A1               	movwf	?_rand+1
  1021     06C5  0008               	return
  1022     06C6                     __end_of_rand:
  1023                           
  1024                           	psect	text3
  1025     05FB                     __ptext3:	
  1026 ;; *************** function ___lmul *****************
  1027 ;; Defined at:
  1028 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  multiplier      4    0[COMMON] unsigned long 
  1031 ;;  multiplicand    4    4[COMMON] unsigned long 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  product         4    9[COMMON] unsigned long 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  4    0[COMMON] unsigned long 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         8       0       0       0       0
  1044 ;;      Locals:         4       0       0       0       0
  1045 ;;      Temps:          1       0       0       0       0
  1046 ;;      Totals:        13       0       0       0       0
  1047 ;;Total ram usage:       13 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_rand
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056     05FB                     ___lmul:	
  1057                           ;psect for function ___lmul
  1058                           
  1059                           
  1060                           ;incstack = 0
  1061                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1062     05FB  3000               	movlw	0
  1063     05FC  00FC               	movwf	___lmul@product+3
  1064     05FD  3000               	movlw	0
  1065     05FE  00FB               	movwf	___lmul@product+2
  1066     05FF  3000               	movlw	0
  1067     0600  00FA               	movwf	___lmul@product+1
  1068     0601  3000               	movlw	0
  1069     0602  00F9               	movwf	___lmul@product
  1070     0603                     l920:
  1071     0603  1C70               	btfss	___lmul@multiplier,0
  1072     0604  2E19               	goto	l924
  1073     0605  0874               	movf	___lmul@multiplicand,w
  1074     0606  07F9               	addwf	___lmul@product,f
  1075     0607  0875               	movf	___lmul@multiplicand+1,w
  1076     0608  1103               	clrz
  1077     0609  1803               	skipnc
  1078     060A  3E01               	addlw	1
  1079     060B  1D03               	btfss	3,2
  1080     060C  07FA               	addwf	___lmul@product+1,f
  1081     060D  0876               	movf	___lmul@multiplicand+2,w
  1082     060E  1103               	clrz
  1083     060F  1803               	skipnc
  1084     0610  3E01               	addlw	1
  1085     0611  1D03               	btfss	3,2
  1086     0612  07FB               	addwf	___lmul@product+2,f
  1087     0613  0877               	movf	___lmul@multiplicand+3,w
  1088     0614  1103               	clrz
  1089     0615  1803               	skipnc
  1090     0616  3E01               	addlw	1
  1091     0617  1D03               	btfss	3,2
  1092     0618  07FC               	addwf	___lmul@product+3,f
  1093     0619                     l924:
  1094     0619  3001               	movlw	1
  1095     061A  00F8               	movwf	??___lmul
  1096     061B                     u265:
  1097     061B  1003               	clrc
  1098     061C  0DF4               	rlf	___lmul@multiplicand,f
  1099     061D  0DF5               	rlf	___lmul@multiplicand+1,f
  1100     061E  0DF6               	rlf	___lmul@multiplicand+2,f
  1101     061F  0DF7               	rlf	___lmul@multiplicand+3,f
  1102     0620  0BF8               	decfsz	??___lmul,f
  1103     0621  2E1B               	goto	u265
  1104     0622  3001               	movlw	1
  1105     0623                     u275:
  1106     0623  1003               	clrc
  1107     0624  0CF3               	rrf	___lmul@multiplier+3,f
  1108     0625  0CF2               	rrf	___lmul@multiplier+2,f
  1109     0626  0CF1               	rrf	___lmul@multiplier+1,f
  1110     0627  0CF0               	rrf	___lmul@multiplier,f
  1111     0628  3EFF               	addlw	-1
  1112     0629  1D03               	skipz
  1113     062A  2E23               	goto	u275
  1114     062B  0873               	movf	___lmul@multiplier+3,w
  1115     062C  0472               	iorwf	___lmul@multiplier+2,w
  1116     062D  0471               	iorwf	___lmul@multiplier+1,w
  1117     062E  0470               	iorwf	___lmul@multiplier,w
  1118     062F  1D03               	skipz
  1119     0630  2E03               	goto	l920
  1120     0631  087C               	movf	___lmul@product+3,w
  1121     0632  00F3               	movwf	?___lmul+3
  1122     0633  087B               	movf	___lmul@product+2,w
  1123     0634  00F2               	movwf	?___lmul+2
  1124     0635  087A               	movf	___lmul@product+1,w
  1125     0636  00F1               	movwf	?___lmul+1
  1126     0637  0879               	movf	___lmul@product,w
  1127     0638  00F0               	movwf	?___lmul
  1128     0639  0008               	return
  1129     063A                     __end_of___lmul:
  1130                           
  1131                           	psect	text4
  1132     05C7                     __ptext4:	
  1133 ;; *************** function ___lwmod *****************
  1134 ;; Defined at:
  1135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  divisor         2    7[BANK0 ] unsigned int 
  1138 ;;  dividend        2    9[BANK0 ] unsigned int 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  counter         1   11[BANK0 ] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2    7[BANK0 ] unsigned int 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       4       0       0       0
  1151 ;;      Locals:         0       1       0       0       0
  1152 ;;      Temps:          1       0       0       0       0
  1153 ;;      Totals:         1       5       0       0       0
  1154 ;;Total ram usage:        6 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_random_string
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163     05C7                     ___lwmod:	
  1164                           ;psect for function ___lwmod
  1165                           
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1169     05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1170     05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1171     05C9  0827               	movf	___lwmod@divisor,w
  1172     05CA  0428               	iorwf	___lwmod@divisor+1,w
  1173     05CB  1903               	btfsc	3,2
  1174     05CC  2DF6               	goto	l978
  1175     05CD  01AB               	clrf	___lwmod@counter
  1176     05CE  0AAB               	incf	___lwmod@counter,f
  1177     05CF                     l968:
  1178     05CF  1BA8               	btfsc	___lwmod@divisor+1,7
  1179     05D0  2DDD               	goto	l970
  1180     05D1  3001               	movlw	1
  1181     05D2                     u315:
  1182     05D2  1003               	clrc
  1183     05D3  0DA7               	rlf	___lwmod@divisor,f
  1184     05D4  0DA8               	rlf	___lwmod@divisor+1,f
  1185     05D5  3EFF               	addlw	-1
  1186     05D6  1D03               	skipz
  1187     05D7  2DD2               	goto	u315
  1188     05D8  3001               	movlw	1
  1189     05D9  00FD               	movwf	??___lwmod
  1190     05DA  087D               	movf	??___lwmod,w
  1191     05DB  07AB               	addwf	___lwmod@counter,f
  1192     05DC  2DCF               	goto	l968
  1193     05DD                     l970:
  1194     05DD  0828               	movf	___lwmod@divisor+1,w
  1195     05DE  022A               	subwf	___lwmod@dividend+1,w
  1196     05DF  1D03               	skipz
  1197     05E0  2DE3               	goto	u335
  1198     05E1  0827               	movf	___lwmod@divisor,w
  1199     05E2  0229               	subwf	___lwmod@dividend,w
  1200     05E3                     u335:
  1201     05E3  1C03               	skipc
  1202     05E4  2DEB               	goto	l974
  1203     05E5  0827               	movf	___lwmod@divisor,w
  1204     05E6  02A9               	subwf	___lwmod@dividend,f
  1205     05E7  0828               	movf	___lwmod@divisor+1,w
  1206     05E8  1C03               	skipc
  1207     05E9  03AA               	decf	___lwmod@dividend+1,f
  1208     05EA  02AA               	subwf	___lwmod@dividend+1,f
  1209     05EB                     l974:
  1210     05EB  3001               	movlw	1
  1211     05EC                     u345:
  1212     05EC  1003               	clrc
  1213     05ED  0CA8               	rrf	___lwmod@divisor+1,f
  1214     05EE  0CA7               	rrf	___lwmod@divisor,f
  1215     05EF  3EFF               	addlw	-1
  1216     05F0  1D03               	skipz
  1217     05F1  2DEC               	goto	u345
  1218     05F2  3001               	movlw	1
  1219     05F3  02AB               	subwf	___lwmod@counter,f
  1220     05F4  1D03               	btfss	3,2
  1221     05F5  2DDD               	goto	l970
  1222     05F6                     l978:
  1223     05F6  082A               	movf	___lwmod@dividend+1,w
  1224     05F7  00A8               	movwf	?___lwmod+1
  1225     05F8  0829               	movf	___lwmod@dividend,w
  1226     05F9  00A7               	movwf	?___lwmod
  1227     05FA  0008               	return
  1228     05FB                     __end_of___lwmod:
  1229                           
  1230                           	psect	text5
  1231     0576                     __ptext5:	
  1232 ;; *************** function _lcd_str *****************
  1233 ;; Defined at:
  1234 ;;		line 244 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  str             2    3[COMMON] PTR const unsigned char 
  1237 ;;		 -> random_string@str(6), STR_2(6), STR_1(11), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  i               1    6[COMMON] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         2       0       0       0       0
  1250 ;;      Locals:         1       0       0       0       0
  1251 ;;      Temps:          1       0       0       0       0
  1252 ;;      Totals:         4       0       0       0       0
  1253 ;;Total ram usage:        4 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 1
  1256 ;; This function calls:
  1257 ;;		_lcd_dat
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263     0576                     _lcd_str:	
  1264                           ;psect for function _lcd_str
  1265                           
  1266                           
  1267                           ;main.c: 244: void lcd_str(const char* str);main.c: 245: {;main.c: 246:     unsigned cha
      +                          r i = 0;
  1268                           
  1269                           ;incstack = 0
  1270                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1271     0576  01F6               	clrf	lcd_str@i
  1272     0577                     l1040:	
  1273                           ;main.c: 248:     while (str[i] != 0)
  1274                           
  1275                           
  1276                           ;main.c: 248:     while (str[i] != 0)
  1277     0577  0876               	movf	lcd_str@i,w
  1278     0578  0773               	addwf	lcd_str@str,w
  1279     0579  0084               	movwf	4
  1280     057A  0874               	movf	lcd_str@str+1,w
  1281     057B  1803               	skipnc
  1282     057C  0A74               	incf	lcd_str@str+1,w
  1283     057D  1283               	bcf	3,5	;RP0=0, select bank0
  1284     057E  1303               	bcf	3,6	;RP1=0, select bank0
  1285     057F  00FF               	movwf	127
  1286     0580  120A  118A  2003  120A  118A  	fcall	stringtab
  1287     0585  3A00               	xorlw	0
  1288     0586  1903               	btfsc	3,2
  1289     0587  0008               	return
  1290                           
  1291                           ;main.c: 249:     {;main.c: 250:         lcd_dat(str[i]);
  1292     0588  0876               	movf	lcd_str@i,w
  1293     0589  0773               	addwf	lcd_str@str,w
  1294     058A  0084               	movwf	4
  1295     058B  0874               	movf	lcd_str@str+1,w
  1296     058C  1803               	skipnc
  1297     058D  0A74               	incf	lcd_str@str+1,w
  1298     058E  00FF               	movwf	127
  1299     058F  120A  118A  2003  120A  118A  	fcall	stringtab
  1300     0594  120A  118A  2556  120A  118A  	fcall	_lcd_dat
  1301                           
  1302                           ;main.c: 251:         i++;
  1303     0599  3001               	movlw	1
  1304     059A  00F5               	movwf	??_lcd_str
  1305     059B  0875               	movf	??_lcd_str,w
  1306     059C  07F6               	addwf	lcd_str@i,f
  1307     059D  2D77               	goto	l1040
  1308     059E                     __end_of_lcd_str:
  1309                           
  1310                           	psect	text6
  1311     0556                     __ptext6:	
  1312 ;; *************** function _lcd_dat *****************
  1313 ;; Defined at:
  1314 ;;		line 197 in file "main.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  val             1    wreg     unsigned char 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  val             1    2[COMMON] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       0       0       0       0
  1329 ;;      Locals:         1       0       0       0       0
  1330 ;;      Temps:          2       0       0       0       0
  1331 ;;      Totals:         3       0       0       0       0
  1332 ;;Total ram usage:        3 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_lcd_str
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341     0556                     _lcd_dat:	
  1342                           ;psect for function _lcd_dat
  1343                           
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _lcd_dat: [wreg]
  1347                           ;lcd_dat@val stored from wreg
  1348     0556  00F2               	movwf	lcd_dat@val
  1349                           
  1350                           ;main.c: 197: void lcd_dat(unsigned char val);main.c: 198: {;main.c: 199:     PORTEbits.
      +                          RE0 = 1;
  1351     0557  1283               	bcf	3,5	;RP0=0, select bank0
  1352     0558  1303               	bcf	3,6	;RP1=0, select bank0
  1353     0559  1409               	bsf	9,0	;volatile
  1354                           
  1355                           ;main.c: 201:     PORTD = val;
  1356     055A  0872               	movf	lcd_dat@val,w
  1357     055B  0088               	movwf	8	;volatile
  1358                           
  1359                           ;main.c: 202:     PORTEbits.RE2 = 1;
  1360     055C  1509               	bsf	9,2	;volatile
  1361                           
  1362                           ;main.c: 203:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1363     055D  3004               	movlw	4
  1364     055E  00F1               	movwf	??_lcd_dat+1
  1365     055F  30E4               	movlw	228
  1366     0560  00F0               	movwf	??_lcd_dat
  1367     0561                     u487:
  1368     0561  0BF0               	decfsz	??_lcd_dat,f
  1369     0562  2D61               	goto	u487
  1370     0563  0BF1               	decfsz	??_lcd_dat+1,f
  1371     0564  2D61               	goto	u487
  1372     0565  0000               	nop
  1373                           
  1374                           ;main.c: 204:     PORTEbits.RE0 = 0;
  1375     0566  1283               	bcf	3,5	;RP0=0, select bank0
  1376     0567  1303               	bcf	3,6	;RP1=0, select bank0
  1377     0568  1009               	bcf	9,0	;volatile
  1378                           
  1379                           ;main.c: 205:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1380     0569  3004               	movlw	4
  1381     056A  00F1               	movwf	??_lcd_dat+1
  1382     056B  30E4               	movlw	228
  1383     056C  00F0               	movwf	??_lcd_dat
  1384     056D                     u497:
  1385     056D  0BF0               	decfsz	??_lcd_dat,f
  1386     056E  2D6D               	goto	u497
  1387     056F  0BF1               	decfsz	??_lcd_dat+1,f
  1388     0570  2D6D               	goto	u497
  1389     0571  0000               	nop
  1390                           
  1391                           ;main.c: 207:     PORTEbits.RE0 = 1;
  1392     0572  1283               	bcf	3,5	;RP0=0, select bank0
  1393     0573  1303               	bcf	3,6	;RP1=0, select bank0
  1394     0574  1409               	bsf	9,0	;volatile
  1395     0575  0008               	return
  1396     0576                     __end_of_lcd_dat:
  1397                           
  1398                           	psect	text7
  1399     059E                     __ptext7:	
  1400 ;; *************** function _lcd_send *****************
  1401 ;; Defined at:
  1402 ;;		line 256 in file "main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  dato            1    wreg     unsigned char 
  1405 ;;  tipo            1    0[COMMON] unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  dato            1    3[COMMON] unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1417 ;;      Params:         1       0       0       0       0
  1418 ;;      Locals:         1       0       0       0       0
  1419 ;;      Temps:          2       0       0       0       0
  1420 ;;      Totals:         4       0       0       0       0
  1421 ;;Total ram usage:        4 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430     059E                     _lcd_send:	
  1431                           ;psect for function _lcd_send
  1432                           
  1433                           
  1434                           ;incstack = 0
  1435                           ; Regs used in _lcd_send: [wreg+status,2+status,0]
  1436                           ;lcd_send@dato stored from wreg
  1437     059E  00F3               	movwf	lcd_send@dato
  1438                           
  1439                           ;main.c: 256: void lcd_send(char dato, char tipo);main.c: 257: {;main.c: 260:     TRISD 
      +                          = 0x00;
  1440     059F  1683               	bsf	3,5	;RP0=1, select bank1
  1441     05A0  1303               	bcf	3,6	;RP1=0, select bank1
  1442     05A1  0188               	clrf	8	;volatile
  1443                           
  1444                           ;main.c: 261:     TRISEbits.TRISE1 = 0;
  1445     05A2  1089               	bcf	9,1	;volatile
  1446                           
  1447                           ;main.c: 262:     TRISEbits.TRISE2 = 0;
  1448     05A3  1109               	bcf	9,2	;volatile
  1449                           
  1450                           ;main.c: 264:     PORTEbits.RE0 = 1;
  1451     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1452     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1453     05A6  1409               	bsf	9,0	;volatile
  1454                           
  1455                           ;main.c: 265:     PORTD = dato;
  1456     05A7  0873               	movf	lcd_send@dato,w
  1457     05A8  0088               	movwf	8	;volatile
  1458                           
  1459                           ;main.c: 266:     PORTEbits.RE2 = tipo;
  1460     05A9  0C70               	rrf	lcd_send@tipo,w
  1461     05AA  1C03               	skipc
  1462     05AB  1109               	bcf	9,2	;volatile
  1463     05AC  1803               	skipnc
  1464     05AD  1509               	bsf	9,2	;volatile
  1465                           
  1466                           ;main.c: 267:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1467     05AE  3004               	movlw	4
  1468     05AF  00F2               	movwf	??_lcd_send+1
  1469     05B0  30E4               	movlw	228
  1470     05B1  00F1               	movwf	??_lcd_send
  1471     05B2                     u507:
  1472     05B2  0BF1               	decfsz	??_lcd_send,f
  1473     05B3  2DB2               	goto	u507
  1474     05B4  0BF2               	decfsz	??_lcd_send+1,f
  1475     05B5  2DB2               	goto	u507
  1476     05B6  0000               	nop
  1477                           
  1478                           ;main.c: 268:     PORTEbits.RE0 = 0;
  1479     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1480     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1481     05B9  1009               	bcf	9,0	;volatile
  1482                           
  1483                           ;main.c: 269:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1484     05BA  3004               	movlw	4
  1485     05BB  00F2               	movwf	??_lcd_send+1
  1486     05BC  30E4               	movlw	228
  1487     05BD  00F1               	movwf	??_lcd_send
  1488     05BE                     u517:
  1489     05BE  0BF1               	decfsz	??_lcd_send,f
  1490     05BF  2DBE               	goto	u517
  1491     05C0  0BF2               	decfsz	??_lcd_send+1,f
  1492     05C1  2DBE               	goto	u517
  1493     05C2  0000               	nop
  1494                           
  1495                           ;main.c: 270:     PORTEbits.RE0 = 1;
  1496     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1497     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1498     05C5  1409               	bsf	9,0	;volatile
  1499     05C6  0008               	return
  1500     05C7                     __end_of_lcd_send:
  1501                           
  1502                           	psect	text8
  1503     06C6                     __ptext8:	
  1504 ;; *************** function _lcd_init *****************
  1505 ;; Defined at:
  1506 ;;		line 223 in file "main.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0
  1522 ;;      Temps:          2       0       0       0       0
  1523 ;;      Totals:         2       0       0       0       0
  1524 ;;Total ram usage:        2 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 1
  1527 ;; This function calls:
  1528 ;;		_lcd_cmd
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534     06C6                     _lcd_init:	
  1535                           ;psect for function _lcd_init
  1536                           
  1537                           
  1538                           ;main.c: 225:     TRISD = 0x00;
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1542     06C6  1683               	bsf	3,5	;RP0=1, select bank1
  1543     06C7  1303               	bcf	3,6	;RP1=0, select bank1
  1544     06C8  0188               	clrf	8	;volatile
  1545                           
  1546                           ;main.c: 226:     TRISE = 0x00;
  1547     06C9  0189               	clrf	9	;volatile
  1548                           
  1549                           ;main.c: 227:     PORTEbits.RE0 = 0;
  1550     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1551     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1552     06CC  1009               	bcf	9,0	;volatile
  1553                           
  1554                           ;main.c: 228:     PORTEbits.RE2 = 0;
  1555     06CD  1109               	bcf	9,2	;volatile
  1556                           
  1557                           ;main.c: 229:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1558     06CE  301A               	movlw	26
  1559     06CF  00F4               	movwf	??_lcd_init+1
  1560     06D0  30F8               	movlw	248
  1561     06D1  00F3               	movwf	??_lcd_init
  1562     06D2                     u527:
  1563     06D2  0BF3               	decfsz	??_lcd_init,f
  1564     06D3  2ED2               	goto	u527
  1565     06D4  0BF4               	decfsz	??_lcd_init+1,f
  1566     06D5  2ED2               	goto	u527
  1567     06D6  0000               	nop
  1568                           
  1569                           ;main.c: 230:     PORTEbits.RE0 = 1;
  1570     06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1571     06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1572     06D9  1409               	bsf	9,0	;volatile
  1573                           
  1574                           ;main.c: 232:     lcd_cmd(0x38);
  1575     06DA  3038               	movlw	56
  1576     06DB  120A  118A  2536  120A  118A  	fcall	_lcd_cmd
  1577                           
  1578                           ;main.c: 233:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1579     06E0  3007               	movlw	7
  1580     06E1  00F4               	movwf	??_lcd_init+1
  1581     06E2  307D               	movlw	125
  1582     06E3  00F3               	movwf	??_lcd_init
  1583     06E4                     u537:
  1584     06E4  0BF3               	decfsz	??_lcd_init,f
  1585     06E5  2EE4               	goto	u537
  1586     06E6  0BF4               	decfsz	??_lcd_init+1,f
  1587     06E7  2EE4               	goto	u537
  1588                           
  1589                           ;main.c: 234:     lcd_cmd(0x38);
  1590     06E8  3038               	movlw	56
  1591     06E9  120A  118A  2536  120A  118A  	fcall	_lcd_cmd
  1592                           
  1593                           ;main.c: 235:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1594     06EE  30C7               	movlw	199
  1595     06EF  00F3               	movwf	??_lcd_init
  1596     06F0                     u547:
  1597     06F0  2EF1               	nop2
  1598     06F1  0BF3               	decfsz	??_lcd_init,f
  1599     06F2  2EF0               	goto	u547
  1600     06F3  2EF4               	nop2
  1601     06F4  2EF5               	nop2
  1602                           
  1603                           ;main.c: 236:     lcd_cmd(0x38);
  1604     06F5  3038               	movlw	56
  1605     06F6  120A  118A  2536  120A  118A  	fcall	_lcd_cmd
  1606                           
  1607                           ;main.c: 237:     lcd_cmd(0x08);
  1608     06FB  3008               	movlw	8
  1609     06FC  120A  118A  2536  120A  118A  	fcall	_lcd_cmd
  1610                           
  1611                           ;main.c: 238:     lcd_cmd(0x0F);
  1612     0701  300F               	movlw	15
  1613     0702  120A  118A  2536  120A  118A  	fcall	_lcd_cmd
  1614                           
  1615                           ;main.c: 239:     lcd_cmd(0x01);
  1616     0707  3001               	movlw	1
  1617     0708  120A  118A  2536  120A  118A  	fcall	_lcd_cmd
  1618                           
  1619                           ;main.c: 240:     lcd_cmd(0b00001100);
  1620     070D  300C               	movlw	12
  1621     070E  120A  118A  2536  120A  118A  	fcall	_lcd_cmd
  1622                           
  1623                           ;main.c: 241:     lcd_cmd(0x80);
  1624     0713  3080               	movlw	128
  1625     0714  120A  118A  2536   	fcall	_lcd_cmd
  1626     0717  0008               	return
  1627     0718                     __end_of_lcd_init:
  1628                           
  1629                           	psect	text9
  1630     0536                     __ptext9:	
  1631 ;; *************** function _lcd_cmd *****************
  1632 ;; Defined at:
  1633 ;;		line 210 in file "main.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  val             1    wreg     unsigned char 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  val             1    2[COMMON] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         1       0       0       0       0
  1649 ;;      Temps:          2       0       0       0       0
  1650 ;;      Totals:         3       0       0       0       0
  1651 ;;Total ram usage:        3 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_lcd_init
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660     0536                     _lcd_cmd:	
  1661                           ;psect for function _lcd_cmd
  1662                           
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _lcd_cmd: [wreg]
  1666                           ;lcd_cmd@val stored from wreg
  1667     0536  00F2               	movwf	lcd_cmd@val
  1668                           
  1669                           ;main.c: 210: void lcd_cmd(unsigned char val);main.c: 211: {;main.c: 212:     PORTEbits.
      +                          RE0 = 1;
  1670     0537  1283               	bcf	3,5	;RP0=0, select bank0
  1671     0538  1303               	bcf	3,6	;RP1=0, select bank0
  1672     0539  1409               	bsf	9,0	;volatile
  1673                           
  1674                           ;main.c: 214:     PORTD = val;
  1675     053A  0872               	movf	lcd_cmd@val,w
  1676     053B  0088               	movwf	8	;volatile
  1677                           
  1678                           ;main.c: 215:     PORTEbits.RE2 = 0;
  1679     053C  1109               	bcf	9,2	;volatile
  1680                           
  1681                           ;main.c: 216:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1682     053D  3004               	movlw	4
  1683     053E  00F1               	movwf	??_lcd_cmd+1
  1684     053F  30E4               	movlw	228
  1685     0540  00F0               	movwf	??_lcd_cmd
  1686     0541                     u557:
  1687     0541  0BF0               	decfsz	??_lcd_cmd,f
  1688     0542  2D41               	goto	u557
  1689     0543  0BF1               	decfsz	??_lcd_cmd+1,f
  1690     0544  2D41               	goto	u557
  1691     0545  0000               	nop
  1692                           
  1693                           ;main.c: 217:     PORTEbits.RE0 = 0;
  1694     0546  1283               	bcf	3,5	;RP0=0, select bank0
  1695     0547  1303               	bcf	3,6	;RP1=0, select bank0
  1696     0548  1009               	bcf	9,0	;volatile
  1697                           
  1698                           ;main.c: 218:     _delay((unsigned long)((3)*(4000000/4000.0)));
  1699     0549  3004               	movlw	4
  1700     054A  00F1               	movwf	??_lcd_cmd+1
  1701     054B  30E4               	movlw	228
  1702     054C  00F0               	movwf	??_lcd_cmd
  1703     054D                     u567:
  1704     054D  0BF0               	decfsz	??_lcd_cmd,f
  1705     054E  2D4D               	goto	u567
  1706     054F  0BF1               	decfsz	??_lcd_cmd+1,f
  1707     0550  2D4D               	goto	u567
  1708     0551  0000               	nop
  1709                           
  1710                           ;main.c: 220:     PORTEbits.RE0 = 1;
  1711     0552  1283               	bcf	3,5	;RP0=0, select bank0
  1712     0553  1303               	bcf	3,6	;RP1=0, select bank0
  1713     0554  1409               	bsf	9,0	;volatile
  1714     0555  0008               	return
  1715     0556                     __end_of_lcd_cmd:
  1716                           
  1717                           	psect	text10
  1718     052B                     __ptext10:	
  1719 ;; *************** function _initKeyPad *****************
  1720 ;; Defined at:
  1721 ;;		line 275 in file "main.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1735 ;;      Params:         0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0
  1737 ;;      Temps:          1       0       0       0       0
  1738 ;;      Totals:         1       0       0       0       0
  1739 ;;Total ram usage:        1 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748     052B                     _initKeyPad:	
  1749                           ;psect for function _initKeyPad
  1750                           
  1751                           
  1752                           ;main.c: 277:     TRISD |= 0x0f;
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in _initKeyPad: [wreg+status,2+status,0]
  1756     052B  300F               	movlw	15
  1757     052C  00F0               	movwf	??_initKeyPad
  1758     052D  0870               	movf	??_initKeyPad,w
  1759     052E  1683               	bsf	3,5	;RP0=1, select bank1
  1760     052F  1303               	bcf	3,6	;RP1=0, select bank1
  1761     0530  0488               	iorwf	8,f	;volatile
  1762                           
  1763                           ;main.c: 278:     TRISB &= ~0x07;
  1764     0531  30F8               	movlw	248
  1765     0532  00F0               	movwf	??_initKeyPad
  1766     0533  0870               	movf	??_initKeyPad,w
  1767     0534  0586               	andwf	6,f	;volatile
  1768     0535  0008               	return
  1769     0536                     __end_of_initKeyPad:
  1770     007E                     btemp	set	126	;btemp
  1771     007E                     wtemp0	set	126
  1772                           
  1773                           	psect	idloc
  1774                           
  1775                           ;Config register IDLOC0 @ 0x2000
  1776                           ;	unspecified, using default values
  1777     2000                     	org	8192
  1778     2000  3FFF               	dw	16383
  1779                           
  1780                           ;Config register IDLOC1 @ 0x2001
  1781                           ;	unspecified, using default values
  1782     2001                     	org	8193
  1783     2001  3FFF               	dw	16383
  1784                           
  1785                           ;Config register IDLOC2 @ 0x2002
  1786                           ;	unspecified, using default values
  1787     2002                     	org	8194
  1788     2002  3FFF               	dw	16383
  1789                           
  1790                           ;Config register IDLOC3 @ 0x2003
  1791                           ;	unspecified, using default values
  1792     2003                     	org	8195
  1793     2003  3FFF               	dw	16383
  1794                           
  1795                           	psect	config
  1796                           
  1797                           ;Config register CONFIG @ 0x2007
  1798                           ;	Oscillator Selection bits
  1799                           ;	FOSC = HS, HS oscillator
  1800                           ;	Watchdog Timer Enable bit
  1801                           ;	WDTE = OFF, WDT disabled
  1802                           ;	Power-up Timer Enable bit
  1803                           ;	PWRTE = OFF, PWRT disabled
  1804                           ;	Brown-out Reset Enable bit
  1805                           ;	BOREN = ON, BOR enabled
  1806                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1807                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1808                           ;	Data EEPROM Memory Code Protection bit
  1809                           ;	CPD = OFF, Data EEPROM code protection off
  1810                           ;	Flash Program Memory Write Enable bits
  1811                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1812                           ;	In-Circuit Debugger Mode bit
  1813                           ;	DEBUG = 0x1, unprogrammed default
  1814                           ;	Flash Program Memory Code Protection bit
  1815                           ;	CP = OFF, Code protection off
  1816     2007                     	org	8199
  1817     2007  3F7A               	dw	16250

Data Sizes:
    Strings     17
    Constant    82
    Data        4
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 11
		 -> random_string@str(BANK0[6]), STR_2(CODE[6]), STR_1(CODE[11]), 

    sp__random_string	PTR unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 

    main@code	PTR unsigned char  size(1) Largest target is 6
		 -> random_string@str(BANK0[6]), 


Critical Paths under _main in COMMON

    _random_string->___lwmod
    _rand->___lmul
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    _main->_random_string
    _random_string->___lwmod
    ___lwmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1303
                                             17 BANK0      3     3      0
                         _initKeyPad
                           _lcd_init
                           _lcd_send
                            _lcd_str
                      _random_string
 ---------------------------------------------------------------------------------
 (1) _random_string                                        5     5      0     646
                                             12 BANK0      5     5      0
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             13 COMMON     1     1      0
                                              7 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     340
                                              3 COMMON     4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send                                             4     3      1     272
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initKeyPad                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initKeyPad
   _lcd_init
     _lcd_cmd
   _lcd_send
   _lcd_str
     _lcd_dat
   _random_string
     ___lwmod
       _rand (ARG)
         ___lmul
     _rand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat May 06 18:04:20 2023

                           pc 0002                            l58 0789                            fsr 0004  
                         l920 0603                           l924 0619                           l970 05DD  
                         l974 05EB                           l968 05CF                           l978 05F6  
                         u315 05D2                           u405 077F                           u335 05E3  
                         u345 05EC                           u265 061B                           u507 05B2  
                         u275 0623                           u517 05BE                           u527 06D2  
                         u295 06B8                           u375 0678                           u537 06E4  
                         u547 06F0                           u557 0541                           u477 076A  
                         u567 054D                           u487 0561                           u497 056D  
       __end_of_random_string 067F                           fsr0 0004                           indf 0000  
                        l1040 0577                          l1120 07B0                          l1130 07C9  
                        l1126 07C6                          l1134 07D3                          l1048 063E  
                        l1078 0743                          l1088 074B                          l1098 0759  
                        STR_1 0065                          STR_2 0070                          _TMR0 0001  
                        _main 0718                          _keys 0052                          _rand 067F  
                        btemp 007E                          start 0000                  lcd_send@dato 0073  
                lcd_send@tipo 0070                         ?_main 0070                         ?_rand 0020  
             __end_of___lwmod 05FB                         _PORTB 0006                         _PORTD 0008  
                       _TRISB 0086                         _TRISD 0088                         _TRISE 0089  
             __end_of_colMask 0065           ___lmul@multiplicand 0074               __end_of_lcd_dat 0576  
             __end_of_lcd_cmd 0556               __end_of_lcd_str 059E                         _keyok 0036  
                       _randx 003E                         pclath 000A               __end_of_rowMask 0062  
                       status 0003                         wtemp0 007E              random_string@str 0038  
             __initialization 07DC                  __end_of_main 07DC                  __end_of_keys 005E  
                __end_of_rand 06C6                        ??_main 0031                        ??_rand 0022  
                      _INTCON 000B              __end_of_lcd_init 0718              __end_of_lcd_send 05C7  
                      ___lmul 05FB                     ??___lwmod 007D                     ??_lcd_dat 0070  
                   ??_lcd_cmd 0070                     ??_lcd_str 0075       __end_of__initialization 07FC  
              __pcstackCOMMON 0070                  __pidataBANK0 0527                    __pbssBANK0 0034  
                  __pmaintext 0718                       ?___lmul 0070                ___lmul@product 0079  
                   ?_lcd_init 0070                     ?_lcd_send 0070                    __stringtab 0003  
                  _initKeyPad 052B                       ___lwmod 05C7                       _colMask 0062  
                     _colScan 0035                       __ptext1 063A                       __ptext2 067F  
                     __ptext3 05FB                       __ptext4 05C7                       __ptext5 0576  
                     __ptext6 0556                       __ptext7 059E                       __ptext8 06C6  
                     __ptext9 0536                       _lcd_dat 0556                       _lcd_cmd 0536  
                     _lcd_str 0576                    _keypressed 0037                       _rowMask 005E  
                     _rowScan 0034                    ??_lcd_init 0073                    ??_lcd_send 0071  
        end_of_initialization 07FC            random_string@index 002D                     _PORTEbits 0009  
               _random_string 063A                     _TRISEbits 0089                    lcd_dat@val 0072  
                  lcd_cmd@val 0072                    lcd_str@str 0073                random_string@i 002F  
                 ?_initKeyPad 0070                __end_of___lmul 063A                ?_random_string 0070  
         start_initialization 07DC                      ??___lmul 0078                   __pdataBANK0 003E  
                   ___latbits 0002                 __pcstackBANK0 0020                      ?___lwmod 0027  
                   __pstrings 0003                      ?_lcd_dat 0070               ??_random_string 002C  
                    ?_lcd_cmd 0070                      ?_lcd_str 0073  __end_ofrandom_string@charset 0052  
                 __stringbase 0012             ___lmul@multiplier 0070                  ??_initKeyPad 0070  
          __end_of__stringtab 0013                      __ptext10 052B                      _lcd_init 06C6  
                    _lcd_send 059E            __end_of_initKeyPad 0536                      main@code 0033  
                    lcd_str@i 0076          random_string@charset 0013              ___lwmod@dividend 0029  
                   stringcode 000D                    _OPTION_REG 0081               ___lwmod@divisor 0027  
             ___lwmod@counter 002B                      stringdir 000D                      stringtab 0003  
